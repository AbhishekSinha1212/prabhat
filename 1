
CREATE TABLE ABSTRACT_OBJECT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NOT NULL,
	LONG_ID              CHAR(67) NOT NULL
);

ALTER TABLE ABSTRACT_OBJECT
ADD PRIMARY KEY (ID@);

CREATE TABLE ABSTRACT_TYPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NOT NULL
);

ALTER TABLE ABSTRACT_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE ACCOUNTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE ACCOUNTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ACTIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ACTIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ADBL_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_CONNECTION INTEGER NULL,
	ADBL_USER_CONNECTION_LIMIT VARCHAR(1024) NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	COLLATION_REF        INTEGER NULL,
	CONNECTION_LIMIT     INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENCODING             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	TABLESPACE_REF       INTEGER NULL,
	TEMPLATE             VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	COLLECT_HISTORY      INTEGER NULL,
	ADBL_COLLATION_NAME  INTEGER NULL,
	ADBL_ENCODING        INTEGER NULL
);

ALTER TABLE ADBL_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE ADBL_GROUP_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	COLLECT_HISTORY      INTEGER NULL,
	PWD_EXPIRY           VARCHAR(1024) NULL,
	SYSID                VARCHAR(1024) NULL,
	DEFAULT_PRIORITY     INTEGER NULL,
	MAX_PRIORITY         INTEGER NULL,
	ROW_LIMIT            INTEGER NULL,
	SESSION_TIMEOUT      INTEGER NULL,
	QUERY_TIMEOUT        INTEGER NULL,
	ALLOW_CROSS_JOIN     INTEGER NULL,
	ACCESS_TIME          VARCHAR(1024) NULL,
	CONCURRENT_SESSION   VARCHAR(1024) NULL,
	JOB_MAX              VARCHAR(1024) NULL,
	RES_MIN              INTEGER NULL,
	RES_MAX              INTEGER NULL
);

ALTER TABLE ADBL_GROUP_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE ADBL_LIBRARY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_LIBRARY_URL     VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	ADBL_LIBRARY_AUTHORIZATION VARCHAR(1024) NULL,
	ADBL_LIBRARY_REGION  VARCHAR(1024) NULL
);

ALTER TABLE ADBL_LIBRARY
ADD PRIMARY KEY (ID@);

CREATE TABLE ADBL_ORGANIZATION_KEY_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ADBL_ORGANIZATION_KEY_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ADBL_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_CREATEDATABASE INTEGER NULL,
	ADBL_ROLE_CREATEROLE INTEGER NULL,
	ADBL_ROLE_INHERITS   INTEGER NULL,
	ADBL_ROLE_LOGIN      INTEGER NULL,
	ADBL_ROLE_REPLICATION INTEGER NULL,
	ADBL_ROLE_SUPERUSER  INTEGER NULL,
	CONNECTION_LIMIT     INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_USER_GROUP        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALID_UNTIL          TIMESTAMP NULL
);

ALTER TABLE ADBL_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE ADBL_SORT_KEY_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ADBL_SORT_KEY_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ADBL_SYNONYM
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REMOTE_OBJECT_NAME   VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	OBJECT_SCHEMA_NAME   VARCHAR(1024) NULL
);

ALTER TABLE ADBL_SYNONYM
ADD PRIMARY KEY (ID@);

CREATE TABLE ADBL_TABLESPACE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	LOCATION             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	OPTIONS              VARCHAR(1024) NULL
);

ALTER TABLE ADBL_TABLESPACE
ADD PRIMARY KEY (ID@);

CREATE TABLE ADBL_USER_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_GROUP_ROLE_REF  INTEGER NULL,
	ADBL_ROLE_CREATEDATABASE INTEGER NULL,
	ADBL_USER_AUTHENTICATION INTEGER NULL,
	ADBL_USER_CONNECTION INTEGER NULL,
	ADBL_USER_CONNECTION_LIMIT VARCHAR(1024) NULL,
	ADBL_USER_CREATEUSER INTEGER NULL,
	ADBL_USER_SYSLOGACCESS INTEGER NULL,
	AUTHENTICATION_TYPE  INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	COLLECT_HISTORY      INTEGER NULL,
	EXP_PWD              CHAR(1) NULL,
	PWD_EXPIRY           VARCHAR(1024) NULL,
	AUTH_TYPE            INTEGER NULL,
	SYSID                VARCHAR(1024) NULL,
	DEFAULT_PRIORITY     INTEGER NULL,
	MAX_PRIORITY         INTEGER NULL,
	ROW_LIMIT            INTEGER NULL,
	SESSION_TIMEOUT      INTEGER NULL,
	QUERY_TIMEOUT        INTEGER NULL,
	ALLOW_CROSS_JOIN     INTEGER NULL,
	ACCESS_TIME          VARCHAR(1024) NULL,
	CONCURRENT_SESSION   VARCHAR(1024) NULL,
	NZ_VALID_UNTIL       VARCHAR(1024) NULL,
	RS_VALID_UNTIL       VARCHAR(1024) NULL
);

ALTER TABLE ADBL_USER_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE ADDRESS_CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE ADDRESS_CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AGGREGATE_PARAMETER_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AGGREGATE_PARAMETER_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AGGREGATION_TYPE
(
	ID@                  INTEGER NOT NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNING_OBJECT_REF    INTEGER NULL,
	OWNED_OBJECT_REF     INTEGER NULL,
	TAG_DBMS_ADBL        VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ADBL VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ADBL VARCHAR(1024) NULL,
	TAG_IS_PHYSICAL      CHAR(1) NULL,
	TAG_RELEASE_ADDED    VARCHAR(1024) NULL,
	TAG_HAS_UDP_EDITOR   CHAR(1) NULL,
	TAG_IS_LOGICAL       CHAR(1) NULL,
	TAG_PHYSICAL_NAME_TEXT VARCHAR(1024) NULL,
	TAG_HIDE_IN_EXPLORER CHAR(1) NULL,
	TAG_DBMS_IS_NOT_REPRESENTED CHAR(1) NULL,
	TAG_IS_DERIVED       CHAR(1) NULL,
	TAG_DBMS_TERADATA    VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_TERADATA VARCHAR(1024) NULL,
	TAG_IS_TRANSFORMABLE CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLSERVER VARCHAR(1024) NULL,
	TAG_DBMS_SQLSERVER   VARCHAR(1024) NULL,
	TAG_DBMS_DB2_ZOS     VARCHAR(1024) NULL,
	TAG_DBMS_DB2_UDB     VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DB2_ZOS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DB2_UDB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLAZURE VARCHAR(1024) NULL,
	TAG_DBMS_SQLAZURE    VARCHAR(1024) NULL,
	TAG_DBMS_HIVE        VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_HIVE VARCHAR(1024) NULL,
	TAG_DBMS_MARIADB     VARCHAR(1024) NULL,
	TAG_DBMS_MONGODB     VARCHAR(1024) NULL,
	TAG_DBMS_CASSANDRA   VARCHAR(1024) NULL,
	TAG_DBMS_NEO4J       VARCHAR(1024) NULL,
	TAG_IS_DEPRECATED    CHAR(1) NULL,
	TAG_DBMS_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_DBMS_DYNAMODB    VARCHAR(1024) NULL,
	TAG_IS_GRAPHIC_DATA  CHAR(1) NULL,
	TAG_DEPRECATION_LEVEL INTEGER NULL,
	TAG_RELEASE_DEPRECATED VARCHAR(1024) NULL,
	TAG_DBMS_IS_NOT_TOP_LEVEL_OBJECT CHAR(1) NULL,
	TAG_DBMS_ORACLE      VARCHAR(1024) NULL,
	TAG_LEGACY_OBJECT_IS_DEPENDENT CHAR(1) NULL,
	TAG_LEGACY_OWNERSHIP_DEPTH INTEGER NULL,
	TAG_PHYSICAL_NAME_TEXT_PLURAL VARCHAR(1024) NULL,
	TAG_HAS_HISTORY_TRACKING CHAR(1) NULL,
	TAG_HIDE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ORACLE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DB2_UDB VARCHAR(1024) NULL,
	TAG_HAS_DBMS_EQUIVALENT CHAR(1) NULL,
	TAG_DBMS_INFORMIX    VARCHAR(1024) NULL,
	TAG_DBMS_ARANGODB    VARCHAR(1024) NULL,
	TAG_DBMS_SNOWFLAKE   VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DB2_ZOS VARCHAR(1024) NULL,
	TAG_DBMS_JSON        VARCHAR(1024) NULL,
	TAG_DBMS_MYSQL       VARCHAR(1024) NULL,
	TAG_DBMS_SYNAPSE     VARCHAR(1024) NULL,
	TAG_DBMS_DATABRICKS  VARCHAR(1024) NULL,
	TAG_IS_INTERNAL      CHAR(1) NULL,
	TAG_IS_SCRATCH       CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SQLSERVER VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_TERADATA VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SQLAZURE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_HIVE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_MARIADB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MARIADB VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_CASSANDRA VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_CASSANDRA VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MYSQL VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_MYSQL VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_NEO4J VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_NEO4J VARCHAR(1024) NULL,
	TAG_DBMS_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_IGNORE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_ORACLE VARCHAR(1024) NULL,
	TAG_DBMS_INGRES      VARCHAR(1024) NULL,
	TAG_DBMS_SYBASE      VARCHAR(1024) NULL,
	TAG_HOLDS_USER_SETTINGS CHAR(1) NULL,
	TAG_DBMS_COUCHBASE   VARCHAR(1024) NULL,
	TAG_IS_MART_SECURABLE CHAR(1) NULL,
	TAG_IS_FOR_DATA_MOVEMENT CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_MONGODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MONGODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_COUCHBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_COUCHBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SYNAPSE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYNAPSE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ARANGODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ARANGODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DATABRICKS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DATABRICKS VARCHAR(1024) NULL,
	TAG_IS_COLLECTED_IN_PARENT_IN_EXPLORER CHAR(1) NULL,
	TAG_LEGACY_MM_COUNTABLE CHAR(1) NULL,
	TAG_CAN_BE_HARDENED  CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_INFORMIX VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_REDBRICK VARCHAR(1024) NULL,
	TAG_DBMS_REDBRICK    VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_INFORMIX VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_REDBRICK VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_INGRES VARCHAR(1024) NULL,
	TAG_DBMS_PROGRESS    VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_PROGRESS VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SYBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_DBMS_ISERIES     VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ISERIES VARCHAR(1024) NULL,
	TAG_LEGACY_OBJECT_IS_PHYSICAL CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_AVRO VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_AVRO VARCHAR(1024) NULL,
	TAG_DBMS_AVRO        VARCHAR(1024) NULL,
	TAG_LEGACY_MM_IGNORE_DEFAULT CHAR(1) NULL,
	TAG_IS_FONT_OR_COLOR CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_PROGRESS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ACCESS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_INGRES VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ISERIES VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ODBC VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYBASEIQ VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SYBASEIQ VARCHAR(1024) NULL,
	TAG_IS_DEFAULT       CHAR(1) NULL,
	TAG_DBMS_ACCESS      VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DYNAMODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DYNAMODB VARCHAR(1024) NULL,
	TAG_VSDB_SQLSERVER   VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_JSON VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_JSON VARCHAR(1024) NULL,
	TAG_HIDE_IN_BULK_EDITOR CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_PARQUET VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_PARQUET VARCHAR(1024) NULL,
	TAG_DBMS_PARQUET     VARCHAR(1024) NULL,
	TAG_DBMS_ODBC        VARCHAR(1024) NULL,
	TAG_DBMS_SYBASEIQ    VARCHAR(1024) NULL,
	TAG_LEGACY_MM_CONTAINER CHAR(1) NULL,
	TAG_SUB_MODEL_ROLE   INTEGER NULL,
	TAG_DBMS_SAS         VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ACCESS VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SAS VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ODBC VARCHAR(1024) NULL,
	TAG_IS_ABSTRACT      CHAR(1) NULL
);

ALTER TABLE AGGREGATION_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE ANNOTATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CONSTRAINT    VARCHAR(1024) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCOPE                INTEGER NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	TEXT                 VARCHAR(1024) NULL,
	THEME_REF            INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ANNOTATION
ADD PRIMARY KEY (ID@);

CREATE TABLE ANNOTATION_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ANNOTATION_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE APPLICATION_CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE APPLICATION_CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ARANGODB_COLXN_PERMISSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_ACCESS_TYPE INTEGER NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ENTITY_REF           INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ARANGODB_COLXN_PERMISSION
ADD PRIMARY KEY (ID@);

CREATE TABLE ARANGODB_COLXN_PERMISSION_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ARANGODB_COLXN_PERMISSION_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ARANGODB_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_DBPATH      VARCHAR(1024) NULL,
	ARANGODB_ISSYSTEMDB  CHAR(1) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ARANGODB_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE ARANGODB_DATABASE_PERMISSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_ACCESS_TYPE INTEGER NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ARANGODB_DATABASE_PERMISSION
ADD PRIMARY KEY (ID@);

CREATE TABLE ARANGODB_DATABASE_PERMISSION_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ARANGODB_DATABASE_PERMISSION_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ARANGODB_GRAPH
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_GRAPH_VERTEX_COLLECTION VARCHAR(32000) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ARANGODB_GRAPH
ADD PRIMARY KEY (ID@);

CREATE TABLE ARANGODB_GRAPH_EDGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_GRAPH_EDGE_DEFINITION VARCHAR(32000) NULL,
	ARANGODB_GRAPH_EDGE_FROM_COLLECTION VARCHAR(32000) NULL,
	ARANGODB_GRAPH_EDGE_TO_COLLECTION VARCHAR(32000) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ARANGODB_GRAPH_EDGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ARANGODB_GRAPH_EDGE_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ARANGODB_GRAPH_EDGE_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ARANGODB_TASKS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_TASKS_COMMAND VARCHAR(32000) NULL,
	ARANGODB_TASKS_ID    VARCHAR(32000) NULL,
	ARANGODB_TASKS_NAME  VARCHAR(1024) NULL,
	ARANGODB_TASKS_OFFSET VARCHAR(1024) NULL,
	ARANGODB_TASKS_PARAM VARCHAR(32000) NULL,
	ARANGODB_TASKS_PERIOD VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ARANGODB_TASKS
ADD PRIMARY KEY (ID@);

CREATE TABLE ARANGODB_VIEW_LINKS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_VIEW_LINKS_ANALYZERS VARCHAR(32000) NULL,
	ARANGODB_VIEW_LINKS_COLLECTION_NAME VARCHAR(32000) NULL,
	ARANGODB_VIEW_LINKS_FIELDS VARCHAR(32000) NULL,
	ARANGODB_VIEW_LINKS_INBACKGROUND CHAR(1) NULL,
	ARANGODB_VIEW_LINKS_INCLUDEALLFIELDS CHAR(1) NULL,
	ARANGODB_VIEW_LINKS_STOREVALUES VARCHAR(32000) NULL,
	ARANGODB_VIEW_LINKS_TRACKLISTPOSITIONS CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENTITY_REF           INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_REF             INTEGER NULL
);

ALTER TABLE ARANGODB_VIEW_LINKS
ADD PRIMARY KEY (ID@);

CREATE TABLE ASSOCIATION_TYPE
(
	ID@                  INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NULL,
	PARTICIPATING_OBJECT_REF INTEGER NULL,
	PARTICIPATING_PROPERTY_REF INTEGER NULL,
	LONG_ID              CHAR(67) NULL,
	TAG_IS_PREFETCH      CHAR(1) NULL,
	DEFINITION           VARCHAR(32000) NULL,
	TAG_DBMS_ADBL        VARCHAR(1024) NULL,
	TAG_IS_REFERENCE     CHAR(1) NULL,
	TAG_IS_PHYSICAL      CHAR(1) NULL,
	TAG_HAS_ENUM_VALUES  CHAR(1) NULL,
	TAG_ENUM_VALUES      VARCHAR(1024) NULL,
	TAG_IS_LOGICAL       CHAR(1) NULL,
	TAG_IGNORE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_IS_NOT_REPRESENTED CHAR(1) NULL,
	TAG_RELEASE_DEPRECATED VARCHAR(1024) NULL,
	TAG_DEPRECATION_LEVEL INTEGER NULL,
	TAG_IS_DEPRECATED    CHAR(1) NULL,
	TAG_IS_DERIVED       CHAR(1) NULL,
	TAG_IS_READ_ONLY_IN_UI CHAR(1) NULL,
	TAG_HIDE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_HIDE_IN_BULK_EDITOR CHAR(1) NULL,
	TAG_CAN_HOLD_MULTILINE_TEXT CHAR(1) NULL,
	TAG_ALLOW_EMPTY_VALUE CHAR(1) NULL,
	TAG_COLUMN_WIDTH     INTEGER NULL,
	TAG_MAX_LENGTH       INTEGER NULL,
	TAG_IS_READ_ONLY     CHAR(1) NULL,
	TAG_DBMS_SNOWFLAKE   VARCHAR(1024) NULL,
	TAG_RELEASE_ADDED    VARCHAR(1024) NULL,
	TAG_IS_ORDERED_VECTOR CHAR(1) NULL,
	TAG_IS_ATOMIC_VECTOR CHAR(1) NULL,
	TAG_IS_READ_ONLY_IN_BULK_EDITOR CHAR(1) NULL,
	TAG_INTERNAL_COLUMN_NAMES VARCHAR(1024) NULL,
	TAG_IS_SYSTEM_MAINTAINED CHAR(1) NULL,
	TAG_IS_SCRATCH       CHAR(1) NULL,
	TAG_LEGACY_PROPERTY_IS_TRANSIENT CHAR(1) NULL,
	TAG_DEEP_COPY_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_HIVE        VARCHAR(1024) NULL,
	TAG_DBMS_CASSANDRA   VARCHAR(1024) NULL,
	TAG_DBMS_COUCHBASE   VARCHAR(1024) NULL,
	TAG_LEGACY_PROPERTY_IS_VECTOR CHAR(1) NULL,
	TAG_USES_ERWIN_MACROS CHAR(1) NULL,
	TAG_DBMS_DATABRICKS  VARCHAR(1024) NULL,
	TAG_DBMS_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_DBMS_SQLSERVER   VARCHAR(1024) NULL,
	TAG_DBMS_SQLAZURE    VARCHAR(1024) NULL,
	TAG_DBMS_TERADATA    VARCHAR(1024) NULL,
	TAG_USES_NAME_VALIDATION CHAR(1) NULL,
	TAG_DBMS_DYNAMODB    VARCHAR(1024) NULL,
	TAG_IS_SOURCE_CODE   CHAR(1) NULL,
	TAG_DBMS_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_LEGACY_PROPERTY_VISUALIZER_TYPE VARCHAR(1024) NULL,
	TAG_DBMS_ISERIES     VARCHAR(1024) NULL,
	TAG_CAN_INHERIT_VALUE CHAR(1) NULL,
	TAG_DBMS_ACCESS      VARCHAR(1024) NULL,
	TAG_DBMS_DB2_UDB     VARCHAR(1024) NULL,
	TAG_DBMS_DB2_ZOS     VARCHAR(1024) NULL,
	TAG_LEGACY_PROPERTY_IS_PHYSICAL CHAR(1) NULL,
	TAG_DBMS_SYBASEIQ    VARCHAR(1024) NULL,
	TAG_DBMS_PROGRESS    VARCHAR(1024) NULL,
	TAG_DBMS_ORACLE      VARCHAR(1024) NULL,
	TAG_DBMS_SYNAPSE     VARCHAR(1024) NULL,
	TAG_DBMS_INFORMIX    VARCHAR(1024) NULL,
	TAG_IS_FOR_DATA_MOVEMENT CHAR(1) NULL,
	TAG_IS_SET           CHAR(1) NULL,
	TAG_DBMS_INGRES      VARCHAR(1024) NULL,
	TAG_DBMS_REDBRICK    VARCHAR(1024) NULL,
	TAG_DBMS_ODBC        VARCHAR(1024) NULL,
	TAG_DBMS_MYSQL       VARCHAR(1024) NULL,
	TAG_DBMS_SYBASE      VARCHAR(1024) NULL,
	TAG_DBMS_SAS         VARCHAR(1024) NULL,
	TAG_IS_THREE_STATE_BOOLEAN CHAR(1) NULL,
	TAG_DO_NOT_DELETE_WHEN_FALSE CHAR(1) NULL,
	TAG_LEGACY_PROPERTY_HAS_DEFAULT_VALUE CHAR(1) NULL,
	TAG_CAN_BE_HARDENED  CHAR(1) NULL,
	TAG_USES_NAMING_OPTIONS CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_ORACLE VARCHAR(1024) NULL,
	TAG_DBMS_FOXPRO      VARCHAR(1024) NULL,
	TAG_REPLACES_EXISTING_ELEMENT CHAR(1) NULL,
	TAG_DBMS_MARIADB     VARCHAR(1024) NULL,
	TAG_USES_NAME_MAPPING CHAR(1) NULL,
	TAG_USES_NAMING_STANDARDS CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLSERVER VARCHAR(1024) NULL,
	TAG_DBMS_ARANGODB    VARCHAR(1024) NULL,
	TAG_DBMS_AVRO        VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYBASEIQ VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DB2_UDB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DB2_ZOS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ACCESS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_INGRES VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ODBC VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_PROGRESS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_REDBRICK VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SAS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_TERADATA VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ISERIES VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_FOXPRO VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MYSQL VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_HIVE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MARIADB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DATABRICKS VARCHAR(1024) NULL,
	TAG_DBMS_JSON        VARCHAR(1024) NULL,
	TAG_DBMS_MONGODB     VARCHAR(1024) NULL,
	TAG_DBMS_NEO4J       VARCHAR(1024) NULL,
	TAG_IS_INTERNAL      CHAR(1) NULL,
	TAG_DBMS_PARQUET     VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_INFORMIX VARCHAR(1024) NULL,
	TAG_IS_FONT_OR_COLOR CHAR(1) NULL,
	TAG_IS_COLOR_VALUE   CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_IS_REQUIRED      CHAR(1) NULL,
	TAG_PHYSICAL_NAME_TEXT VARCHAR(1024) NULL,
	TAG_DO_NOT_PROPOGATE CHAR(1) NULL,
	TAG_LEGACY_PROPERTY_IS_INTERNAL CHAR(1) NULL,
	TAG_SHALLOW_COPY_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_IS_TRANSIENT     CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_ADBL VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLAZURE VARCHAR(1024) NULL,
	TAG_IS_GRAPHIC_DATA  CHAR(1) NULL,
	TAG_ENUM_VALUES_2    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_3    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_4    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_5    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_6    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_7    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_8    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_9    VARCHAR(1024) NULL,
	TAG_HAS_PUSH_SEMANTICS CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_CASSANDRA VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_COUCHBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SYNAPSE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYNAPSE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_IS_DIMENSIONAL   CHAR(1) NULL,
	TAG_VSDB_SQLSERVER   VARCHAR(1024) NULL,
	TAG_REFERENCE_META_LEVEL INTEGER NULL,
	TAG_HIDE_IN_EXPLORER CHAR(1) NULL,
	TAG_HANDLE_AS_BITFIELD CHAR(1) NULL,
	TAG_BIT_FIELD_VALUES VARCHAR(1024) NULL,
	TAG_BIT_FIELD_VALUES_2 VARCHAR(1024) NULL,
	TAG_BIT_FIELD_VALUES_3 VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_15   VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_11   VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_12   VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_13   VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_14   VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_10   VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SQLSERVER VARCHAR(1024) NULL,
	TAG_IS_DUPLICATE_ALLOWED CHAR(1) NULL,
	TAG_IS_SORTED        CHAR(1) NULL,
	TAG_IS_ABSTRACT      CHAR(1) NULL
);

ALTER TABLE ASSOCIATION_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE ASYMMETRIC_KEYS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ASYMMETRIC_KEYS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ATTRIBUTE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_COLUMN_KIND INTEGER NULL,
	AWS_KEYSPACE_POSITION VARCHAR(1024) NULL,
	AWS_KEYSPACE_STATIC_COLUMN CHAR(1) NULL,
	ALL_VARRAYS_AS       INTEGER NULL,
	ALLOCATE_AMOUNT      INTEGER NULL,
	ALLOW_ANY_SCHEMA     INTEGER NULL,
	ALLOW_NON_SCHEMA     INTEGER NULL,
	ALLOW_ZERO           CHAR(1) NULL,
	ARANGODB_ATTRIBUTE_KEEPNULL INTEGER NULL,
	ARANGODB_ATTRIBUTE_MERGEOBJECTS INTEGER NULL,
	ARANGODB_ATTRIBUTE_OVERWRITE INTEGER NULL,
	ARANGODB_ATTRIBUTE_OVERWRITEMODE INTEGER NULL,
	ARANGODB_ATTRIBUTE_RETURNNEW INTEGER NULL,
	ARANGODB_ATTRIBUTE_RETURNOLD INTEGER NULL,
	ARANGODB_ATTRIBUTE_SILENT INTEGER NULL,
	ARANGODB_ATTRIBUTE_SYNC INTEGER NULL,
	AS_EXPRESSION        VARCHAR(1024) NULL,
	ATTRIBUTE_ORDER      INTEGER NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	ATTRIBUTE_STATISTICS VARCHAR(1024) NULL,
	AUTO_GENERATE_START  VARCHAR(1024) NULL,
	AUTO_GENERATE_STEP_NUMBER VARCHAR(1024) NULL,
	AVRO_COL_DEFAULT     VARCHAR(1024) NULL,
	AVRO_COL_DOC         VARCHAR(1024) NULL,
	AVRO_COL_NAMESPACE   VARCHAR(1024) NULL,
	AVRO_COL_SUB_NAME    VARCHAR(1024) NULL,
	AVRO_COLUMN_LOGICAL_TYPE VARCHAR(1024) NULL,
	AVRO_UNION_DATA_TYPE_LIST VARCHAR(1024) NULL,
	CACHE_CAPACITY       VARCHAR(1024) NULL,
	CACHE_IDENTITY_COLUMN_VALUES CHAR(1) NULL,
	CARDINALITY_VALUE    VARCHAR(1024) NULL,
	CASSANDRA_COLUMN_KIND INTEGER NULL,
	CASSANDRA_POSITION   VARCHAR(1024) NULL,
	CASSANDRA_STATIC_COLUMN CHAR(1) NULL,
	CHARACTER_CASE_TYPE  INTEGER NULL,
	CHARACTER_SEMANTICS_TYPE INTEGER NULL,
	COL_NOSCHEMAVALIDATOR CHAR(1) NULL,
	COLLATE_SET_VALUE_BY INTEGER NULL,
	COLLATION_NAME       VARCHAR(1024) NULL,
	COLLATION_REF        INTEGER NULL,
	COLUMN_COLLATE       VARCHAR(1024) NULL,
	COLUMN_CONSTRAINT_NAME VARCHAR(1024) NULL,
	COLUMN_ENCRYPTION_KEY_REF INTEGER NULL,
	COLUMN_ENCRYPTION_TYPE INTEGER NULL,
	COLUMN_FORMAT        INTEGER NULL,
	COLUMN_IN_NAME       VARCHAR(1024) NULL,
	COLUMN_KEY_TYPE      INTEGER NULL,
	COLUMN_MASK_FUNCTION VARCHAR(1024) NULL,
	COLUMN_ORDER         INTEGER NULL,
	COLUMNUDT_REF        INTEGER NULL,
	COMMENT              VARCHAR(32000) NULL,
	COMPRESSION_ALGORITHM_REF INTEGER NULL,
	CONSTRAINT_IS_DEFERRABLE INTEGER NULL,
	CONSTRAINT_IS_ENFORCED INTEGER NULL,
	CONSTRAINT_MATCH     INTEGER NULL,
	CONSTRAINT_NOT_NULL  CHAR(1) NULL,
	CONSTRAINT_ON_DELETE INTEGER NULL,
	CONSTRAINT_ON_UPDATE INTEGER NULL,
	CONSTRAINT_DO_ENABLE INTEGER NULL,
	CONSTRAINT_DO_RELY   INTEGER NULL,
	CONSTRAINT_DO_VALIDATE INTEGER NULL,
	CONSTRAINT_WAS_INTIALLY INTEGER NULL,
	DB2_CHARACTER_TYPE   INTEGER NULL,
	DB2_IS_USED_FOR_SECURITY_LABELS CHAR(1) NULL,
	DATA_SOURCE_COMMENT  VARCHAR(4000) NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_INTERNAL_NAME VARCHAR(1024) NULL,
	DATABRICKS_BLOOMFILTERINDEX_COL CHAR(1) NULL,
	DATABRICKS_BLOOMFILTERINDEX_OPTION VARCHAR(32000) NULL,
	DATABRICKS_GENERATEDALWAYSEXPRESS VARCHAR(32000) NULL,
	DECIMALS             INTEGER NULL,
	DECOMPRESSION_ALGORITHM_REF INTEGER NULL,
	DEFAULT_EXPRESSION   VARCHAR(1024) NULL,
	DISPLAY_CONTROL      VARCHAR(1024) NULL,
	DISPLAY_FORMAT_REF   INTEGER NULL,
	DISPLAY_FORMAT_STRING VARCHAR(1024) NULL,
	DISPLAY_INFORMAT_NAME VARCHAR(1024) NULL,
	DYNAMODB_KEY_TYPE    INTEGER NULL,
	DYNAMODB_TYPE        CHAR(1) NULL,
	EXTAB_COLUMN_PARTITION_EXPRESSION VARCHAR(32000) NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	EXTENT_COUNT         INTEGER NULL,
	FONT_CHARACTER_SET   VARCHAR(1024) NULL,
	FONT_COLOR           INTEGER NULL,
	FONT_MONIKER         VARCHAR(1024) NULL,
	FONT_NAME            VARCHAR(1024) NULL,
	FONT_SIZE            INTEGER NULL,
	FONT_STRIKETHROUGH   CHAR(1) NULL,
	FONT_UNDERSCORE      CHAR(1) NULL,
	FOREIGN_REF_COLUMN_NAME VARCHAR(1024) NULL,
	FOREIGN_REF_TABLE_NAME VARCHAR(1024) NULL,
	GENERATE_DEFAULT     CHAR(1) NULL,
	GENERATE_EXPR_TYPE   INTEGER NULL,
	GENERATE_ROW         INTEGER NULL,
	GENERATION_EXPRESSION VARCHAR(1024) NULL,
	GENERATION_TYPE      INTEGER NULL,
	GLOBAL_COL_UDT       INTEGER NULL,
	GOOGLE_BIGQUERY_COL_COLUMN_TYPE INTEGER NULL,
	GOOGLE_BIGQUERY_COL_MODE INTEGER NULL,
	HAS_NO_LOG           CHAR(1) NULL,
	HAS_NO_MAX           CHAR(1) NULL,
	HAS_NO_MIN           CHAR(1) NULL,
	HASH_INDEX_MEMBER_REF INTEGER NULL,
	HEADER               VARCHAR(1024) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	HIVE_STATISTICS_COL_DISTCOUNT VARCHAR(1024) NULL,
	HIVE_STATISTICS_COL_NUMNULLS VARCHAR(1024) NULL,
	HIVE_STATISTICS_COL_AVGCOLLEN VARCHAR(1024) NULL,
	IMAGE_REF            INTEGER NULL,
	INCREMENT_BY         VARCHAR(1024) NULL,
	INLINE_LENGTH        VARCHAR(1024) NULL,
	INPUT_MASK           VARCHAR(1024) NULL,
	INTERNAL_STATE       INTEGER NULL,
	IS_ATTRIBUTE_DATA_VAULT_COMPLAINT CHAR(1) NULL,
	IS_AUTO_COMPRESS     CHAR(1) NULL,
	IS_CALCULATED        CHAR(1) NULL,
	IS_COLOR_INHERITED   INTEGER NULL,
	IS_COLUMN_COMPRESSED CHAR(1) NULL,
	ISCOLUMNUDT          CHAR(1) NULL,
	IS_CYCLE_ON          CHAR(1) NULL,
	IS_DATATYPE_COMPUTED CHAR(1) NULL,
	IS_EMPTY_EQUAL_TO_NULL CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	IS_FONT_BOLD         CHAR(1) NULL,
	IS_FONT_INHERITED    INTEGER NULL,
	IS_FONT_ITALIC       CHAR(1) NULL,
	IS_GENERATED_ALWAYS  CHAR(1) NULL,
	IS_HIDDEN            CHAR(1) NULL,
	IS_IDENTITY_COLUMN   CHAR(1) NULL,
	IS_IMPLICITLY_HIDDEN CHAR(1) NULL,
	IS_LOB_DATA_COMPACTED CHAR(1) NULL,
	IS_LOB_DATA_LOGGED   CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	IS_READ_ONLY         CHAR(1) NULL,
	IS_ROW_CHANGE_TIMESTAMP_COLUMN CHAR(1) NULL,
	IS_SQLSERVER_FILESTREAM CHAR(1) NULL,
	IS_SPARSE            CHAR(1) NULL,
	IS_SPARSE_COLUMN_SET CHAR(1) NULL,
	IS_SYSTEM_MAINTAINED CHAR(1) NULL,
	IS_UNIQUE            CHAR(1) NULL,
	IS_VIRTUAL_COLUMN    CHAR(1) NULL,
	JSON_COL_ADDITIONAL_ITEMS VARCHAR(32000) NULL,
	JSON_COL_ARRAY_OPTIONS INTEGER NULL,
	JSON_COL_ARRAY_VALIDATION_TYPE INTEGER NULL,
	JSON_COL_COMBINING_SCHEMA_OPTIONS INTEGER NULL,
	JSON_COL_CONST       VARCHAR(1024) NULL,
	JSON_COL_CONTENT_ENCODING VARCHAR(1024) NULL,
	JSON_COL_CONTENT_MEDIA_TYPE VARCHAR(1024) NULL,
	JSON_COL_DEFAULT     VARCHAR(32000) NULL,
	JSON_COL_DOC         VARCHAR(1024) NULL,
	JSON_COL_ENUM        VARCHAR(32000) NULL,
	JSON_COL_EXCLUSIVE_MAXIMUM CHAR(1) NULL,
	JSON_COL_EXCLUSIVE_MINIMUM CHAR(1) NULL,
	JSON_COL_FORMAT      VARCHAR(1024) NULL,
	JSON_COL_IS_PATTERN_PROPERTIES CHAR(1) NULL,
	JSON_COL_IS_PROPERTY_NAME CHAR(1) NULL,
	JSON_COL_ISREQUIRED  CHAR(1) NULL,
	JSON_COL_MAX_ITEMS   VARCHAR(1024) NULL,
	JSON_COL_MAXIMUM     VARCHAR(1024) NULL,
	JSON_COL_MIN_ITEMS   VARCHAR(1024) NULL,
	JSON_COL_MINIMUM     VARCHAR(1024) NULL,
	JSON_COL_MULTIPLE_OF VARCHAR(1024) NULL,
	JSON_COL_NAMESPACE   VARCHAR(1024) NULL,
	JSON_COL_PATTERN     VARCHAR(1024) NULL,
	JSON_COL_UNIQUE_ITEMS CHAR(1) NULL,
	JSON_ENTITY_ADDITIONAL_PROPERTIES VARCHAR(32000) NULL,
	JSON_ENTITY_DEPENDENCIES VARCHAR(32000) NULL,
	JSON_ENTITY_REQUIRED VARCHAR(32000) NULL,
	JSON_OBJECT_MAX_LENGTH INTEGER NULL,
	JSON_OBJECT_MAX_PROPERTIES VARCHAR(1024) NULL,
	JSON_OBJECT_MIN_LENGTH INTEGER NULL,
	JSON_OBJECT_MIN_PROPERTIES VARCHAR(1024) NULL,
	JSON_OBJECT_PATTERN_PROPERTIES VARCHAR(32000) NULL,
	JSON_OBJECT_PROPERTY_NAMES VARCHAR(32000) NULL,
	JSON_OBJECT_REF_PROPERTY VARCHAR(32000) NULL,
	JSON_OBJECT_SCHEMA   VARCHAR(1024) NULL,
	JSON_OBJECT_TITLE    VARCHAR(32000) NULL,
	JSON_OBJECT_ID       VARCHAR(1024) NULL,
	LOB_STORAGE_REF      INTEGER NULL,
	LABEL                VARCHAR(1024) NULL,
	LOGICAL_DATA_TYPE    VARCHAR(1024) NULL,
	LOGICAL_LEAD_ATTRIBUTE_REF INTEGER NULL,
	MARIADB_AUTOINCREMENT_COL CHAR(1) NULL,
	MARIADB_CHARACTER_SET VARCHAR(1024) NULL,
	MARIADB_COLLATE      VARCHAR(1024) NULL,
	MARIADB_INVISIBLE_COL CHAR(1) NULL,
	MARIADB_SIGN_ONCOLUMN INTEGER NULL,
	MARIADB_SYSTEMVERSION CHAR(1) NULL,
	MARIADB_SYSTEMVERSIONING_TYPE INTEGER NULL,
	MARIADB_ZEROFILL_COL CHAR(1) NULL,
	MASTER_ATTRIBUTE_REF INTEGER NULL,
	MAX_VALUE            VARCHAR(1024) NULL,
	MAXIMUM_LENGTH_IN_ROW INTEGER NULL,
	MIN_VALUE            VARCHAR(1024) NULL,
	MONGODB_COL_OBJECTID VARCHAR(1024) NULL,
	MYSQL_AUTOINCREMENT_COL CHAR(1) NULL,
	MYSQL_CHARACTER_SET  VARCHAR(1024) NULL,
	MYSQL_COLLATE        VARCHAR(1024) NULL,
	MYSQL_ENGINEATTR     VARCHAR(1024) NULL,
	MYSQL_INVISIBLE_COL  CHAR(1) NULL,
	MYSQL_SECONDARYENGINEATTR VARCHAR(1024) NULL,
	MYSQL_SIGN_ONCOLUMN  INTEGER NULL,
	MYSQL_STORAGEIN      INTEGER NULL,
	MYSQL_SYSTEMVERSION  CHAR(1) NULL,
	MYSQL_SYSTEMVERSIONING_TYPE INTEGER NULL,
	MYSQL_VISIBILITY     INTEGER NULL,
	MYSQL_ZEROFILL_COL   CHAR(1) NULL,
	NEO4J_COL_DOC        VARCHAR(1024) NULL,
	NEO4J_COL_NAMESPACE  VARCHAR(1024) NULL,
	NEO4J_FIELD_CRS      INTEGER NULL,
	NEO4J_FIELD_DAYS     VARCHAR(1024) NULL,
	NEO4J_FIELD_HEIGHT   VARCHAR(1024) NULL,
	NEO4J_FIELD_LATITUDE VARCHAR(1024) NULL,
	NEO4J_FIELD_LONGITUDE VARCHAR(1024) NULL,
	NEO4J_FIELD_MONTHS   VARCHAR(1024) NULL,
	NEO4J_FIELD_NANOSECONDS VARCHAR(1024) NULL,
	NEO4J_FIELD_SECONDS  VARCHAR(1024) NULL,
	NESTED_COL_TYPE      INTEGER NULL,
	NOSQL_COL_FULLNAME   VARCHAR(1024) NULL,
	NOSQL_COL_VALUE      VARCHAR(32000) NULL,
	NON_CLUSTERED        CHAR(1) NULL,
	NOT_ENFORCED         CHAR(1) NULL,
	NULL_OPTION_CONSTRAINT_NAME VARCHAR(1024) NULL,
	NULL_OPTION_TYPE     INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_COLUMN_IDENTITY_OPTION INTEGER NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_CACHE_CAPACITY VARCHAR(1024) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_INCREMENT_BY VARCHAR(1024) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_IS_CACHE_ON CHAR(1) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_IS_CYCLE_ON CHAR(1) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_IS_MAX CHAR(1) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_IS_MIN CHAR(1) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_IS_ORDER_ON CHAR(1) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_MAX_VALUE VARCHAR(1024) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_MIN_VALUE VARCHAR(1024) NULL,
	ORACLE_COLUMN_IDENTITY_OPTIONS_STARTING_VALUE VARCHAR(1024) NULL,
	ORACLE_CONSTRAINT_STATE_REF INTEGER NULL,
	ORACLE_ENCRYPT_ALGO  INTEGER NULL,
	ORACLE_ENCRYPT_SALT  INTEGER NULL,
	ORACLE_INTEGRITY_ALGO INTEGER NULL,
	ORACLE_ISONNULL_COLUMN_IDENTITY CHAR(1) NULL,
	ORACLE_ISONNULL_DEFAULTCOLUMN CHAR(1) NULL,
	ORACLE_ISUSE_COLUMN_IDENTITY CHAR(1) NULL,
	ORACLE_ISWITHVIRTUALCOLUMN CHAR(1) NULL,
	ORACLE_OBJECT_TABLE_REF INTEGER NULL,
	ORACLE_PERIODTIMECOLUMN INTEGER NULL,
	ORACLE_SORT_CLUSTER_ON_COLUMN CHAR(1) NULL,
	ORACLE_VIRTUALCOLUMN_EVAL_EDITION INTEGER NULL,
	ORACLE_VIRTUALCOLUMN_EVAL_EDITION_VALUE VARCHAR(1024) NULL,
	ORACLE_VIRTUALCOLUMN_UNUSABLE_EDITION INTEGER NULL,
	ORACLE_VIRTUALCOLUMN_UNUSABLE_EDITION_VALUE VARCHAR(1024) NULL,
	ORACLE_VISIBILITY_ONCOLUMN INTEGER NULL,
	ORACLE_VISIBILITY_ONVIRTUALCOLUMN INTEGER NULL,
	ORACLE_WITH_START_END_TIME CHAR(1) NULL,
	ORACLE_XML_ELEMENT   VARCHAR(1024) NULL,
	ORACLE_XML_EXPRESSION VARCHAR(32000) NULL,
	ORACLE_XML_STORAGE   INTEGER NULL,
	ORACLE_XML_VARRAYS_STORAGE INTEGER NULL,
	ORDER_NUM            INTEGER NULL,
	ORDER_ON             CHAR(1) NULL,
	PII                  CHAR(1) NULL,
	PARENT_ATTRIBUTE_REF INTEGER NULL,
	PARENT_DOMAIN_REF    INTEGER NULL,
	PARENT_RELATIONSHIP_REF INTEGER NULL,
	PARQUET_ATTRIBUTE_DATATYPE_ANNOTATION VARCHAR(1024) NULL,
	PARQUET_REPETITION_LEVEL INTEGER NULL,
	PARTITION_COL        CHAR(1) NULL,
	PARTITION_COL_EXPRESSION VARCHAR(1024) NULL,
	PASSWORD             VARCHAR(1024) NULL,
	PERCENT_NULL         INTEGER NULL,
	PERIOD_BEGIN_COLUMN_REF INTEGER NULL,
	PERIOD_END_COLUMN_REF INTEGER NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	PHYSICAL_LEAD_ATTRIBUTE_REF INTEGER NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	PHYSICAL_ORDER       INTEGER NULL,
	POPULATE_ALL_ROWS_WITH_DEFAULT_VALUE CHAR(1) NULL,
	PROHIBIT_CHECK_CONSTRAINT_INHERITANCE CHAR(1) NULL,
	PROHIBIT_DEFAULT_CONSTRAINT_INHERITANCE CHAR(1) NULL,
	PROPERTY_CLASS       VARCHAR(1024) NULL,
	PSEUDO_UDT_FIELD_ID  INTEGER NULL,
	PSEUDO_UDT_FIELD_TYPE VARCHAR(1024) NULL,
	RS_COLUMN_ENCODING   INTEGER NULL,
	REAL_COLUMN_ID       INTEGER NULL,
	REF_SYSTEM_ID        VARCHAR(1024) NULL,
	ROW_BEGIN            CHAR(1) NULL,
	ROW_END              CHAR(1) NULL,
	ROW_GUID             INTEGER NULL,
	SQLSERVER_IS_PERSISTED CHAR(1) NULL,
	SQLSERVER_XML_DOCUMENT_TYPE INTEGER NULL,
	SQLSERVER_XML_SCHEMA_COLLECTION_REF INTEGER NULL,
	SW_PROMPT            VARCHAR(1024) NULL,
	SEQUENCE_EXPRESSION  VARCHAR(1024) NULL,
	STARTING_VALUE       VARCHAR(1024) NULL,
	STORAGE_STRATEGY     INTEGER NULL,
	STORE_IN_UPPERCASE   CHAR(1) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	SYSTEM_NAME          VARCHAR(1024) NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TERADATA_COLUMN_PARTITION_NUMBER INTEGER NULL,
	TERADATA_COLUMN_PARTITION_STORAGE_FORMAT INTEGER NULL,
	TERADATA_STORAGE_FORMAT INTEGER NULL,
	TERADATA_TEMPORAL_TYPE INTEGER NULL,
	THEME_REF            INTEGER NULL,
	TIME_ZONE_OPTION     INTEGER NULL,
	TRANS_REPLACED_ATTRIBUTE_SHORT_ID INTEGER NULL,
	TRANS_UNIFICATION_SUPPRESSION_COUNT INTEGER NULL,
	TRANSACTION_START_ID CHAR(1) NULL,
	TYPE                 INTEGER NULL,
	UDB_CHARACTER_TYPE   INTEGER NULL,
	UDB_DATALINK_OPTIONS VARCHAR(1024) NULL,
	UDB_SECURITY_LABEL_REF INTEGER NULL,
	UPDATE_ATTRIBUTE_DEFINITION_TO_MATCH CHAR(1) NULL,
	USER_DEFINED_DATA_TYPE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_EXPRESSION      VARCHAR(1024) NULL,
	VOLUMETRICS_AVERAGE_WIDTH INTEGER NULL,
	ISERIES_CHARACTER_TYPE INTEGER NULL,
	ISERIES_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL
);

ALTER TABLE ATTRIBUTE
ADD PRIMARY KEY (ID@);

CREATE TABLE ATTRIBUTE_NOTE_LIST
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	EVENTTYPE            VARCHAR(1) NULL,
	CREATETIMESTAMP      VARCHAR(19) NULL,
	CREATOR              VARCHAR(256) NULL,
	MODIFIEDTIMESTAMP    VARCHAR(19) NULL,
	MODIFIER             VARCHAR(256) NULL,
	SYSTEMTEXTPARAMETER  VARCHAR(4000) NULL,
	USERTEXT             VARCHAR(4000) NULL
);

ALTER TABLE ATTRIBUTE_NOTE_LIST
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ATTRIBUTE_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_TAG_REF    INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ATTRIBUTE_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE ATTRIBUTES_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ATTRIBUTES_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ATTRIBUTES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ATTRIBUTES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AUDIT_COMPONENT_ACTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPONENT_ACTION_NAME VARCHAR(1024) NULL,
	COMPONENT_ACTION_TYPE INTEGER NULL,
	COMPONENT_OBJECT_NAME VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AUDIT_COMPONENT_ACTION
ADD PRIMARY KEY (ID@);

CREATE TABLE AUDIT_GROUPS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AUDIT_GROUPS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AUDIT_POLICY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUDIT_ACTION_ORDER   INTEGER NULL,
	AUDIT_CONDITION      VARCHAR(1024) NULL,
	AUDIT_CONTAINER      INTEGER NULL,
	AUDIT_EVALUATE_MODE  INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SYSTEM_PRIVILEGE_MAP VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AUDIT_POLICY
ADD PRIMARY KEY (ID@);

CREATE TABLE AUDIT_STANDARD_ACTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACTION_DIRECTORY_NAME VARCHAR(1024) NULL,
	MINING_MODEL_OBJECT_NAME VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STANDARD_ACTION_NAME VARCHAR(1024) NULL,
	STANDARD_ACTION_TYPE INTEGER NULL,
	STANDARD_OTHER_OBJECT_NAME VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AUDIT_STANDARD_ACTION
ADD PRIMARY KEY (ID@);

CREATE TABLE AUTO_ATTACHED_OBJECTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AUTO_ATTACHED_OBJECTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AUTO_POPULATED_DIAGRAMS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AUTO_POPULATED_DIAGRAMS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AUTO_POPULATED_SUBJECT_AREAS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AUTO_POPULATED_SUBJECT_AREAS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AUXILIARY_TABLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	APPEND               CHAR(1) NULL,
	DB2_DATABASE_REF     INTEGER NULL,
	DB2_TABLESPACE_REF   INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	LABEL                VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_ELEMENT_REF INTEGER NULL,
	SCHEMA_REF           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AUXILIARY_TABLE
ADD PRIMARY KEY (ID@);

CREATE TABLE AVAILABLE_FILEGROUPS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_FILEGROUPS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_FILES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_FILES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_PARTITION_ELEMENTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_PARTITION_ELEMENTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_PARTITION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE AVAILABLE_PARTITION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_PRINCIPALS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_RETURN_TABLE_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_RETURN_TABLE_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_ROLES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_ROLES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVAILABLE_SCHEMAS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE AVAILABLE_SCHEMAS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE AVRO_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AVRO_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE AWS_BACKUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_BACKUP_ARN       VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AWS_BACKUP
ADD PRIMARY KEY (ID@);

CREATE TABLE AWS_KEYSPACE_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_DATACENTRES VARCHAR(1024) NULL,
	AWS_KEYSPACE_DURABLE_WRITES INTEGER NULL,
	AWS_KEYSPACE_ITEMPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_REPLICATION_CLASS VARCHAR(1024) NULL,
	AWS_KEYSPACE_REPLICATION_FACTOR VARCHAR(1024) NULL,
	AWS_KEYSPACE_TAG_PROP VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AWS_KEYSPACE_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE AWS_KEYSPACE_DCVALUES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_DCVALUES_NBROFREPLICAS VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AWS_KEYSPACE_DCVALUES
ADD PRIMARY KEY (ID@);

CREATE TABLE AWS_KEYSPACE_TAGS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_TAG_VALUE VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AWS_KEYSPACE_TAGS
ADD PRIMARY KEY (ID@);

CREATE TABLE AWS_REGION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DYNAMODB_REPLICA_REGION INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AWS_REGION
ADD PRIMARY KEY (ID@);

CREATE TABLE AWS_REGION_USAGES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REGION_REF           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE AWS_REGION_USAGES
ADD PRIMARY KEY (ID@);

CREATE TABLE BEND_POINTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(100) NULL
);

ALTER TABLE BEND_POINTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE BLOCKED_ROLES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	BLOCKED_ROLES_REF    INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE BLOCKED_ROLES
ADD PRIMARY KEY (ID@);

CREATE TABLE BLOCKED_ROLES_LIST_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE BLOCKED_ROLES_LIST_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CACHED_VIEW
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_SORT_KEY_COLUMN INTEGER NULL,
	ADBL_TEMPORARY_TYPE  CHAR(1) NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	AWS_KEYSPACE_CDC     INTEGER NULL,
	AWS_KEYSPACE_CLUSTERING_ORDER_BY VARCHAR(1024) NULL,
	AWS_KEYSPACE_DATABASE_REF INTEGER NULL,
	AWS_KEYSPACE_ITEMPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_PRIMARY_KEY_CLAUSE VARCHAR(1024) NULL,
	AWS_KEYSPACE_TBLPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_MAX_INDEX_INTERVAL VARCHAR(1024) NULL,
	AWS_KEYSPACE_MEMTABLE_FLUSH_PERIOD_IN_MS VARCHAR(1024) NULL,
	AWS_KEYSPACE_MIN_INDEX_INTERVAL VARCHAR(1024) NULL,
	AWS_KEYSPACE_SPECULATIVE_RETRY VARCHAR(1024) NULL,
	ACCESS_PARAMETER_TYPE INTEGER NULL,
	ACCESS_PARAMETERS    VARCHAR(32000) NULL,
	ADDITIONAL_PARTITION_NUMBER INTEGER NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_GRAPH_REF   INTEGER NULL,
	AVRO_DATABASE_REF    INTEGER NULL,
	CASSANDRA_CDC        INTEGER NULL,
	CASSANDRA_CACHING_KEYS VARCHAR(1024) NULL,
	CASSANDRA_CACHING_ROWS_PER_PARTITION VARCHAR(1024) NULL,
	CASSANDRA_CLUSTERING_ORDER_BY VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_BACKGROUND_ENABLED CHAR(1) NULL,
	CASSANDRA_COMPACTION_BASE_TIME_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_BUCKET_HIGH VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_BUCKET_LOW VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_SSTABLE_AGE_DAYS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_WINDOW_SIZE_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MIN_SSTABLE_SIZE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_ONLY_PURGE_REPAIRED_TOMBSTONES CHAR(1) NULL,
	CASSANDRA_COMPACTION_SSTABLE_SIZE_IN_MB VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_TIMESTAMP_RESOLUTION VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_TOMBSTONE_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_TOMBSTONE_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_UNCHECKED_TOMBSTONE CHAR(1) NULL,
	CASSANDRA_COMPACTION_WINDOW_SIZE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_WINDOW_UNIT VARCHAR(1024) NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	CASSANDRA_ITEMPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_PRIMARY_KEY_CLAUSE VARCHAR(1024) NULL,
	CASSANDRA_TBLPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_BLOOM_FILTER_FP_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MIN_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPRESSION_CHUNK_LEN_KB VARCHAR(1024) NULL,
	CASSANDRA_COMPRESSION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_CRC_CHECK_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_DCLOCAL_READ_REPAIR_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_DEFAULT_TIME_TO_LIVE VARCHAR(1024) NULL,
	CASSANDRA_GC_GRACE_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_MAX_INDEX_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_MEMTABLE_FLUSH_PERIOD_IN_MS VARCHAR(1024) NULL,
	CASSANDRA_MIN_INDEX_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_READ_REPAIR_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_SPECULATIVE_RETRY VARCHAR(1024) NULL,
	CASSANDRA_SSTABLE_COMPRESSION VARCHAR(1024) NULL,
	CLUSTER_BY           VARCHAR(32000) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	COMPRESS_TYPE        INTEGER NULL,
	COMPUTATION_QUERY_STATE INTEGER NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	DB2_ACCESS_TYPE      INTEGER NULL,
	DB2_AUDIT_ACCESS_TYPE INTEGER NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_COLUMN_ACCESS_CONTROL INTEGER NULL,
	DB2_DATA_CAPTURE     CHAR(1) NULL,
	DB2_DATABASE_REF     INTEGER NULL,
	DB2_EDIT_PROC        VARCHAR(1024) NULL,
	DB2_MAINTAINED_BY    INTEGER NULL,
	DB2_OBJECT_ID        VARCHAR(1024) NULL,
	DB2_PARTITION_SIZE   INTEGER NULL,
	DB2_PARTITION_TYPE   INTEGER NULL,
	DB2_ROW_ACCESS_CONTROL INTEGER NULL,
	DB2_TABLESPACE_REF   INTEGER NULL,
	DB2_VALIDATION_PROCEDURE VARCHAR(1024) NULL,
	DATA                 CHAR(1) NULL,
	DATA_ORGANIZATION_TYPE INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_INTERNAL_NAME VARCHAR(1024) NULL,
	DATABRICKS_DATABASE_REF INTEGER NULL,
	DATABRICKS_LATERAL_VIEW_CLAUSE VARCHAR(32000) NULL,
	DATABRICKS_PIVOT_CLAUSE VARCHAR(32000) NULL,
	DATABRICKS_TABLE_OPTIONS VARCHAR(32000) NULL,
	DATABRICKS_TABLE_USING VARCHAR(1024) NULL,
	DEFAULT_COLLATION    VARCHAR(1024) NULL,
	DEFERRED_SEGMENT     INTEGER NULL,
	DISTRIBUTION_COLUMN_NAME VARCHAR(1024) NULL,
	DISTRIBUTION_OPTIONS INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DYNAMODB_DATABASE_REF INTEGER NULL,
	EDITION              VARCHAR(1024) NULL,
	EVALUATE_USING_EDITION INTEGER NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_DATABASE_REF INTEGER NULL,
	GOOGLE_BIGQUERY_ENABLE_REFRESH CHAR(1) NULL,
	GOOGLE_BIGQUERY_ENTITY_CLUSTERING_COLUMN_LIST VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_EXPIRATION_TIMESTAMP VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_FRIENDLY_NAME VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_INGESTION_TIME_OPTIONS INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_RANGE_END VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_RANGE_INTERVAL VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_RANGE_START VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_SCHEMA INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_SCHEMA_TYPE INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITION_EXPIRATION_DAYS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITION_EXPRESSION VARCHAR(32000) NULL,
	GOOGLE_BIGQUERY_REFRESH_INTERVAL_MINUTES VARCHAR(1024) NULL,
	GROUP_BY_CLAUSE      VARCHAR(4000) NULL,
	HAS_NO_PRIMARY_INDEX CHAR(1) NULL,
	HAS_RESTRICTION_ON_DROP CHAR(1) NULL,
	HAS_VOLATILE_CARDINALITY CHAR(1) NULL,
	HAVING_CLAUSE        VARCHAR(4000) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	HIERARCHICAL_CONDITION VARCHAR(1024) NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	HIVE_INPUTFORMAT     VARCHAR(1024) NULL,
	HIVE_LOCATION        VARCHAR(1024) NULL,
	HIVE_OUTPUTFORMAT    VARCHAR(1024) NULL,
	HIVE_OVERWRITETBLPROPERTIES VARCHAR(32000) NULL,
	HIVE_ROW_FORMAT_COLLECTIONITEMS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_FIELDS_ESCAPEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_FIELDS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_LINES_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_MAPKEYS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_NULL_DEFINEDAS VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_SERDE VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_SERDEPROPERTIES VARCHAR(32000) NULL,
	HIVE_STOREDAS        INTEGER NULL,
	HIVE_STOREDBY        VARCHAR(1024) NULL,
	HIVE_TABLE_COMPACT   INTEGER NULL,
	HIVE_TABLE_CONCATENATE CHAR(1) NULL,
	HIVE_TABLE_TOUCH     CHAR(1) NULL,
	HIVE_TBLPROPERTIES   VARCHAR(32000) NULL,
	HIVE_TBLSKEWEDCOLUMNVALUE VARCHAR(32000) NULL,
	HIVE_TYPE            CHAR(1) NULL,
	ICON_IMAGE_REF       INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	INCLUDING_COLUMN_REF INTEGER NULL,
	INDEX_BUILD_TYPE     INTEGER NULL,
	INDEX_REF            INTEGER NULL,
	IS_APPENDABLE        CHAR(1) NULL,
	IS_AUTO_COMPRESS     CHAR(1) NULL,
	IS_CTAS              CHAR(1) NULL,
	IS_COLUMN_PARTITIONED CHAR(1) NULL,
	IS_KEY_SEQUENCE_OVERFLOW_ALLOWED CHAR(1) NULL,
	IS_LOGGING_INDEX_BUILDS CHAR(1) NULL,
	IS_QUERY_OPTIMIZATION_DISABLED CHAR(1) NULL,
	IS_SECURE            CHAR(1) NULL,
	IS_TABLE_COMPRESSED  CHAR(1) NULL,
	IS_TABLE_ROW_COMPRESSED CHAR(1) NULL,
	IS_UPDATEABLE        CHAR(1) NULL,
	JSON_DATABASE_REF    INTEGER NULL,
	KEY_SEQUENCE_PERCENT_FREE INTEGER NULL,
	LABEL                VARCHAR(1024) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MODE                 INTEGER NULL,
	MONGODB_DATABASE_REF INTEGER NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_LABEL_REF      INTEGER NULL,
	NEO4J_RELATIONSHIP_REF INTEGER NULL,
	NEO4J_USER_HOME_DATABASE_REF INTEGER NULL,
	NO_CYCLE             CHAR(1) NULL,
	NOSQLSCRIPTTEXT      VARCHAR(32000) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CACHE         CHAR(1) NULL,
	ORACLE_CLUSTER_REF   INTEGER NULL,
	ORACLE_DATA_STORAGE_TYPE INTEGER NULL,
	ORACLE_DIRECTORY_REF INTEGER NULL,
	ORACLE_ENABLE_ROW_MOVEMENT CHAR(1) NULL,
	ORACLE_HAS_ROW_DEPENDENCIES CHAR(1) NULL,
	ORACLE_HEAP_STORAGE_REF INTEGER NULL,
	ORACLE_INDEX_STORAGE_REF INTEGER NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_OBJECT_TABLE_REF INTEGER NULL,
	ORACLE_OVERFLOW_STORAGE_REF INTEGER NULL,
	ORACLE_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_PARTITION_TYPE INTEGER NULL,
	ORACLE_PHYSICAL_STORAGE_REF INTEGER NULL,
	ORACLE_PREFIX_COMPRESSION INTEGER NULL,
	ORACLE_PREFIX_COMPRESSION_VALUE VARCHAR(1024) NULL,
	ORACLE_REGULAR_STORAGE_REF INTEGER NULL,
	ORACLE_TBL_COMPRESS_NOCOMPRESS INTEGER NULL,
	ORACLE_USES_PREBUILT_TABLE CHAR(1) NULL,
	ORACLE_USES_REDUCED_PRECISION CHAR(1) NULL,
	ORACLE_USING_CONSTRAINT_TYPE INTEGER NULL,
	ORACLE_USING_INDEX_STORAGE_REF INTEGER NULL,
	ORACLE_VIEW_SIBLING  CHAR(1) NULL,
	ORDER_BY_CLAUSE      VARCHAR(4000) NULL,
	PARALLEL_MODE        INTEGER NULL,
	PARQUET_DATABASE_REF INTEGER NULL,
	PERCENT_FREE         INTEGER NULL,
	PERCENT_THRESHOLD    VARCHAR(1024) NULL,
	QUALIFY_CLAUSE       VARCHAR(1024) NULL,
	QUERY_REWRITE_STATE_MODE INTEGER NULL,
	RS_DIST_STYLE        INTEGER NULL,
	REBUILD_DISABLE      INTEGER NULL,
	REFRESH_LOCAL_ROLLBACK_SEGMENT_REF INTEGER NULL,
	REFRESH_LOCAL_ROLLBACK_SEGMENT_STATE INTEGER NULL,
	REFRESH_MASTER_ROLLBACK_SEGMENT_REF INTEGER NULL,
	REFRESH_MASTER_ROLLBACK_SEGMENT_STATE INTEGER NULL,
	REFRESH_MODE         INTEGER NULL,
	REFRESH_NEXT_DATE    VARCHAR(1024) NULL,
	REFRESH_START_DATE   VARCHAR(1024) NULL,
	REFRESH_STATE        INTEGER NULL,
	REFRESH_TYPE         INTEGER NULL,
	REFRESH_WITH_KEY_TYPE INTEGER NULL,
	REJECT_LIMIT         VARCHAR(1024) NULL,
	REJECT_LIMIT_TYPE    INTEGER NULL,
	SF_COPY_GRANTS       CHAR(1) NULL,
	SQL                  VARCHAR(1024) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SELECT_TOP_ROWS_COUNT INTEGER NULL,
	SELECT_TYPE          INTEGER NULL,
	SNOWFLAKE_DATABASE_REF INTEGER NULL,
	SORT_BY_CLAUSE       VARCHAR(4000) NULL,
	START_WITH_CONDITION VARCHAR(1024) NULL,
	STORAGE_PARAMETER    VARCHAR(32000) NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	SYNAPSE_DATABASE_REF INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	TABLE_MAPPING_MODE   INTEGER NULL,
	TABLESPACE_REF       INTEGER NULL,
	TERADATA_BLOCK_COMPRESSION INTEGER NULL,
	TERADATA_CHECKSUM    INTEGER NULL,
	TERADATA_COLUMN_PARTITION_ALL_BUT CHAR(1) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_FALLBACK_PROTECTION INTEGER NULL,
	TERADATA_PARTITIONING_EXPRESSION VARCHAR(32000) NULL,
	TERADATA_TRANSACTIONTIME_QUALIFIER INTEGER NULL,
	TERADATA_VALIDTIME_QUALIFIER INTEGER NULL,
	THEME_REF            INTEGER NULL,
	TYPE                 INTEGER NULL,
	UDB_AUDIT_POLICY_REF INTEGER NULL,
	UDB_COMPRESS_YES     INTEGER NULL,
	UDB_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	UDB_CYCLE_TABLESPACES CHAR(1) NULL,
	UDB_DATA_CAPTURE     INTEGER NULL,
	UDB_DISTRIBUTION_TYPE INTEGER NULL,
	UDB_INDEX_TABLESPACE_REF INTEGER NULL,
	UDB_LOCK_TYPE        INTEGER NULL,
	UDB_MAINTAINED_BY    INTEGER NULL,
	UDB_NOT_INITIALLY_LOGGED CHAR(1) NULL,
	UDB_ORGANIZATION_TYPE INTEGER NULL,
	UDB_PERCENT_FREE     INTEGER NULL,
	UDB_REFRESH_IS_DEFERRED CHAR(1) NULL,
	UDB_SECURITY_POLICY_REF INTEGER NULL,
	UDB_TYPE             INTEGER NULL,
	UNUSABLE_BEFORE_EDITION INTEGER NULL,
	UNUSABLE_BEGINNING_WITH_EDITION INTEGER NULL,
	USE_GLOBAL_SYNTAX    CHAR(1) NULL,
	USE_INDEX            INTEGER NULL,
	USE_OVERFLOW         CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USE_TEMPORARY_SYNTAX CHAR(1) NULL,
	USER_DEFINED_SQL     VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WHERE_CLAUSE         VARCHAR(1024) NULL,
	MV_STATUS            INTEGER NULL,
	ADBL_BACK_UP         INTEGER NULL
);

ALTER TABLE CACHED_VIEW
ADD PRIMARY KEY (ID@);

CREATE TABLE CACHED_VIEW_DEFINITION_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE CACHED_VIEW_DEFINITION_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CACHED_VIEW_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE CACHED_VIEW_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CACHED_VIEW_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CACHED_VIEW_TAG_REF  INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CACHED_VIEW_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE CACHEDVIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_CACHEDVIEW_PERMISSIONS VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CACHEDVIEW_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE CASSANDRA_AGGREGATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CASSANDRA_AGGREGATE_FINAL_FUNC VARCHAR(1024) NULL,
	CASSANDRA_AGGREGATE_INIT_COND VARCHAR(1024) NULL,
	CASSANDRA_AGGREGATE_STATIC_DATA_TYPE VARCHAR(1024) NULL,
	CASSANDRA_AGGREGATE_STATIC_FUNC VARCHAR(1024) NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CASSANDRA_AGGREGATE
ADD PRIMARY KEY (ID@);

CREATE TABLE CASSANDRA_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CASSANDRA_DATACENTRES VARCHAR(1024) NULL,
	CASSANDRA_DURABLE_WRITES INTEGER NULL,
	CASSANDRA_ITEMPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_REPLICATION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_REPLICATION_FACTOR VARCHAR(1024) NULL,
	CASSANDRA_ROLE_REF   INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CASSANDRA_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE CASSANDRA_DCVALUES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CASSANDRA_DCVALUES_NBROFREPLICAS VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CASSANDRA_DCVALUES
ADD PRIMARY KEY (ID@);

CREATE TABLE CAST
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PROCEDURE_REF        INTEGER NULL,
	PROCEDURE_TYPE       INTEGER NULL,
	SOURCE_DATA_TYPE     VARCHAR(1024) NULL,
	SOURCE_USER_TYPE_REF INTEGER NULL,
	TARGET_DATA_TYPE     VARCHAR(1024) NULL,
	TARGET_USER_TYPE_REF INTEGER NULL,
	TERADATA_AS_ASSIGNMENT CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CAST
ADD PRIMARY KEY (ID@);

CREATE TABLE CATALOG
(
	C_ID                 INTEGER NOT NULL,
	C_NAME               VARCHAR(1024) NOT NULL,
	C_TYPE               CHAR(20) NOT NULL,
	C_IS_HIDDEN          CHAR(1) NOT NULL,
	C_OWNER              VARCHAR(1024) NOT NULL,
	C_DESCRIPTION        VARCHAR(1024) NULL,
	C_CONTAINER_ID       INTEGER NULL,
	C_CONTAINER_NAME     VARCHAR(1024) NULL,
	C_VERSION            INTEGER NULL
);

ALTER TABLE CATALOG
ADD PRIMARY KEY (C_ID);

CREATE TABLE CATEGORY_MEMBER
(
	ID@                  INTEGER NOT NULL,
	MEMBER@              INTEGER NOT NULL
);

ALTER TABLE CATEGORY_MEMBER
ADD PRIMARY KEY (ID@,MEMBER@);

CREATE TABLE CATEGORY_TYPE
(
	ID@                  INTEGER NOT NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	DEFINITION           VARCHAR(32000) NULL,
	TAG_RELEASE_ADDED    VARCHAR(1024) NULL
);

ALTER TABLE CATEGORY_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE CERTIFICATES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE CERTIFICATES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CHECK_CONSTRAINT_USAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	DB2_OBJECT_ID        VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	FORCE_CHECKING_OF_EXISTING_DATA CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	IS_ENFORCED          CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	IS_QUERY_OPTIMIZATION_DISABLED CHAR(1) NULL,
	IS_TRUSTED           INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_CHECK_CONSTRAINT_USAGE_REF INTEGER NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	SERVER_VALUE         VARCHAR(1024) NULL,
	TERADATA_TRANSACTIONTIME_QUALIFIER INTEGER NULL,
	TERADATA_VALIDTIME_QUALIFIER INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATION_RULE_REF  INTEGER NULL
);

ALTER TABLE CHECK_CONSTRAINT_USAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE CHILD_OBJECT_TYPES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE CHILD_OBJECT_TYPES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CHILD_RELATIONSHIPS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE CHILD_RELATIONSHIPS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE COLLATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COPY_COLLATION_REF   INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	LC_CTYPE             VARCHAR(1024) NULL,
	LC_COLLATE           VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	LOCALE               VARCHAR(1024) NULL
);

ALTER TABLE COLLATION
ADD PRIMARY KEY (ID@);

CREATE TABLE COLUMN_CLUSTER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CLUSTER_BY           VARCHAR(32000) NULL,
	COLUMN_CLUSTER_REF   INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COLUMN_CLUSTER
ADD PRIMARY KEY (ID@);

CREATE TABLE COLUMN_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_COLUMN_PERMISSIONS VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COLUMN_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE COLUMN_STORE_INDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DROP_EXISTING        INTEGER NULL,
	IS_CLUSTERED         CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONLINE               CHAR(1) NULL,
	SQLSERVER_COMPRESSION_DELAY VARCHAR(1024) NULL,
	SQLSERVER_DROP_EXISTING_INDEX CHAR(1) NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_MAX_PARALLEL INTEGER NULL,
	SQLSERVER_PARTITION_SCHEME_REF INTEGER NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WHERE_CLAUSE         VARCHAR(1024) NULL
);

ALTER TABLE COLUMN_STORE_INDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE COLUMN_STORE_INDEX_MEMBER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COLUMN_STORE_INDEX_MEMBER
ADD PRIMARY KEY (ID@);

CREATE TABLE COLUMN_STORE_INDEX_MEMBERS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE COLUMN_STORE_INDEX_MEMBERS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE COLUMNS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE COLUMNS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE COMMON_TABLE_EXPRESSION
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE COMMON_TABLE_EXPRESSION
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE COMPLETE_COMPARE_FILTER_OPTIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE COMPLETE_COMPARE_FILTER_OPTIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE COMPRESS_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE COMPRESS_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CONTROL_FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FORCE_LOGGING        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ARCHIVE_LOG   CHAR(1) NULL,
	ORACLE_CAN_REUSE_CONTROL_FILE CHAR(1) NULL,
	ORACLE_CHARACTER_SET VARCHAR(1024) NULL,
	ORACLE_DATABASE_REF  INTEGER NULL,
	ORACLE_FILE_SET      CHAR(1) NULL,
	ORACLE_MAX_DATA_FILES VARCHAR(1024) NULL,
	ORACLE_MAX_INSTANCES VARCHAR(1024) NULL,
	ORACLE_MAX_LOG_FILES VARCHAR(1024) NULL,
	ORACLE_MAX_LOG_HISTORY VARCHAR(1024) NULL,
	ORACLE_MAX_LOG_MEMBERS VARCHAR(1024) NULL,
	ORACLE_ROLE_REF      INTEGER NULL,
	RESET_LOGS           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE CONTROL_FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_ANALYZER_CHARACTER_FILTERS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_CHARACTER_FILTER_NAME VARCHAR(32000) NULL,
	COUCHBASE_CHARACTER_FILTER_REGEX VARCHAR(32000) NULL,
	COUCHBASE_CHARACTER_FILTER_REPLACEMENT VARCHAR(32000) NULL,
	COUCHBASE_CHARACTER_FILTER_TYPE INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_ANALYZER_CHARACTER_FILTERS
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_ANALYZER_DATE_TIME_PARSER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_DATE_TIME_PARSER_LAYOUTS VARCHAR(32000) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_ANALYZER_DATE_TIME_PARSER
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_ANALYZER_TOKEN_FILTERS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_TOKEN_FILTER_MAX VARCHAR(32000) NULL,
	COUCHBASE_TOKEN_FILTER_MIN VARCHAR(32000) NULL,
	COUCHBASE_TOKEN_FILTER_NAME VARCHAR(32000) NULL,
	COUCHBASE_TOKEN_FILTER_TYPE INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_ANALYZER_TOKEN_FILTERS
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_ANALYZER_TOKENIZER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_TOKENIZER_NAME VARCHAR(32000) NULL,
	COUCHBASE_TOKENIZER_REGEX VARCHAR(32000) NULL,
	COUCHBASE_TOKENIZER_TYPE INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_ANALYZER_TOKENIZER
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_ANALYZER_WORD_LIST
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_WORD_LIST_NAME VARCHAR(32000) NULL,
	COUCHBASE_WORD_LIST_WORD VARCHAR(32000) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_ANALYZER_WORD_LIST
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_COLLECTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_COLLECTION_TTL VARCHAR(1024) NULL,
	COUCHBASE_SCOPE_REF  INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_COLLECTION
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_COMPACT_ABORT_OUTSIDE_TIME_INTERVAL CHAR(1) NULL,
	COUCHBASE_BUCKET_COMPACT_END_TIME VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_COMPACT_INDEX_VIEW_IN_PARALLEL CHAR(1) NULL,
	COUCHBASE_BUCKET_COMPACT_PURGE_INTERVAL VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_COMPACT_START_TIME VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_COMPRESSION_MODE INTEGER NULL,
	COUCHBASE_BUCKET_CONFLICT_RESOLUTION INTEGER NULL,
	COUCHBASE_BUCKET_DB_FRAGMENT_IN_MB VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_DB_FRAGMENT_IN_PCT VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_DURABILITYMINLEVEL INTEGER NULL,
	COUCHBASE_BUCKET_EJECTION_METHOD INTEGER NULL,
	COUCHBASE_BUCKET_EJECTION_POLICY INTEGER NULL,
	COUCHBASE_BUCKET_FLUSH CHAR(1) NULL,
	COUCHBASE_BUCKET_MAX_TTL VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_MEMORY_SIZE VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_PRIORITY INTEGER NULL,
	COUCHBASE_BUCKET_REPLICA_NUMBER VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_REPLICA_VIEW_INDEXES CHAR(1) NULL,
	COUCHBASE_BUCKET_TYPE INTEGER NULL,
	COUCHBASE_BUCKET_VIEW_FRAGMENT_IN_MB VARCHAR(1024) NULL,
	COUCHBASE_BUCKET_VIEW_FRAGMENT_IN_PCT VARCHAR(1024) NULL,
	COUCHBASE_USER_ID_REF INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NOSQLDOCUMENTCOUNT   VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE COUCHBASE_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_FULLTEXT_ANALYZER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_FULLTEXT_ANALYZER_CHARFILTER VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_ANALYZER_NAME VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_ANALYZER_TOKENFILTER VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_ANALYZER_TOKENIZER VARCHAR(32000) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_FULLTEXT_ANALYZER
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_FULLTEXT_TYPEMAPPING
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_FULLTEXT_TYPEMAPPING_ANALYZER VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_TYPEMAPPING_NAME VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_TYPEMAPPING_ONLY_FIELD CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_FULLTEXT_TYPEMAPPING
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_FULLTEXTINDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	COUCHBASE_CHARACTER_FILTER_REF INTEGER NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	COUCHBASE_DATE_TIME_PARSER_REF INTEGER NULL,
	COUCHBASE_DEFAULT_ANALYZER VARCHAR(1024) NULL,
	COUCHBASE_DEFAULT_DATE_TIME_PARSER VARCHAR(1024) NULL,
	COUCHBASE_DEFAULT_FIELD VARCHAR(1024) NULL,
	COUCHBASE_DEFAULT_TYPE VARCHAR(1024) NULL,
	COUCHBASE_FULLTEXT_ANALYZER_REF INTEGER NULL,
	COUCHBASE_FULLTEXTINDEX_DOCID_REGEX VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXTINDEX_DOCID_SEPARATOR VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXTINDEX_IDENTIFIER_TYPE INTEGER NULL,
	COUCHBASE_FULLTEXTINDEX_JSON_TYPE_FIELD VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_INDEX_PARTITIONS VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_INDEX_REPLICAS VARCHAR(32000) NULL,
	COUCHBASE_FULLTEXT_INDEX_TYPE INTEGER NULL,
	COUCHBASE_FULLTEXT_TYPEMAPPING_REF INTEGER NULL,
	COUCHBASE_INDEX_DYNAMIC_FIELDS CHAR(1) NULL,
	COUCHBASE_INDEX_SCRIPT VARCHAR(32000) NULL,
	COUCHBASE_STORE_DYNAMIC_FIELDS CHAR(1) NULL,
	COUCHBASE_TOKEN_FILTER_REF INTEGER NULL,
	COUCHBASE_TOKENIZER_REF INTEGER NULL,
	COUCHBASE_WORD_LIST_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_FULLTEXTINDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_GLOBALINDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	COUCHBASE_ARRSIZE    VARCHAR(1024) NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	COUCHBASE_DEFER_BUILD CHAR(1) NULL,
	COUCHBASE_DOCKEYSIZE VARCHAR(1024) NULL,
	COUCHBASE_INDEX_ISPRIMARY CHAR(1) NULL,
	COUCHBASE_INDEX_PARTITIONBY VARCHAR(32000) NULL,
	COUCHBASE_INDEX_USING CHAR(1) NULL,
	COUCHBASE_INDEX_SCRIPT VARCHAR(32000) NULL,
	COUCHBASE_INDEX_WHERE VARCHAR(32000) NULL,
	COUCHBASE_NODES      VARCHAR(32000) NULL,
	COUCHBASE_NUMDOC     VARCHAR(1024) NULL,
	COUCHBASE_NUM_PARTITION VARCHAR(1024) NULL,
	COUCHBASE_NUM_REPLICA VARCHAR(1024) NULL,
	COUCHBASE_RESIDENTRATIO VARCHAR(1024) NULL,
	COUCHBASE_SECKEYSIZE VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_GLOBALINDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE COUCHBASE_SCOPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE COUCHBASE_SCOPE
ADD PRIMARY KEY (ID@);

CREATE TABLE CREATED
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NOT NULL,
	OWNER_PATH           VARCHAR(1024) NULL
);

CREATE TABLE CURRENT_CLIENT_ACCOUNTING_CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE CURRENT_CLIENT_ACCOUNTING_CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CURRENT_CLIENT_APPLICATION_CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE CURRENT_CLIENT_APPLICATION_CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CURRENT_CLIENT_USER_ID_CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE CURRENT_CLIENT_USER_ID_CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CURRENT_CLIENT_WORKSTATION_CONNECTION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE CURRENT_CLIENT_WORKSTATION_CONNECTION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE CURRENT_DIAGRAM
(
	ENTIRE_MF            VARCHAR(1024) NULL
);

CREATE TABLE CUSTOM_COLORS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE CUSTOM_COLORS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DATA_MOVEMENT_RULE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_MOVEMENT_RULE
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_SOURCE_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATA_SOURCE_COLUMN_TABLE_REF INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_SOURCE_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_SOURCE_OBJECT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATA_SOURCE_DBMS_TYPE VARCHAR(1024) NULL,
	DATA_SOURCE_DBMS_VERSION VARCHAR(1024) NULL,
	DATA_SOURCE_HOST     VARCHAR(1024) NULL,
	DATA_SOURCE_IMPORT_TYPE INTEGER NULL,
	DATA_SOURCE_SERVER   VARCHAR(1024) NULL,
	DATA_SOURCE_SYSTEM   VARCHAR(1024) NULL,
	DATA_SOURCE_TYPE     INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_SOURCE_OBJECT
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_SOURCE_TABLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATA_SOURCE_TABLE_SOURCE_REF INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_SOURCE_TABLE
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_SOURCES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DATA_SOURCES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DATA_VAULT_BRIDGE_DEFAULTS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_VAULT_BRIDGE_DEFAULTS
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_VAULT_CHANGES_LOG
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE DATA_VAULT_CHANGES_LOG
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DATA_VAULT_OBJECT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATA_VAULT_OBJECT_PROPERTIES_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FONT_COLOR           INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_CLASS         VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_PREFIX        VARCHAR(1024) NULL,
	OBJECT_SUFFIX        VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_VAULT_OBJECT
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_VAULT_OBJECT_PROPERTIES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	APPENDENTITYNAMESUFPRE INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MANDATORY_OPTIONAL   CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_DOMAIN_REF    INTEGER NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	PROPERTY_CLASS       VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATA_VAULT_OBJECT_PROPERTIES
ADD PRIMARY KEY (ID@);

CREATE TABLE DATA_VAULT_OBJECT_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DATA_VAULT_OBJECT_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_DATABASE_PERMISSIONS VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE DATABASE_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_ITEMPROPERTIES VARCHAR(32000) NULL,
	AUTHORIZATION        VARCHAR(1024) NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	CASSANDRA_ITEMPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_ROLE_ACCESS_ALLDC CHAR(1) NULL,
	CASSANDRA_ROLE_LOGIN CHAR(1) NULL,
	CASSANDRA_ROLE_PASSWORD VARCHAR(1024) NULL,
	CASSANDRA_ROLE_SUPERUSER CHAR(1) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_EXTERNAL          CHAR(1) NULL,
	MARIADB_CURRENT_ROLE_OR_USER INTEGER NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_ROLE_REF     INTEGER NULL,
	MARIADB_USER_ID_REF  INTEGER NULL,
	MARIADB_WITH_ADMIN   CHAR(1) NULL,
	MYSQL_CURRENT_ROLE_OR_USER INTEGER NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_ROLE_REF       INTEGER NULL,
	MYSQL_USER_ID_REF    INTEGER NULL,
	MYSQL_WITH_ADMIN     CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_IF_NOT_EXIST   CHAR(1) NULL,
	NEO4J_ROLE_AS_COPY_OF_REF INTEGER NULL,
	NEO4J_ROLE_CREATE_OR_REPLACE CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	UDB_AUDIT_POLICY_REF INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE DATABASE_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE DATABASE_ROLE_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ROLE_TAG_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATABASE_ROLE_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE DATABASE_ROLES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DATABASE_ROLES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DATABASE_SCOPED_CREDENTIAL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IDENTITY             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SECRET               VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATABASE_SCOPED_CREDENTIAL
ADD PRIMARY KEY (ID@);

CREATE TABLE DATABRICKS_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DATABRICKS_USER_ID_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	HIVE_DBLOCATION      VARCHAR(1024) NULL,
	HIVE_DBTBLPROPERTIES VARCHAR(32000) NULL,
	HIVE_ROLE_REF        INTEGER NULL,
	HIVE_USER_ID_REF     INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE DATABRICKS_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE DATABRICKS_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABRICKS_DATABASE_REF INTEGER NULL,
	DATABRICKS_GROUPS    VARCHAR(32000) NULL,
	DATABRICKS_USERS     VARCHAR(32000) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DATABRICKS_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE DB2_ALL_BUFFERPOOL_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_ALL_BUFFERPOOL_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_ALL_SCHEMA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_ALL_SCHEMA_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_AUXILIARY_TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_AUXILIARY_TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_BUFFERPOOL_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_BUFFERPOOL_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_BUFFERPOOLS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_BUFFERPOOLS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_DATABASE_MEMBER_NAME VARCHAR(1024) NULL,
	DB2_INDEX_IN_BUFFERPOOL INTEGER NULL,
	DB2_STORAGE_GROUP_REF INTEGER NULL,
	DB2_USE_BUFFERPOOL   INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_TEMP_DATABASE     CHAR(1) NULL,
	IS_WORKFILE_DATABASE CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DB2_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE DB2_DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_FILE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_FILE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_FUNCTION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_FUNCTION_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_ORGANIZATION_KEY_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_ORGANIZATION_KEY_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_SCHEMA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_SCHEMA_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_SEQUENCE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_SEQUENCE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_SQL_PATH_SCHEMAS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_SQL_PATH_SCHEMAS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_STORAGE_GROUP_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_STORAGE_GROUP_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_STORED_PROCEDURE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_STORED_PROCEDURE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_SYSTEM_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_SYSTEM_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_TABLESPACE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_CLOSE            CHAR(1) NULL,
	DB2_CLUSTER_MEMBERS  CHAR(1) NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_DATABASE_REF     INTEGER NULL,
	DB2_DEFINE_DATA_SETS CHAR(1) NULL,
	DB2_ERASE_WHEN_DELETED CHAR(1) NULL,
	DB2_FREE_PAGE_INTERVAL INTEGER NULL,
	DB2_GROUP_BUFFERPOOL_TYPE INTEGER NULL,
	DB2_LOCK_MAX         VARCHAR(1024) NULL,
	DB2_LOCK_SIZE        INTEGER NULL,
	DB2_MAX_ROWS         VARCHAR(1024) NULL,
	DB2_OBJECT_ID        VARCHAR(1024) NULL,
	DB2_PCT_UPDATE       VARCHAR(1024) NULL,
	DB2_PAGENUM          INTEGER NULL,
	DB2_PARTITION_TYPE   INTEGER NULL,
	DB2_PARTITIONS_COUNT INTEGER NULL,
	DB2_PERCENT_FREE     VARCHAR(1024) NULL,
	DB2_PRIMARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_SECONDARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_SEGMENT_SIZE     VARCHAR(1024) NULL,
	DB2_STORAGE_GROUP_REF INTEGER NULL,
	DB2_TABLESPACE_STORAGE_TYPE INTEGER NULL,
	DB2_TRACK_MODIFIED_PAGES CHAR(1) NULL,
	DB2_USE_BUFFERPOOL   INTEGER NULL,
	DB2_VOLUME_CATALOG   VARCHAR(1024) NULL,
	DB2_ZOS_DSSIZE       INTEGER NULL,
	DATA_SET_SIZE        INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_COMPRESSED        CHAR(1) NULL,
	MAXIMUM_PARTITIONS   INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DB2_TABLESPACE
ADD PRIMARY KEY (ID@);

CREATE TABLE DB2_TABLESPACE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_TABLESPACE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_USER_DEFINED_TYPE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_USER_DEFINED_TYPE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DB2_VIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DB2_VIEW_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DEFAULT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	DATABASE_ID          INTEGER NULL,
	GENERATE_AS_SQL_92_FORMAT CHAR(1) NULL,
	GENERATE_USING_BIND  CHAR(1) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IS_DETACHED          CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	IS_SUPPLIED          CHAR(1) NULL,
	IS_SYSTEM_GENERATED  CHAR(1) NULL,
	LOGICAL_DEFAULT_VALUE VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ISONNULL_DEFAULTCOLUMN CHAR(1) NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SERVER_VALUE         VARCHAR(1024) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DEFAULT
ADD PRIMARY KEY (ID@);

CREATE TABLE DEFAULT_CONSTRAINT_USAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	CONSTRAINT_NAME      VARCHAR(1024) NULL,
	DEFAULT_REF          INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ISONNULL_DEFAULTCOLUMN CHAR(1) NULL,
	PARENT_DEFAULT_CONSTRAINT_USAGE_REF INTEGER NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	SERVER_VALUE         VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DEFAULT_CONSTRAINT_USAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE DELETED
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NOT NULL,
	OWNER_PATH           VARCHAR(1024) NULL
);

CREATE TABLE DEPENDENT_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DEPENDENT_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DEPENDENT_OBJECTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DETERMINED_BY_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DETERMINED_BY_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DIAGRAM
(
	ID@                  INTEGER NOT NULL,
	ENTIRE_MF            VARCHAR(1024) NULL
);

ALTER TABLE DIAGRAM
ADD PRIMARY KEY (ID@);

CREATE TABLE DISCRIMINATOR_ATTRIBUTES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DISCRIMINATOR_ATTRIBUTES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DISK_VOLUMES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE DISK_VOLUMES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DISPLAY_FORMAT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CLIENT_VALUE         VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SERVER_VALUE         VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DISPLAY_FORMAT
ADD PRIMARY KEY (ID@);

CREATE TABLE DOMAIN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	ALLOCATE_AMOUNT      INTEGER NULL,
	ALLOW_ZERO           CHAR(1) NULL,
	ANCHORED_TO_TYPE     INTEGER NULL,
	ATTRIBUTE_DEFINITION VARCHAR(1024) NULL,
	ATTRIBUTE_IMAGE_REF  INTEGER NULL,
	ATTRIBUTE_NAME       VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	CACHE_CAPACITY       VARCHAR(1024) NULL,
	CACHE_IDENTITY_COLUMN_VALUES CHAR(1) NULL,
	CARDINALITY_VALUE    VARCHAR(1024) NULL,
	CHARACTER_CASE_TYPE  INTEGER NULL,
	CHARACTER_SEMANTICS_TYPE INTEGER NULL,
	CLASS_NAME           VARCHAR(1024) NULL,
	COLLATION_NAME       VARCHAR(1024) NULL,
	COLLATION_REF        INTEGER NULL,
	COLUMN_COMMENT       VARCHAR(4000) NULL,
	COLUMN_IN_NAME       VARCHAR(1024) NULL,
	COLUMN_NAME          VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	COMPRESSION_ALGORITHM_REF INTEGER NULL,
	DB2_CHARACTER_TYPE   INTEGER NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_IS_USED_FOR_SECURITY_LABELS CHAR(1) NULL,
	DATA_SOURCE_COMMENT  VARCHAR(4000) NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_INTERNAL_NAME VARCHAR(1024) NULL,
	DECIMALS             INTEGER NULL,
	DECOMPRESSION_ALGORITHM_REF INTEGER NULL,
	DISPLAY_CONTROL      VARCHAR(1024) NULL,
	DISPLAY_FORMAT_REF   INTEGER NULL,
	DISPLAY_FORMAT_STRING VARCHAR(1024) NULL,
	DISPLAY_INFORMAT_NAME VARCHAR(1024) NULL,
	DO_NOT_GENERATE_TRANSFORM CHAR(1) NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	EXTENT_COUNT         INTEGER NULL,
	GENERATE_AS_USER_DEFINED_TYPE CHAR(1) NULL,
	GENERATION_EXPRESSION VARCHAR(1024) NULL,
	GENERATION_TYPE      INTEGER NULL,
	GLOBAL_VARIABLE_REF  INTEGER NULL,
	HAS_NO_MAX           CHAR(1) NULL,
	HAS_NO_MIN           CHAR(1) NULL,
	HEADER               VARCHAR(1024) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IMAGE_REF            INTEGER NULL,
	INCREMENT_BY         VARCHAR(1024) NULL,
	INLINE_LENGTH        VARCHAR(1024) NULL,
	INPUT_MASK           VARCHAR(1024) NULL,
	IS_COLUMN_COMPRESSED CHAR(1) NULL,
	IS_CYCLE_ON          CHAR(1) NULL,
	IS_EMPTY_EQUAL_TO_NULL CHAR(1) NULL,
	IS_IDENTITY_COLUMN   CHAR(1) NULL,
	IS_IMPLICITLY_HIDDEN CHAR(1) NULL,
	IS_LOB_DATA_COMPACTED CHAR(1) NULL,
	IS_LOB_DATA_LOGGED   CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	IS_READ_ONLY         CHAR(1) NULL,
	IS_ROW_CHANGE_TIMESTAMP_COLUMN CHAR(1) NULL,
	IS_SQLSERVER_FILESTREAM CHAR(1) NULL,
	IS_SPARSE            CHAR(1) NULL,
	IS_SYSTEM_MAINTAINED CHAR(1) NULL,
	LOB_STORAGE_REF      INTEGER NULL,
	LABEL                VARCHAR(1024) NULL,
	LOGICAL_DATA_TYPE    VARCHAR(1024) NULL,
	MAX_VALUE            VARCHAR(1024) NULL,
	MAXIMUM_LENGTH_IN_ROW INTEGER NULL,
	MIN_VALUE            VARCHAR(1024) NULL,
	MODULE_REF           INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NULL_OPTION_CONSTRAINT_NAME VARCHAR(1024) NULL,
	NULL_OPTION_TYPE     INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CONSTRAINT_STATE_REF INTEGER NULL,
	ORDER_NUM            INTEGER NULL,
	ORDER_ON             CHAR(1) NULL,
	ORDERING_DO_NOT_GENERATE CHAR(1) NULL,
	ORDERING_PROCEDURE_REF INTEGER NULL,
	ORDERING_PROCEDURE_TYPE INTEGER NULL,
	ORDERING_USE_REPLACE_SYNTAX CHAR(1) NULL,
	PARENT_DOMAIN_REF    INTEGER NULL,
	PERCENT_NULL         INTEGER NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	POPULATE_ALL_ROWS_WITH_DEFAULT_VALUE CHAR(1) NULL,
	PROHIBIT_CHECK_CONSTRAINT_INHERITANCE CHAR(1) NULL,
	PROHIBIT_DEFAULT_CONSTRAINT_INHERITANCE CHAR(1) NULL,
	ROW_BEGIN            CHAR(1) NULL,
	ROW_END              CHAR(1) NULL,
	ROW_GUID             INTEGER NULL,
	SQLSERVER_ASSEMBLY_REF INTEGER NULL,
	SQLSERVER_CODE_TYPE  INTEGER NULL,
	SQLSERVER_IS_PERSISTED CHAR(1) NULL,
	SQLSERVER_XML_DOCUMENT_TYPE INTEGER NULL,
	SQLSERVER_XML_SCHEMA_COLLECTION_REF INTEGER NULL,
	SW_PROMPT            VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	STARTING_VALUE       VARCHAR(1024) NULL,
	STORE_IN_UPPERCASE   CHAR(1) NULL,
	SYSTEM_NAME          VARCHAR(1024) NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TERADATA_COMPILE     INTEGER NULL,
	TERADATA_TEMPORAL_TYPE INTEGER NULL,
	TIME_ZONE_OPTION     INTEGER NULL,
	TRANSACTION_START_ID CHAR(1) NULL,
	TRANSFORM_FROM_PROCEDURE_OBJECT_TYPE INTEGER NULL,
	TRANSFORM_FROM_PROCEDURE_REF INTEGER NULL,
	TRANSFORM_GROUP_NAME VARCHAR(1024) NULL,
	TRANSFORM_TO_PROCEDURE_OBJECT_TYPE INTEGER NULL,
	TRANSFORM_TO_PROCEDURE_REF INTEGER NULL,
	TRANSFORM_USE_REPLACE_SYNTAX CHAR(1) NULL,
	TYPE                 INTEGER NULL,
	UDB_CHARACTER_TYPE   INTEGER NULL,
	UDB_DATALINK_OPTIONS VARCHAR(1024) NULL,
	UDB_SECURITY_LABEL_REF INTEGER NULL,
	UPDATE_ATTRIBUTE_DEFINITION_TO_MATCH CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VOLUMETRICS_AVERAGE_WIDTH INTEGER NULL,
	ISERIES_CHARACTER_TYPE INTEGER NULL,
	ISERIES_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DEFAULT_STATEMENT    VARCHAR(1024) NULL
);

ALTER TABLE DOMAIN
ADD PRIMARY KEY (ID@);

CREATE TABLE DRAWING_OBJECTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE DRAWING_OBJECTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE DSM_DT_LOGICAL_DEFINITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DT_DEFAULT_LENGTH    INTEGER NULL,
	DT_DEFAULT_WIDTH     INTEGER NULL,
	DT_DOMAIN            INTEGER NULL,
	DT_FLAG              INTEGER NULL,
	DT_LENGTH            INTEGER NULL,
	DT_MAX_VARWIDTH      INTEGER NULL,
	DT_PRECISION         INTEGER NULL,
	DT_TABLE_INDEX       INTEGER NULL,
	DT_UNIT_WIDTH        INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DSM_DT_LOGICAL_DEFINITION
ADD PRIMARY KEY (ID@);

CREATE TABLE DSM_DT_MAPPING
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	DSM_DT_MAPPING_FROM_DBMS_ID INTEGER NULL,
	DSM_DT_MAPPING_TO_DBMS_ID INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DSM_DT_MAPPING
ADD PRIMARY KEY (ID@);

CREATE TABLE DSM_DT_MAPPING_ENTRY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DT_MAX_FROM_LENGTH   VARCHAR(1024) NULL,
	DT_SOURCE_FLAG       INTEGER NULL,
	DT_SOURCE_TABLE_INDEX INTEGER NULL,
	DT_TARGET_FLAG       INTEGER NULL,
	DT_TARGET_MAX_VARWIDTH INTEGER NULL,
	DT_TO_DATATYPE       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DSM_DT_MAPPING_ENTRY
ADD PRIMARY KEY (ID@);

CREATE TABLE DSM_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_CURRENT_ACTIVE_OPTION_SET CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DSM_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE DYNAMODB_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE DYNAMODB_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE E_723
(
	test                 CHAR(18) NOT NULL,
	demo                 CHAR(18) NULL
);

ALTER TABLE E_723
ADD PRIMARY KEY (test);

CREATE TABLE ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ENCRYPTION_KEY_VALUE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALGORITHM_NAME       VARCHAR(1024) NULL,
	COLUMN_MASTER_KEY_REF INTEGER NULL,
	ENCRYPTED_VALUE      VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ENCRYPTION_KEY_VALUE
ADD PRIMARY KEY (ID@);

CREATE TABLE ENTITIES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ENTITIES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ENTITY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ORGANIZATION_ON INTEGER NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_SORT_KEY_COLUMN INTEGER NULL,
	ADBL_TEMPORARY_TYPE  CHAR(1) NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	AWS_KEYSPACE_CDC     INTEGER NULL,
	AWS_KEYSPACE_CLUSTERING_ORDER_BY VARCHAR(1024) NULL,
	AWS_KEYSPACE_DATABASE_REF INTEGER NULL,
	AWS_KEYSPACE_ENCRYPTION_TYPE INTEGER NULL,
	AWS_KEYSPACE_ITEMPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_KMS_KEY_IDENTIFIER VARCHAR(1024) NULL,
	AWS_KEYSPACE_POINT_IN_TIME_RECOVERY_STATUS INTEGER NULL,
	AWS_KEYSPACE_READ_CAPACITY VARCHAR(1024) NULL,
	AWS_KEYSPACE_TABLE_ID VARCHAR(1024) NULL,
	AWS_KEYSPACE_TAG_PROP VARCHAR(1024) NULL,
	AWS_KEYSPACE_TBLPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_THROUGHPUT_MODE INTEGER NULL,
	AWS_KEYSPACE_WRITE_CAPACITY VARCHAR(1024) NULL,
	AWS_KEYSPACE_MAX_INDEX_INTERVAL VARCHAR(1024) NULL,
	AWS_KEYSPACE_MEMTABLE_FLUSH_PERIOD_IN_MS VARCHAR(1024) NULL,
	AWS_KEYSPACE_MIN_INDEX_INTERVAL VARCHAR(1024) NULL,
	AWS_KEYSPACE_SPECULATIVE_RETRY VARCHAR(1024) NULL,
	AWS_PITR             INTEGER NULL,
	ACCESS_PARAMETER_TYPE INTEGER NULL,
	ACCESS_PARAMETERS    VARCHAR(32000) NULL,
	ADDITIONAL_PARTITION_NUMBER INTEGER NULL,
	ALLOW_DUPLICATE      CHAR(1) NULL,
	ARANGODB_COLLECTION_DISTRIBUTESHARDSLIKE VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_ENFORCEREPLICATIONFACTOR INTEGER NULL,
	ARANGODB_COLLECTION_INCREMENT VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_ISSYSTEM INTEGER NULL,
	ARANGODB_COLLECTION_KEYOPTIONS VARCHAR(32000) NULL,
	ARANGODB_COLLECTION_KEYOPTIONSTYPE INTEGER NULL,
	ARANGODB_COLLECTION_NUMBEROFSHARDS VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_OFFSET VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_REPLICATIONFACTOR VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_SCHEMA VARCHAR(32000) NULL,
	ARANGODB_COLLECTION_SHARDKEYS VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_SHARDINGSTRATEGY INTEGER NULL,
	ARANGODB_COLLECTION_SMARTJOINATTRIBUTE VARCHAR(1024) NULL,
	ARANGODB_COLLECTION_SYNC INTEGER NULL,
	ARANGODB_COLLECTION_TYPE INTEGER NULL,
	ARANGODB_COLLECTION_USERKEY INTEGER NULL,
	ARANGODB_COLLECTION_WAITFORSYNCREPLICATION INTEGER NULL,
	ARANGODB_COLLECTION_WRITECONCERN VARCHAR(1024) NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_GRAPH_REF   INTEGER NULL,
	ARCHIVE_NAME         VARCHAR(1024) NULL,
	AS_CLAUSE            INTEGER NULL,
	AUTO_REFRESH         INTEGER NULL,
	AVRO_COL_NAMESPACE   VARCHAR(1024) NULL,
	AVRO_DATABASE_REF    INTEGER NULL,
	AVRO_RECORD_TYPE     VARCHAR(1024) NULL,
	AVRO_TABLE_LOCATION  VARCHAR(32000) NULL,
	AVRO_TABLE_PROPERTIES VARCHAR(32000) NULL,
	BINARY_AS_TEXT       CHAR(1) NULL,
	BINARY_FORMAT        INTEGER NULL,
	CTAS_OPTION          CHAR(1) NULL,
	CTAS_REF             INTEGER NULL,
	CACHED_VIEW_REF      INTEGER NULL,
	CASSANDRA_CDC        INTEGER NULL,
	CASSANDRA_CACHING_KEYS VARCHAR(1024) NULL,
	CASSANDRA_CACHING_ROWS_PER_PARTITION VARCHAR(1024) NULL,
	CASSANDRA_CLUSTERING_ORDER_BY VARCHAR(1024) NULL,
	CASSANDRA_COMPACK_STORAGE CHAR(1) NULL,
	CASSANDRA_COMPACTION_BACKGROUND_ENABLED CHAR(1) NULL,
	CASSANDRA_COMPACTION_BASE_TIME_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_BUCKET_HIGH VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_BUCKET_LOW VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_SSTABLE_AGE_DAYS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_WINDOW_SIZE_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MIN_SSTABLE_SIZE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_ONLY_PURGE_REPAIRED_TOMBSTONES CHAR(1) NULL,
	CASSANDRA_COMPACTION_SSTABLE_SIZE_IN_MB VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_TIMESTAMP_RESOLUTION VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_TOMBSTONE_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_TOMBSTONE_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_UNCHECKED_TOMBSTONE CHAR(1) NULL,
	CASSANDRA_COMPACTION_WINDOW_SIZE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_WINDOW_UNIT VARCHAR(1024) NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	CASSANDRA_ITEMPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_TABLE_ID   VARCHAR(1024) NULL,
	CASSANDRA_TBLPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_BLOOM_FILTER_FP_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MIN_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPRESSION_CHUNK_LEN_KB VARCHAR(1024) NULL,
	CASSANDRA_COMPRESSION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_CRC_CHECK_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_DCLOCAL_READ_REPAIR_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_DEFAULT_TIME_TO_LIVE VARCHAR(1024) NULL,
	CASSANDRA_GC_GRACE_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_MAX_INDEX_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_MEMTABLE_FLUSH_PERIOD_IN_MS VARCHAR(1024) NULL,
	CASSANDRA_MIN_INDEX_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_READ_REPAIR_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_SPECULATIVE_RETRY VARCHAR(1024) NULL,
	CASSANDRA_SSTABLE_COMPRESSION VARCHAR(1024) NULL,
	CLONE_TABLE          VARCHAR(1024) NULL,
	CLONE_TABLE_REF      INTEGER NULL,
	CLONE_TABLE_TYPE     INTEGER NULL,
	CLOUD_PROVIDER_PARAMS VARCHAR(1024) NULL,
	CLUSTER_BY           VARCHAR(32000) NULL,
	CLUSTER_BY_EXPRESSION VARCHAR(32000) NULL,
	COLLATION_NAME       VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	COMMIT_TYPE          INTEGER NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	COMPRESS_TYPE        INTEGER NULL,
	COMPRESSION          INTEGER NULL,
	COMPRESSIONTYPE      INTEGER NULL,
	CONNECTION_NODE_TABLE_REF INTEGER NULL,
	COPY_ENFORCE_LENGTH  CHAR(1) NULL,
	COPY_LOAD_UNCERTAIN_FILES CHAR(1) NULL,
	COPY_ON_ERROR        INTEGER NULL,
	COPY_ON_ERROR_SIZE_LIMIT_SPEC VARCHAR(1024) NULL,
	COPY_PURGE           CHAR(1) NULL,
	COPY_RETURN_FAILED_ONLY CHAR(1) NULL,
	COPY_SIZE_LIMIT      VARCHAR(1024) NULL,
	COPY_TRUNCATECOLUMNS CHAR(1) NULL,
	COPY_DO_FORCE        CHAR(1) NULL,
	COUCHBASE_COLLECTION_REF INTEGER NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	COUCHBASE_SCOPE_REF  INTEGER NULL,
	DB2_AUDIT_ACCESS_TYPE INTEGER NULL,
	DB2_BT_BEGIN_COLUMN_REF INTEGER NULL,
	DB2_BT_END_COLUMN_REF INTEGER NULL,
	DB2_BT_IE            INTEGER NULL,
	DB2_CLUSTER_MEMBERS  CHAR(1) NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_COLUMN_ACCESS_CONTROL INTEGER NULL,
	DB2_DATA_CAPTURE     CHAR(1) NULL,
	DB2_DATABASE_REF     INTEGER NULL,
	DB2_EDIT_PROC        VARCHAR(1024) NULL,
	DB2_HASH_SIZE_DATA   VARCHAR(1024) NULL,
	DB2_HASH_SIZE_DATA_UNIT INTEGER NULL,
	DB2_OBJECT_ID        VARCHAR(1024) NULL,
	DB2_ORGANIZATION_ON  INTEGER NULL,
	DB2_PAGENUM          INTEGER NULL,
	DB2_PARTITION_SIZE   INTEGER NULL,
	DB2_PARTITION_TYPE   INTEGER NULL,
	DB2_ROW_ACCESS_CONTROL INTEGER NULL,
	DB2_ROW_ATTRIBUTES   CHAR(1) NULL,
	DB2_ST_BEGIN_COLUMN_REF INTEGER NULL,
	DB2_ST_END_COLUMN_REF INTEGER NULL,
	DB2_TABLESPACE_REF   INTEGER NULL,
	DB2_TEMPORAL_TYPE_BT INTEGER NULL,
	DB2_TEMPORAL_TYPE_ST INTEGER NULL,
	DB2_TRACK_MODIFIED_PAGES CHAR(1) NULL,
	DB2_TYPE             INTEGER NULL,
	DB2_USE_BUFFERPOOL   INTEGER NULL,
	DB2_VALIDATION_PROCEDURE VARCHAR(1024) NULL,
	DB2_ZOS_DSSIZE       INTEGER NULL,
	DATA_CONSISTENCY_CHECK CHAR(1) NULL,
	DATA_MOVEMENT_APPEND_RULE_REF INTEGER NULL,
	DATA_MOVEMENT_ARCHIVE_RULE_REF INTEGER NULL,
	DATA_MOVEMENT_BACKUP_RULE_REF INTEGER NULL,
	DATA_MOVEMENT_PURGE_RULE_REF INTEGER NULL,
	DATA_MOVEMENT_RECOVERY_RULE_REF INTEGER NULL,
	DATA_MOVEMENT_REFRESH_RULE_REF INTEGER NULL,
	DATA_ORGANIZATION_TYPE INTEGER NULL,
	DATA_RETENTION_TIME  VARCHAR(1024) NULL,
	DATA_VAULT_COMPLAINCY CHAR(1) NULL,
	DATA_VAULT_REF       INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_INTERNAL_NAME VARCHAR(1024) NULL,
	DATABRICKS_DATABASE_REF INTEGER NULL,
	DATABRICKS_TABLE_OPTIONS VARCHAR(32000) NULL,
	DATABRICKS_TABLE_TIMESTAMPASOF VARCHAR(1024) NULL,
	DATABRICKS_TABLE_USING VARCHAR(1024) NULL,
	DATABRICKS_TABLE_VERSIONASOF VARCHAR(1024) NULL,
	DATE_FORMAT          VARCHAR(1024) NULL,
	DEFAULT_DDL_COLLATION VARCHAR(1024) NULL,
	DEFERRED_SEGMENT     INTEGER NULL,
	DIMENSIONAL_NOTATION_ROLE_TYPE INTEGER NULL,
	DIMENSIONAL_NOTATION_UPDATE_TYPE INTEGER NULL,
	DISABLE_AUTO_CONVERT CHAR(1) NULL,
	DISABLE_SNOWFLAKE_DATA CHAR(1) NULL,
	DISTRIBUTION_COLUMN_NAME VARCHAR(1024) NULL,
	DISTRIBUTION_OPTIONS INTEGER NULL,
	DISTRIBUTION_TYPE    INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DURABILITY           INTEGER NULL,
	DYNAMODB_DATABASE_REF INTEGER NULL,
	DYNAMODB_GLOBAL_TABLE CHAR(1) NULL,
	DYNAMODB_KMSMASTERKEYID VARCHAR(1024) NULL,
	DYNAMODB_REGION_NAME VARCHAR(1024) NULL,
	DYNAMODB_SSEENABLED  CHAR(1) NULL,
	DYNAMODB_SSETYPE     INTEGER NULL,
	DYNAMODB_STREAM_ENABLED CHAR(1) NULL,
	DYNAMODB_STREAM_VIEW_TYPE INTEGER NULL,
	DYNAMODB_TTL         INTEGER NULL,
	DYNAMODB_TTL_ATTRIBUTE VARCHAR(1024) NULL,
	DYNAMODB_TABLEARN    VARCHAR(1024) NULL,
	EMPTY_FIELD_AS_NULL  CHAR(1) NULL,
	ENABLE_OCTAL         CHAR(1) NULL,
	ENCODING             VARCHAR(1024) NULL,
	ERROR_ON_COLUMN_COUNT_MISMATCH CHAR(1) NULL,
	ESCAPE               VARCHAR(1024) NULL,
	ESCAPE_UNENCLOSED_FIELD VARCHAR(1024) NULL,
	EXSTAGE_NAME         VARCHAR(1024) NULL,
	EXSTAGE_TYPE         INTEGER NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	EXTERNAL_DATA_SOURCE_REF INTEGER NULL,
	EXTERNAL_FILE_FORMAT_REF INTEGER NULL,
	EXTERNAL_STAGE_LOCATION VARCHAR(1024) NULL,
	EXTERNAL_STAGE_REF   INTEGER NULL,
	FIELD_DELIMITER      VARCHAR(1024) NULL,
	FIELD_OPTIONALLY_ENCLOSED_BY VARCHAR(1024) NULL,
	FILE_EXTENSION       VARCHAR(1024) NULL,
	FILE_FORMAT_NAME     VARCHAR(1024) NULL,
	FILETABLE_COLLATE_FILENAME VARCHAR(1024) NULL,
	FILETABLE_DIRECTORY  VARCHAR(1024) NULL,
	FILETABLE_FULLPATH_UNIQUE_CONSTRAINT_NAME VARCHAR(1024) NULL,
	FILETABLE_PRIMARY_KEY_CONSTRAINT_NAME VARCHAR(1024) NULL,
	FILETABLE_STREAMID_UNIQUE_CONSTRAINT_NAME VARCHAR(1024) NULL,
	GENERATE_AS_USER_DEFINED_TABLE_TYPE CHAR(1) NULL,
	GOOGLE_BIGQUERY_DATABASE_REF INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_ALLOW_JAGGED_ROWS INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_ALLOW_QUOTED_NEWLINES INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_CLUSTERING_COLUMN_LIST VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_COMPRESSION VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_DECIMAL_TARGET_TYPES VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_ENABLE_LOGICAL_TYPES INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_ENCODING VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_EXPIRATION_TIMESTAMP VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_FIELD_DELIMITER VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_FORMAT VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_FRIENDLY_NAME VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_HIVE_PARTITION_URI_PREFIX VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_IGNORE_UNKNOWN_VALUES INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_JSON_EXTENSION VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_KMS_KEY_NAME VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_MAX_BAD_RECORDS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_NULL_MARKER VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_INGESTION_TIME_OPTIONS INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_RANGE_END VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_RANGE_INTERVAL VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_RANGE_START VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_SCHEMA INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITIONBY_SCHEMA_TYPE INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITION_EXPIRATION_DAYS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_PARTITION_EXPRESSION VARCHAR(32000) NULL,
	GOOGLE_BIGQUERY_ENTITY_PROJECTION_FIELDS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_QUOTE VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_REF INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_REQUIRE_HIVE_PARTITION_FILTER INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_REQUIRE_PARTITION_FILTER INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_SHEET_RANGE VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_SKIP_LEADING_ROWS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_TYPE INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_URIS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_SYSTEM_TIME VARCHAR(1024) NULL,
	GROWTH_BY_MONTH      VARCHAR(1024) NULL,
	HAS_NO_PRIMARY_INDEX CHAR(1) NULL,
	HAS_RESTRICTION_ON_DROP CHAR(1) NULL,
	HAS_VOLATILE_CARDINALITY CHAR(1) NULL,
	HEAP                 CHAR(1) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	HISTORY_TABLE        VARCHAR(1024) NULL,
	HISTORY_TABLE_REF    INTEGER NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	HIVE_INPUTFORMAT     VARCHAR(1024) NULL,
	HIVE_LOC_TYPE        INTEGER NULL,
	HIVE_LOCATION        VARCHAR(1024) NULL,
	HIVE_OUTPUTFORMAT    VARCHAR(1024) NULL,
	HIVE_OVERWRITETBLPROPERTIES VARCHAR(32000) NULL,
	HIVE_PARTITIONEDBY   VARCHAR(32000) NULL,
	HIVE_ROLE_REF        INTEGER NULL,
	HIVE_ROW_FORMAT_COLLECTIONITEMS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_FIELDS_ESCAPEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_FIELDS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_LINES_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_MAPKEYS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_NULL_DEFINEDAS VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_SERDE VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_SERDEPROPERTIES VARCHAR(32000) NULL,
	HIVE_SKEWED_SAD      CHAR(1) NULL,
	HIVE_STATISTICS_NUMFILES VARCHAR(1024) NULL,
	HIVE_STATISTICS_NUMROWS VARCHAR(1024) NULL,
	HIVE_STATISTICS_RAWDATASIZE VARCHAR(1024) NULL,
	HIVE_STATISTICS_TOTALSIZE VARCHAR(1024) NULL,
	HIVE_STATISTICS_NUMPARTITIONS VARCHAR(1024) NULL,
	HIVE_STOREDAS        INTEGER NULL,
	HIVE_STOREDBY        VARCHAR(1024) NULL,
	HIVE_TABLE_COMPACT   INTEGER NULL,
	HIVE_TABLE_CONCATENATE CHAR(1) NULL,
	HIVE_TABLE_TOUCH     CHAR(1) NULL,
	HIVE_TBLBUCKET       VARCHAR(1024) NULL,
	HIVE_TBLPROPERTIES   VARCHAR(32000) NULL,
	HIVE_TBLSKEWEDCOLUMNVALUE VARCHAR(32000) NULL,
	HIVE_TYPE            CHAR(1) NULL,
	ICON_IMAGE_REF       INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IGNORE_UTF8_ERRORS   CHAR(1) NULL,
	IMAGE_REF            INTEGER NULL,
	INCLUDE_IDENTITY_COLUMN_ATTRIBUTES CHAR(1) NULL,
	INCLUDING_COLUMN_REF INTEGER NULL,
	INFORMIX_DBSPACE_REF INTEGER NULL,
	INFORMIX_EXTENT_SIZE VARCHAR(1024) NULL,
	INFORMIX_LOCK_MODE   INTEGER NULL,
	INFORMIX_NEXT_SIZE   VARCHAR(1024) NULL,
	INFORMIX_PATH_NAME   VARCHAR(1024) NULL,
	INFORMIX_STORAGE_OPTION INTEGER NULL,
	INFORMIX_USES_ROW_IDS CHAR(1) NULL,
	INGRES_AUDIT         VARCHAR(1024) NULL,
	INGRES_AUDIT_KEY     VARCHAR(1024) NULL,
	INGRES_GRANULARITY_TYPE INTEGER NULL,
	INGRES_JOURNALING_MODE INTEGER NULL,
	INGRES_LOCATIONS     VARCHAR(1024) NULL,
	INGRES_PAGE_SIZE     VARCHAR(1024) NULL,
	INGRES_PREVENT_DUPLICATES CHAR(1) NULL,
	INGRES_SECURITY_AUDIT CHAR(1) NULL,
	INGRES_SECURITY_AUDIT_FOR_ROW_TYPE INTEGER NULL,
	INGRES_SECURITY_AUDIT_ON_TABLE CHAR(1) NULL,
	INHERIT_PARENT_TABLES_REF INTEGER NULL,
	INITIAL_ROW_COUNT    VARCHAR(1024) NULL,
	IS_APPENDABLE        CHAR(1) NULL,
	IS_AUTO_COMPRESS     CHAR(1) NULL,
	IS_CACHING_ALLOWED   CHAR(1) NULL,
	IS_COLUMN_PARTITIONED CHAR(1) NULL,
	IS_COMPRESSED        CHAR(1) NULL,
	IS_EXTERNAL          CHAR(1) NULL,
	IS_INDEXING          CHAR(1) NULL,
	IS_KEY_SEQUENCE_OVERFLOW_ALLOWED CHAR(1) NULL,
	IS_LOGGING_ENABLED   CHAR(1) NULL,
	IS_LOGGING_INDEX_BUILDS CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_MONITORED         CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	IS_READ_WRITE        INTEGER NULL,
	IS_ROW_ARCHIVAL      CHAR(1) NULL,
	IS_SYSTEM_VERSIONED  CHAR(1) NULL,
	IS_TABLE_COMPRESSED  CHAR(1) NULL,
	IS_TABLE_ROW_COMPRESSED CHAR(1) NULL,
	IS_TEMPORAL          CHAR(1) NULL,
	JSON_DATABASE_REF    INTEGER NULL,
	JSON_ENTITY_ADDITIONAL_PROPERTIES VARCHAR(32000) NULL,
	JSON_ENTITY_DEFINITIONS VARCHAR(32000) NULL,
	JSON_ENTITY_DEPENDENCIES VARCHAR(32000) NULL,
	JSON_ENTITY_REQUIRED VARCHAR(32000) NULL,
	JSON_OBJECT_MAX_PROPERTIES VARCHAR(1024) NULL,
	JSON_OBJECT_MIN_PROPERTIES VARCHAR(1024) NULL,
	JSON_OBJECT_PATTERN_PROPERTIES VARCHAR(32000) NULL,
	JSON_OBJECT_PROPERTY_NAMES VARCHAR(32000) NULL,
	JSON_OBJECT_SCHEMA   VARCHAR(1024) NULL,
	JSON_OBJECT_TITLE    VARCHAR(32000) NULL,
	JSON_OBJECT_ID       VARCHAR(1024) NULL,
	KEY_SEQUENCE_PERCENT_FREE INTEGER NULL,
	LABEL                VARCHAR(1024) NULL,
	LIKE_TABLE           VARCHAR(1024) NULL,
	LIKE_TABLE_OPTIONS   VARCHAR(1024) NULL,
	LIKE_TABLE_REF       INTEGER NULL,
	LIKE_VIEW_REF        INTEGER NULL,
	LOG_ALWAYS           CHAR(1) NULL,
	MANY_TO_MANY_RELATIONSHIP_REF INTEGER NULL,
	MARIADB_AUTOINCREMENT VARCHAR(1024) NULL,
	MARIADB_AVGROWLEN    VARCHAR(1024) NULL,
	MARIADB_CHARACTER_SET VARCHAR(1024) NULL,
	MARIADB_CHECKSUM     INTEGER NULL,
	MARIADB_COLLATE      VARCHAR(1024) NULL,
	MARIADB_CONSTRING    VARCHAR(1024) NULL,
	MARIADB_DATADIR      VARCHAR(1024) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_DELAYKEYWRITE INTEGER NULL,
	MARIADB_ENCRYPTED    INTEGER NULL,
	MARIADB_ENCRYPTIONKEYID VARCHAR(1024) NULL,
	MARIADB_ENGINE       VARCHAR(1024) NULL,
	MARIADB_IETFQUOTES   INTEGER NULL,
	MARIADB_INDEXDIR     VARCHAR(1024) NULL,
	MARIADB_INSERTMETHOD INTEGER NULL,
	MARIADB_KEYBLOCKSIZE VARCHAR(1024) NULL,
	MARIADB_MAXROWS      VARCHAR(1024) NULL,
	MARIADB_MINROWS      VARCHAR(1024) NULL,
	MARIADB_OVERWRITE    INTEGER NULL,
	MARIADB_PACKKEYS     INTEGER NULL,
	MARIADB_PAGECHECKSUM INTEGER NULL,
	MARIADB_PAGECOMPRESSED INTEGER NULL,
	MARIADB_PAGECOMPRESSIONLEVEL VARCHAR(1024) NULL,
	MARIADB_PASSWORD     VARCHAR(1024) NULL,
	MARIADB_ROLE_REF     INTEGER NULL,
	MARIADB_ROWFORMAT    INTEGER NULL,
	MARIADB_SELECTSTMT   VARCHAR(1024) NULL,
	MARIADB_SEQUENCE     INTEGER NULL,
	MARIADB_STATSAUTORECALC INTEGER NULL,
	MARIADB_STATSPERSISTENT INTEGER NULL,
	MARIADB_STATSSAMPLEPAGES VARCHAR(1024) NULL,
	MARIADB_SYSTEMVERSION CHAR(1) NULL,
	MARIADB_TABLESPACE   VARCHAR(1024) NULL,
	MARIADB_TRANSACTIONAL INTEGER NULL,
	MARIADB_TYPE         CHAR(1) NULL,
	MARIADB_UNION        VARCHAR(1024) NULL,
	MATCH_BY_COLUMN_NAME INTEGER NULL,
	MAX_ROWS             VARCHAR(1024) NULL,
	MAX_TABLE_EXPRESSION_DISPLAY_LENGTH INTEGER NULL,
	MODE                 INTEGER NULL,
	MONGODB_CAPPED_COLLECTION CHAR(1) NULL,
	MONGODB_CAPPED_COLLECTION_MAX VARCHAR(1024) NULL,
	MONGODB_CAPPED_COLLECTION_SIZE VARCHAR(1024) NULL,
	MONGODB_COLLATION_ALTERNATE INTEGER NULL,
	MONGODB_COLLATION_BACKWARDS CHAR(1) NULL,
	MONGODB_COLLATION_CASEFIRST INTEGER NULL,
	MONGODB_COLLATION_CASELEVEL CHAR(1) NULL,
	MONGODB_COLLATION_LOCALE VARCHAR(1024) NULL,
	MONGODB_COLLATION_MAXVARIABLE INTEGER NULL,
	MONGODB_COLLATION_NUMERICORDERING CHAR(1) NULL,
	MONGODB_COLLATION_STRENGTH INTEGER NULL,
	MONGODB_DATABASE_REF INTEGER NULL,
	MONGODB_SCHEMAVALIDATOR VARCHAR(32000) NULL,
	MYSQL_AUTOINCREMENT  VARCHAR(1024) NULL,
	MYSQL_AUTOEXTENDSIZE VARCHAR(1024) NULL,
	MYSQL_AVGROWLEN      VARCHAR(1024) NULL,
	MYSQL_CHARACTER_SET  VARCHAR(1024) NULL,
	MYSQL_CHECKSUM       INTEGER NULL,
	MYSQL_COLLATE        VARCHAR(1024) NULL,
	MYSQL_COMPRESSION    INTEGER NULL,
	MYSQL_CONSTRING      VARCHAR(1024) NULL,
	MYSQL_DATADIR        VARCHAR(1024) NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_DELAYKEYWRITE  INTEGER NULL,
	MYSQL_ENCRYPTED      INTEGER NULL,
	MYSQL_ENCRYPTION     INTEGER NULL,
	MYSQL_ENCRYPTIONKEYID VARCHAR(1024) NULL,
	MYSQL_ENGINE         VARCHAR(1024) NULL,
	MYSQL_ENGINEATTR     VARCHAR(1024) NULL,
	MYSQL_FOR_CLAUSE     VARCHAR(1024) NULL,
	MYSQL_GROUP_BY_CLAUSE VARCHAR(1024) NULL,
	MYSQL_HAVING_CLAUSE  VARCHAR(1024) NULL,
	MYSQL_HIGH_PRIORITY  CHAR(1) NULL,
	MYSQL_IETFQUOTES     INTEGER NULL,
	MYSQL_INDEXDIR       VARCHAR(1024) NULL,
	MYSQL_INSERTMETHOD   INTEGER NULL,
	MYSQL_INTO_OPTION    VARCHAR(1024) NULL,
	MYSQL_KEYBLOCKSIZE   VARCHAR(1024) NULL,
	MYSQL_LIMIT_CLAUSE   VARCHAR(1024) NULL,
	MYSQL_MAXROWS        VARCHAR(1024) NULL,
	MYSQL_MINROWS        VARCHAR(1024) NULL,
	MYSQL_ORDER_BY_CLAUSE VARCHAR(1024) NULL,
	MYSQL_OVERWRITE      INTEGER NULL,
	MYSQL_PACKKEYS       INTEGER NULL,
	MYSQL_PAGECHECKSUM   INTEGER NULL,
	MYSQL_PAGECOMPRESSED INTEGER NULL,
	MYSQL_PAGECOMPRESSIONLEVEL VARCHAR(1024) NULL,
	MYSQL_PASSWORD       VARCHAR(1024) NULL,
	MYSQL_RESULT_TYPE    INTEGER NULL,
	MYSQL_ROLE_REF       INTEGER NULL,
	MYSQL_ROWFORMAT      INTEGER NULL,
	MYSQL_SECONDARYENGINEATTR VARCHAR(1024) NULL,
	MYSQL_SELECTSTMT     VARCHAR(1024) NULL,
	MYSQL_STATSAUTORECALC INTEGER NULL,
	MYSQL_STATSPERSISTENT INTEGER NULL,
	MYSQL_STATSSAMPLEPAGES VARCHAR(1024) NULL,
	MYSQL_STORAGEIN      INTEGER NULL,
	MYSQL_STRAIGHT_JOIN  CHAR(1) NULL,
	MYSQL_SYSTEMVERSION  CHAR(1) NULL,
	MYSQL_TABLESPACE_REF INTEGER NULL,
	MYSQL_TRANSACTIONAL  INTEGER NULL,
	MYSQL_TYPE           CHAR(1) NULL,
	MYSQL_UNION          VARCHAR(1024) NULL,
	MYSQL_WHERE_CLAUSE   VARCHAR(1024) NULL,
	MYSQL_WINDOW_CLAUSE  VARCHAR(1024) NULL,
	NZBOOLSTYLE          VARCHAR(1024) NULL,
	NZCRINSTRING         VARCHAR(1024) NULL,
	NZCOMPRESS           VARCHAR(1024) NULL,
	NZCTRLCHARS          VARCHAR(1024) NULL,
	NZDATAOBJECT         VARCHAR(1024) NULL,
	NZDATEDELIM          VARCHAR(1024) NULL,
	NZDATESTYLE          VARCHAR(1024) NULL,
	NZDATETIMEDELIM      VARCHAR(1024) NULL,
	NZDECIMALDELIM       VARCHAR(1024) NULL,
	NZDELIMITER          VARCHAR(1024) NULL,
	NZENCODING           VARCHAR(1024) NULL,
	NZESCAPECHAR         VARCHAR(1024) NULL,
	NZFILLRECORD         VARCHAR(1024) NULL,
	NZFORMAT             VARCHAR(1024) NULL,
	NZIGNOREZERO         VARCHAR(1024) NULL,
	NZINCLUDEHEADER      VARCHAR(1024) NULL,
	NZINCLUDEZEROSECONDS VARCHAR(1024) NULL,
	NZLFINSTRING         VARCHAR(1024) NULL,
	NZLAYOUT             VARCHAR(1024) NULL,
	NZLOGDIR             VARCHAR(1024) NULL,
	NZMAXERRORS          VARCHAR(1024) NULL,
	NZMAXROWS            VARCHAR(1024) NULL,
	NZMERIDIANDELIM      VARCHAR(1024) NULL,
	NZNULLVALUE          VARCHAR(1024) NULL,
	NZQUOTEDVALUE        VARCHAR(1024) NULL,
	NZRECORDDELIM        VARCHAR(1024) NULL,
	NZRECORDLENGTH       VARCHAR(1024) NULL,
	NZREMOTESOURCE       VARCHAR(1024) NULL,
	NZREQUIREQUOTES      VARCHAR(1024) NULL,
	NZSKIPROWS           VARCHAR(1024) NULL,
	NZSOCKETBUFSIZE      VARCHAR(1024) NULL,
	NZTIMEDELIM          VARCHAR(1024) NULL,
	NZTIMEROUNDNANOS     VARCHAR(1024) NULL,
	NZTIMESTYLE          VARCHAR(1024) NULL,
	NZTRUNCSTRING        VARCHAR(1024) NULL,
	NZY2BASE             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_ENABLE_LABEL_NODE_DISPLAYNAME CHAR(1) NULL,
	NEO4J_ENABLE_LABEL_NODE_SIZE CHAR(1) NULL,
	NEO4J_LABEL_BKCOLOR  VARCHAR(1024) NULL,
	NEO4J_LABEL_GRID_BKCOLOR INTEGER NULL,
	NEO4J_LABEL_NODE_DISPLAYNAME VARCHAR(1024) NULL,
	NEO4J_LABEL_NODE_SIZE INTEGER NULL,
	NEO4J_LABEL_REF      INTEGER NULL,
	NEO4J_NODE_PROPERTIES VARCHAR(32000) NULL,
	NEO4J_RELATIONSHIP_REF INTEGER NULL,
	NEO4J_USER_HOME_DATABASE_REF INTEGER NULL,
	NOSQLDOCUMENTCOUNT   VARCHAR(1024) NULL,
	NOSQL_OBJECT_FULLNAME VARCHAR(1024) NULL,
	NOSQLSCRIPTTEXT      VARCHAR(32000) NULL,
	NULL_IF              VARCHAR(1024) NULL,
	OBJECT_CLASS         VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_NAME          VARCHAR(1024) NULL,
	ONPARTITION          VARCHAR(1024) NULL,
	ORACLE_ACCESS_DRIVER_TYPE INTEGER NULL,
	ORACLE_CACHE         CHAR(1) NULL,
	ORACLE_CACHE_MODE    INTEGER NULL,
	ORACLE_CLUSTER_REF   INTEGER NULL,
	ORACLE_CLUSTERINGBY  INTEGER NULL,
	ORACLE_CLUSTERINGJOINEXPRESSION VARCHAR(32000) NULL,
	ORACLE_CLUSTERINGWHENDATAMOVEMENT INTEGER NULL,
	ORACLE_CLUSTERINGWHENLOAD INTEGER NULL,
	ORACLE_CLUSTERINGZONEMAP INTEGER NULL,
	ORACLE_CLUSTERINGZONEMAPNAME VARCHAR(1024) NULL,
	ORACLE_COMMIT_TYPE   INTEGER NULL,
	ORACLE_DATA_STORAGE_TYPE INTEGER NULL,
	ORACLE_DIRECTORY_REF INTEGER NULL,
	ORACLE_ENABLE_ROW_MOVEMENT CHAR(1) NULL,
	ORACLE_FLASHBACK_ARCHIVE INTEGER NULL,
	ORACLE_FOR_EXCHANGE  INTEGER NULL,
	ORACLE_HAS_ROW_DEPENDENCIES CHAR(1) NULL,
	ORACLE_HEAP_STORAGE_REF INTEGER NULL,
	ORACLE_INDEX_STORAGE_REF INTEGER NULL,
	ORACLE_INDEXINGCLAUSE INTEGER NULL,
	ORACLE_IS_TEMPORARY_TABLE CHAR(1) NULL,
	ORACLE_LOCATION_SPECIFICATION VARCHAR(32000) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_OBJECT_IDENTIFIER INTEGER NULL,
	ORACLE_OBJECT_SUBSTITUTABLE CHAR(1) NULL,
	ORACLE_OBJECT_TABLE_REF INTEGER NULL,
	ORACLE_OVERFLOW_STORAGE_REF INTEGER NULL,
	ORACLE_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_PARTITION_TYPE INTEGER NULL,
	ORACLE_PERIOD_VALIDTIMECOLUMN VARCHAR(1024) NULL,
	ORACLE_PHYSICAL_STORAGE_REF INTEGER NULL,
	ORACLE_PREFIX_COMPRESSION INTEGER NULL,
	ORACLE_PREFIX_COMPRESSION_VALUE VARCHAR(1024) NULL,
	ORACLE_REGULAR_STORAGE_REF INTEGER NULL,
	ORACLE_SHARING       INTEGER NULL,
	ORACLE_SUPLOG        INTEGER NULL,
	ORACLE_SUPLOG_NAME   VARCHAR(1024) NULL,
	ORACLE_SUPPLEMENTAL_KEY_LOG_AK_COLUMNS CHAR(1) NULL,
	ORACLE_SUPPLEMENTAL_KEY_LOG_ALL_COLUMNS CHAR(1) NULL,
	ORACLE_SUPPLEMENTAL_KEY_LOG_FK_COLUMNS CHAR(1) NULL,
	ORACLE_SUPPLEMENTAL_KEY_LOG_PK_COLUMNS CHAR(1) NULL,
	ORACLE_TABLE_OPTIONS INTEGER NULL,
	ORACLE_TABLE_TYPE    INTEGER NULL,
	ORACLE_TBL_COMPRESS_NOCOMPRESS INTEGER NULL,
	ORACLE_USE_JOIN_CLUSTER CHAR(1) NULL,
	ORACLE_XML_ANYSCHEMA INTEGER NULL,
	ORACLE_XML_ELEMENT   VARCHAR(1024) NULL,
	ORACLE_XML_NONSCHEMA INTEGER NULL,
	ORACLE_XML_STORAGE   INTEGER NULL,
	ORACLE_XML_VARRAYS_STORAGE INTEGER NULL,
	PARALLEL_MODE        INTEGER NULL,
	PARENT_TABLE_REF     INTEGER NULL,
	PARQUET_DATABASE_REF INTEGER NULL,
	PARTITION_BY         VARCHAR(32000) NULL,
	PARTITION_COLUMN_NAME VARCHAR(1024) NULL,
	PARTITION_COLUMN_RANGE INTEGER NULL,
	PARTITION_COLUMN_VALUES VARCHAR(32000) NULL,
	PARTITION_MODIFICATION_TYPE INTEGER NULL,
	PARTITON_NUMBER_VALUE VARCHAR(1024) NULL,
	PATTERN              VARCHAR(1024) NULL,
	PERCENT_THRESHOLD    VARCHAR(1024) NULL,
	PERIOD_DEFINITION    VARCHAR(1024) NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	PRESERVE_SPACE       CHAR(1) NULL,
	PROGRESS_AREA_REF    INTEGER NULL,
	PROGRESS_DUMP_NAME   VARCHAR(1024) NULL,
	PROGRESS_LABEL       VARCHAR(1024) NULL,
	RS_DIST_STYLE        INTEGER NULL,
	RS_EXTERNAL_TABLE    CHAR(1) NULL,
	RS_EXTERNAL_TABLE_FILE_FORMAT INTEGER NULL,
	RS_EXTERNAL_TABLE_FILES_TERMINATED_BY VARCHAR(1024) NULL,
	RS_EXTERNAL_TABLE_INPUT_FORMAT VARCHAR(1024) NULL,
	RS_EXTERNAL_TABLE_LINES_TERMINATED_BY VARCHAR(1024) NULL,
	RS_EXTERNAL_TABLE_LOCATION VARCHAR(1024) NULL,
	RS_EXTERNAL_TABLE_OUTPUT_FORMAT VARCHAR(1024) NULL,
	RS_EXTERNAL_TABLE_ROW_FORMAT INTEGER NULL,
	RS_EXTERNAL_TABLE_SERDE VARCHAR(1024) NULL,
	RS_EXTERNALTBLPROPERTIES VARCHAR(32000) NULL,
	RS_SERDEPROPERTIES   VARCHAR(32000) NULL,
	REBUILD_PARTITION_TYPE INTEGER NULL,
	RECORD_DELIMITER     VARCHAR(1024) NULL,
	REFRESH_ON_CREATE    INTEGER NULL,
	REJECT_LIMIT         VARCHAR(1024) NULL,
	REJECT_LIMIT_TYPE    INTEGER NULL,
	REJECT_SAMPLE_VALUE  VARCHAR(1024) NULL,
	REJECT_TYPE          INTEGER NULL,
	REJECT_VALUE         VARCHAR(1024) NULL,
	REJECTED_ROW_LOCATION VARCHAR(1024) NULL,
	REMAINDER_IN_INFORMIX_DBSPACE_REF INTEGER NULL,
	REMOTE_TABLE_NAME    VARCHAR(1024) NULL,
	REMOTE_TABLE_SCHEMA  VARCHAR(1024) NULL,
	REPLACE_INVALID_CHARACTERS CHAR(1) NULL,
	SF_COPY_GRANTS       CHAR(1) NULL,
	SF_TABLE_TYPE        INTEGER NULL,
	SQL_LOCATION         VARCHAR(1024) NULL,
	SQLSERVER_CHANGE_TRACKING INTEGER NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_FILESTREAM_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_FILESTREAM_PARTITION_SCHEME_REF INTEGER NULL,
	SQLSERVER_IS_RETURN_VALUE_FOR_FUNCTION CHAR(1) NULL,
	SQLSERVER_LOCK_ESCALATION_TYPE INTEGER NULL,
	SQLSERVER_LOCK_ON_BULK_LOAD CHAR(1) NULL,
	SQLSERVER_PARTITION_SCHEME_REF INTEGER NULL,
	SQLSERVER_SCHEMA_NAME VARCHAR(1024) NULL,
	SQLSERVER_STORE_LARGE_VALUES_OUT_OF_ROW CHAR(1) NULL,
	SQLSERVER_TABLE_TYPE INTEGER NULL,
	SQLSERVER_TEXT_IMAGE_REF INTEGER NULL,
	SQLSERVER_TEXT_IN_ROW INTEGER NULL,
	SQLSERVER_TRACK_COLUMNS_UPDATED INTEGER NULL,
	SQLSERVER_TYPE       INTEGER NULL,
	SQLSERVER_USE_VARDECIMAL_STORAGE_FORMAT CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SELECT_TYPE          INTEGER NULL,
	SET_TABLE_REF        INTEGER NULL,
	SHARDING_COLUMN_NAME VARCHAR(1024) NULL,
	SKIP_BLANK_LINES     CHAR(1) NULL,
	SKIP_BYTE_ORDER_MARK CHAR(1) NULL,
	SKIP_HEADER          VARCHAR(1024) NULL,
	SNAPPY_COMPRESSION   CHAR(1) NULL,
	SNOWFLAKE_DATABASE_REF INTEGER NULL,
	SNOWFLAKE_FILE_FORMAT_REF INTEGER NULL,
	SOURCEPNUMBERTOTARGETPNUMBER VARCHAR(1024) NULL,
	SPLIT_MERGE          INTEGER NULL,
	SPLITMERGEBOUNDARYVALUES VARCHAR(1024) NULL,
	STAGE_FILE_FORMAT_NAME VARCHAR(1024) NULL,
	STAGE_FILE_FORMAT_TYPE INTEGER NULL,
	STORAGE_PARAMETER    VARCHAR(32000) NULL,
	STRIP_NULL_VALUES    CHAR(1) NULL,
	STRIP_OUTER_ARRAY    CHAR(1) NULL,
	STRIP_OUTER_ELEMENT  CHAR(1) NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	SYBASE_EXPECTED_ROW_SIZE VARCHAR(1024) NULL,
	SYBASE_EXTERNAL_PATH VARCHAR(1024) NULL,
	SYBASE_IDENTITY_GAP  VARCHAR(1024) NULL,
	SYBASE_MAX_ROWS      VARCHAR(1024) NULL,
	SYBASE_PARTITIONS    VARCHAR(1024) NULL,
	SYBASE_RESERVE_PAGE_GAP VARCHAR(1024) NULL,
	SYBASE_SEGMENT_REF   INTEGER NULL,
	SYBASE_TABLE_LOCK_MODE INTEGER NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	SYNAPSE_DATABASE_REF INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	TABLE_MAPPING_MODE   INTEGER NULL,
	TABLE_TYPE           INTEGER NULL,
	TABLESPACE_REF       INTEGER NULL,
	TEMPORAL_END_COLUMN_REF INTEGER NULL,
	TEMPORAL_START_COLUMN_REF INTEGER NULL,
	TEMPORARY_TYPE       INTEGER NULL,
	TERADATA_AFTER_JOURNAL_IMAGE INTEGER NULL,
	TERADATA_BEFORE_JOURNAL_IMAGE INTEGER NULL,
	TERADATA_BLOCK_COMPRESSION INTEGER NULL,
	TERADATA_CHECKSUM    INTEGER NULL,
	TERADATA_COLUMN_PARTITION_ALL_BUT CHAR(1) NULL,
	TERADATA_COMMIT_TYPE INTEGER NULL,
	TERADATA_DATA_BLOCK_SIZE VARCHAR(1024) NULL,
	TERADATA_DATA_BLOCK_SIZE_TYPE INTEGER NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_ERROR_TABLE_COMMENT VARCHAR(1024) NULL,
	TERADATA_ERROR_TABLE_DATABASE_REF INTEGER NULL,
	TERADATA_ERROR_TABLE_NAME VARCHAR(1024) NULL,
	TERADATA_FALLBACK    VARCHAR(1024) NULL,
	TERADATA_FALLBACK_PROTECTION INTEGER NULL,
	TERADATA_FREESPACE   VARCHAR(1024) NULL,
	TERADATA_GENERATE_ERROR_TABLE CHAR(1) NULL,
	TERADATA_LOAD_ISOLATION INTEGER NULL,
	TERADATA_LOGGING     CHAR(1) NULL,
	TERADATA_MERGE_BLOCK_RATIO VARCHAR(1024) NULL,
	TERADATA_MERGE_BLOCK_RATIO_TYPE INTEGER NULL,
	TERADATA_NORMALIZE_COLUMN_REF INTEGER NULL,
	TERADATA_NORMALIZE_CONDITION INTEGER NULL,
	TERADATA_PARTITIONING_EXPRESSION VARCHAR(32000) NULL,
	TERADATA_REPLICATION_GROUP_REF INTEGER NULL,
	TERADATA_ROW_CONTROL INTEGER NULL,
	TERADATA_TEMPORAL_TYPE INTEGER NULL,
	TERADATA_TYPE        INTEGER NULL,
	TERADATA_WITH_JOURNAL VARCHAR(1024) NULL,
	THEME_REF            INTEGER NULL,
	TIME_AT_BEFORE       INTEGER NULL,
	TIME_FORMAT          VARCHAR(1024) NULL,
	TIME_POINT           VARCHAR(1024) NULL,
	TIME_POINT_TYPE      INTEGER NULL,
	TIMESTAMP_FORMAT     VARCHAR(1024) NULL,
	TRIM_SPACE           CHAR(1) NULL,
	TRUNCATE_TARGET      INTEGER NULL,
	TYPE                 INTEGER NULL,
	UDB_AUDIT_POLICY_REF INTEGER NULL,
	UDB_COMPRESS_YES     INTEGER NULL,
	UDB_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	UDB_COMMIT_TYPE      INTEGER NULL,
	UDB_CYCLE_TABLESPACES CHAR(1) NULL,
	UDB_DATA_CAPTURE     INTEGER NULL,
	UDB_DISTRIBUTION_TYPE INTEGER NULL,
	UDB_INDEX_TABLESPACE_REF INTEGER NULL,
	UDB_LOCK_TYPE        INTEGER NULL,
	UDB_NICKNAME_TYPE    INTEGER NULL,
	UDB_NOT_INITIALLY_LOGGED CHAR(1) NULL,
	UDB_ORGANIZATION_TYPE INTEGER NULL,
	UDB_PERCENT_FREE     INTEGER NULL,
	UDB_ROLLBACK_TYPE    INTEGER NULL,
	UDB_SECURITY_POLICY_REF INTEGER NULL,
	UDB_SERVER_REF       INTEGER NULL,
	UDB_TYPE             INTEGER NULL,
	UNLOGGED             CHAR(1) NULL,
	UPDATE_ENTITY_DEFINITION_TO_MATCH CHAR(1) NULL,
	USE_EXISTING_FILE_FORMAT CHAR(1) NULL,
	USE_GLOBAL_SYNTAX    CHAR(1) NULL,
	USE_OVERFLOW         CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USE_TEMPORARY_SYNTAX CHAR(1) NULL,
	USER_DEFINED_DATA_TYPE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATE_UTF8        CHAR(1) NULL,
	HAS_OIDS             CHAR(1) NULL,
	TRIGGER__HAS__TRIGGERCOLUMN CHAR(1) NULL,
	CONSTRAINTS          CHAR(1) NULL,
	INDEXES              CHAR(1) NULL,
	STORAGE              CHAR(1) NULL,
	COMMENTS             CHAR(1) NULL,
	ADBL_BACK_UP         INTEGER NULL,
	ADBL_DEFAULT_VALUE   CHAR(1) NULL
);

ALTER TABLE ENTITY
ADD PRIMARY KEY (ID@);

CREATE TABLE ENTITY_DEFINITION_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ENTITY_DEFINITION_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ENTITY_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ENTITY_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ENTITY_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ENTITY_TAG_REF       INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ENTITY_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE ENTITY_TAG_LIST_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ENTITY_TAG_LIST_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ER_DIAGRAM
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	AUTO_CREATED_INITIALLY_ID INTEGER NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALIGN_GRID_COLOR     INTEGER NULL,
	ALIGN_TO_GRID        CHAR(1) NULL,
	ALIGNMENT_GRID_SPACING INTEGER NULL,
	AUTHOR               VARCHAR(1024) NULL,
	AUTO_POPULATE_WITH_ALL_OBJECTS CHAR(1) NULL,
	COUCHBASE_DISPLAY_BUCKET CHAR(1) NULL,
	COUCHBASE_DISPLAY_SCOPE CHAR(1) NULL,
	DISALLOW_MANUAL_RELATIONSHIP_LAYOUT CHAR(1) NULL,
	DISPLAY_AK_LOGICAL   CHAR(1) NULL,
	DISPLAY_AK_PHYSICAL  CHAR(1) NULL,
	DISPLAY_ATTRIBUTE_COMMENT CHAR(1) NULL,
	DISPLAY_ATTRIBUTE_COMMENT_MAXSIZE INTEGER NULL,
	DISPLAY_ATTRIBUTE_ICONS CHAR(1) NULL,
	DISPLAY_ATTRIBUTE_NULL_OPTION CHAR(1) NULL,
	DISPLAY_CARDINALITY_LOGICAL CHAR(1) NULL,
	DISPLAY_CARDINALITY_PHYSICAL CHAR(1) NULL,
	DISPLAY_CHILD_TO_PARENT_VERB_PHRASE CHAR(1) NULL,
	DISPLAY_COLUMN_COMMENT CHAR(1) NULL,
	DISPLAY_COLUMN_COMMENT_MAXSIZE INTEGER NULL,
	DISPLAY_DW_ICONS     CHAR(1) NULL,
	DISPLAY_DANGLING_RELATIONSHIPS CHAR(1) NULL,
	DISPLAY_DATAVAULT_ICON CHAR(1) NULL,
	DISPLAY_DATATYPE_LOGICAL CHAR(1) NULL,
	DISPLAY_DATATYPE_PHYSICAL CHAR(1) NULL,
	DISPLAY_DATATYPE_USING_DOMAIN_PHYSICAL CHAR(1) NULL,
	DISPLAY_DOMAIN_LOGICAL CHAR(1) NULL,
	DISPLAY_DOMAIN_PHYSICAL CHAR(1) NULL,
	DISPLAY_ENTITY_ICONS CHAR(1) NULL,
	DISPLAY_FK_DESIGNATOR_LOGICAL CHAR(1) NULL,
	DISPLAY_FK_DESIGNATOR_PHYSICAL CHAR(1) NULL,
	DISPLAY_LEVEL_LOGICAL INTEGER NULL,
	DISPLAY_LEVEL_PHYSICAL INTEGER NULL,
	DISPLAY_LINES_ON_TOP CHAR(1) NULL,
	DISPLAY_OTHER_OWNERS_ONLY CHAR(1) NULL,
	DISPLAY_OWNER        CHAR(1) NULL,
	DISPLAY_PK_DESIGNATOR_LOGICAL CHAR(1) NULL,
	DISPLAY_PK_DESIGNATOR_PHYSICAL CHAR(1) NULL,
	DISPLAY_PARENT_TO_CHILD_VERB_PHRASE CHAR(1) NULL,
	DISPLAY_RI_LOGICAL   CHAR(1) NULL,
	DISPLAY_RI_PHYSICAL  CHAR(1) NULL,
	DISPLAY_RELATIONSHIP_NAME_LOGICAL CHAR(1) NULL,
	DISPLAY_RELATIONSHIP_NAME_PHYSICAL CHAR(1) NULL,
	DISPLAY_RELATIONSHIPS CHAR(1) NULL,
	DISPLAY_ROLENAMES    CHAR(1) NULL,
	DISPLAY_SHADOW       CHAR(1) NULL,
	DISPLAY_SPLIT_RELATIONSHIP_NAMES CHAR(1) NULL,
	DISPLAY_SUBCAT_CARDINALITY CHAR(1) NULL,
	DISPLAY_SUBTYPE_DISCRIMINATOR_LOGICAL CHAR(1) NULL,
	DISPLAY_TABLE_COLUMN_NULLS CHAR(1) NULL,
	DISPLAY_UNGENERATED_INDEXES CHAR(1) NULL,
	DISPLAY_UNGENERATED_RELATIONSHIPS CHAR(1) NULL,
	DISPLAY_UNGENERATED_TABLES CHAR(1) NULL,
	DISPLAY_UNGENERATED_VIEWS CHAR(1) NULL,
	DISPLAY_VIEW_COLUMN_DATA_TYPE CHAR(1) NULL,
	DISPLAY_VIEW_COLUMN_EXPRESSIONS CHAR(1) NULL,
	DISPLAY_VIEW_COLUMN_NULL_OPTION CHAR(1) NULL,
	DISPLAY_VIEW_RELATIONSHIPS CHAR(1) NULL,
	DISPLAYVIEWSIMPLEMODE CHAR(1) NULL,
	DISPLAY_VIEWS        CHAR(1) NULL,
	DRAW_LINES_ON_TOP    CHAR(1) NULL,
	ER_DIAGRAM_FILL_COLOR1 INTEGER NULL,
	ER_DIAGRAM_FILL_COLOR2 INTEGER NULL,
	ER_DIAGRAM_FILL_GRADIENT_SLOPE INTEGER NULL,
	ER_DIAGRAM_FILL_GRADIENT_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_IMAGE_REF INTEGER NULL,
	ER_DIAGRAM_FILL_IMAGE_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_MONIKER VARCHAR(1024) NULL,
	ER_DIAGRAM_FILL_PATTERN_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_TRANSPARENCY INTEGER NULL,
	ER_LAYOUT_TYPE       INTEGER NULL,
	HIDING_VISUALCUE_COLOR INTEGER NULL,
	IS_AUTO_CREATED      CHAR(1) NULL,
	LINE_ORIENTATION     INTEGER NULL,
	LOGICAL_NOTATION_TYPE INTEGER NULL,
	LOGICAL_PHYSICAL_VIEW_MODE INTEGER NULL,
	MAX_DEFINITION_DISPLAY_LENGTH INTEGER NULL,
	MAX_VIEW_EXPRESSION_DISPLAY_LENGTH INTEGER NULL,
	NEO4J_DISPLAY_RELATIONSHIP_TYPE CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OWNED_PAGE_STYLE_SHEET_REF INTEGER NULL,
	PHYSICAL_NOTATION_TYPE INTEGER NULL,
	PROHIBIT_MANUAL_ENTITY_RESIZE CHAR(1) NULL,
	PROXY_SHORT_ID       INTEGER NULL,
	SELECTION_GRIPS_COLOR INTEGER NULL,
	SHADOW_HEIGHT        INTEGER NULL,
	SHADOW_WIDTH         INTEGER NULL,
	SHOW_ATTRIBUTES_AS_GRID CHAR(1) NULL,
	SHOW_BACKGROUND      CHAR(1) NULL,
	SHOW_CALLOUT         CHAR(1) NULL,
	SHOW_MIGRATED_ATTRIBUTES CHAR(1) NULL,
	SHOW_PAGE_GRID       CHAR(1) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ER_DIAGRAM
ADD PRIMARY KEY (ID@);

CREATE TABLE ER_DIAGRAM_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ER_DIAGRAM_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ER_MODEL_SHAPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ANCHOR_POINT         CHAR(100) NULL,
	ANCHOR_POINT_2       CHAR(100) NULL,
	ANNOTATION_FILL_COLOR1 INTEGER NULL,
	ANNOTATION_FILL_COLOR2 INTEGER NULL,
	ANNOTATION_FILL_GRADIENT_SLOPE INTEGER NULL,
	ANNOTATION_FILL_GRADIENT_STYLE INTEGER NULL,
	ANNOTATION_FILL_IMAGE_REF INTEGER NULL,
	ANNOTATION_FILL_IMAGE_STYLE INTEGER NULL,
	ANNOTATION_FILL_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_FILL_PATTERN_STYLE INTEGER NULL,
	ANNOTATION_FILL_STYLE INTEGER NULL,
	ANNOTATION_FILL_TRANSPARENCY INTEGER NULL,
	ANNOTATION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ANNOTATION_FONT_COLOR INTEGER NULL,
	ANNOTATION_FONT_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_FONT_NAME VARCHAR(1024) NULL,
	ANNOTATION_FONT_SIZE INTEGER NULL,
	ANNOTATION_FONT_STRIKETHROUGH CHAR(1) NULL,
	ANNOTATION_FONT_UNDERSCORE CHAR(1) NULL,
	ANNOTATION_IS_FONT_BOLD CHAR(1) NULL,
	ANNOTATION_IS_FONT_ITALIC CHAR(1) NULL,
	ANNOTATION_LINE_COLOR INTEGER NULL,
	ANNOTATION_LINE_CURVE_STYLE INTEGER NULL,
	ANNOTATION_LINE_CURVE_TENSION DOUBLE NULL,
	ANNOTATION_LINE_DASH_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_END_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_LINE_START_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_STYLE INTEGER NULL,
	ANNOTATION_LINE_WIDTH INTEGER NULL,
	ANNOTATION_OUTLINE_COLOR INTEGER NULL,
	ANNOTATION_OUTLINE_CURVE_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ANNOTATION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_OUTLINE_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_WIDTH INTEGER NULL,
	ANNOTATION_TEXT_HANDLING_STYLE INTEGER NULL,
	ANNOTATION_TEXT_HORIZONTAL_ALIGNMENT INTEGER NULL,
	ANNOTATION_TEXT_SLOPE INTEGER NULL,
	ANNOTATION_TEXT_VERTICAL_ALIGNMENT INTEGER NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_ALTERNATE_KEY_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_ALTERNATE_KEY_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_FILL_COLOR1 INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_COLOR2 INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_GRADIENT_SLOPE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_GRADIENT_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_IMAGE_REF INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_IMAGE_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FILL_PATTERN_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_TRANSPARENCY INTEGER NULL,
	CACHED_VIEW_DEFINITION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_DEFINITION_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_COLOR INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_CURVE_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_WIDTH INTEGER NULL,
	CACHED_VIEW_EXPRESSION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_EXPRESSION_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_EXPRESSION_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_EXPRESSION_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_EXPRESSION_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_EXPRESSION_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_EXPRESSION_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_EXPRESSION_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_EXPRESSION_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_FILL_COLOR1 INTEGER NULL,
	CACHED_VIEW_FILL_COLOR2 INTEGER NULL,
	CACHED_VIEW_FILL_GRADIENT_SLOPE INTEGER NULL,
	CACHED_VIEW_FILL_GRADIENT_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_IMAGE_REF INTEGER NULL,
	CACHED_VIEW_FILL_IMAGE_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_FILL_PATTERN_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_TRANSPARENCY INTEGER NULL,
	CACHED_VIEW_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_KEY_DISPLAY_STYLE_TYPE INTEGER NULL,
	CACHED_VIEW_OUTLINE_COLOR INTEGER NULL,
	CACHED_VIEW_OUTLINE_CURVE_STYLE INTEGER NULL,
	CACHED_VIEW_OUTLINE_CURVE_TENSION DOUBLE NULL,
	CACHED_VIEW_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	CACHED_VIEW_OUTLINE_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_OUTLINE_STYLE INTEGER NULL,
	CACHED_VIEW_OUTLINE_WIDTH INTEGER NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL,
	CHILD_CONNECTOR_POINT CHAR(100) NULL,
	CHILD_SHAPE_REF      INTEGER NULL,
	DISPLAY_LEVEL_LOGICAL INTEGER NULL,
	DISPLAY_LEVEL_PHYSICAL INTEGER NULL,
	ER_DIAGRAM_FILL_COLOR1 INTEGER NULL,
	ER_DIAGRAM_FILL_COLOR2 INTEGER NULL,
	ER_DIAGRAM_FILL_GRADIENT_SLOPE INTEGER NULL,
	ER_DIAGRAM_FILL_GRADIENT_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_IMAGE_REF INTEGER NULL,
	ER_DIAGRAM_FILL_IMAGE_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_MONIKER VARCHAR(1024) NULL,
	ER_DIAGRAM_FILL_PATTERN_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_TRANSPARENCY INTEGER NULL,
	ENTITY_ALTERNATE_KEY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_ALTERNATE_KEY_FONT_COLOR INTEGER NULL,
	ENTITY_ALTERNATE_KEY_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_ALTERNATE_KEY_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_ALTERNATE_KEY_FONT_SIZE INTEGER NULL,
	ENTITY_ALTERNATE_KEY_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_ALTERNATE_KEY_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_ALTERNATE_KEY_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_ALTERNATE_KEY_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_DEFINITION_FILL_COLOR1 INTEGER NULL,
	ENTITY_DEFINITION_FILL_COLOR2 INTEGER NULL,
	ENTITY_DEFINITION_FILL_GRADIENT_SLOPE INTEGER NULL,
	ENTITY_DEFINITION_FILL_GRADIENT_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_IMAGE_REF INTEGER NULL,
	ENTITY_DEFINITION_FILL_IMAGE_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_MONIKER VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FILL_PATTERN_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_TRANSPARENCY INTEGER NULL,
	ENTITY_DEFINITION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FONT_COLOR INTEGER NULL,
	ENTITY_DEFINITION_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FONT_SIZE INTEGER NULL,
	ENTITY_DEFINITION_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_DEFINITION_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_DEFINITION_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_DEFINITION_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_DEFINITION_OUTLINE_COLOR INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_CURVE_STYLE INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ENTITY_DEFINITION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ENTITY_DEFINITION_OUTLINE_STYLE INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_WIDTH INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_COLOR_INHERITANCE_TYPE INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_INHERITANCE_TYPE INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_FK_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_FK_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_FILL_COLOR1   INTEGER NULL,
	ENTITY_FILL_COLOR2   INTEGER NULL,
	ENTITY_FILL_GRADIENT_SLOPE INTEGER NULL,
	ENTITY_FILL_GRADIENT_STYLE INTEGER NULL,
	ENTITY_FILL_IMAGE_REF INTEGER NULL,
	ENTITY_FILL_IMAGE_STYLE INTEGER NULL,
	ENTITY_FILL_MONIKER  VARCHAR(1024) NULL,
	ENTITY_FILL_PATTERN_STYLE INTEGER NULL,
	ENTITY_FILL_STYLE    INTEGER NULL,
	ENTITY_FILL_TRANSPARENCY INTEGER NULL,
	ENTITY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_FONT_COLOR    INTEGER NULL,
	ENTITY_FONT_MONIKER  VARCHAR(1024) NULL,
	ENTITY_FONT_NAME     VARCHAR(1024) NULL,
	ENTITY_FONT_SIZE     INTEGER NULL,
	ENTITY_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_INVERSION_ENTRY_FONT_COLOR INTEGER NULL,
	ENTITY_INVERSION_ENTRY_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_INVERSION_ENTRY_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_INVERSION_ENTRY_FONT_SIZE INTEGER NULL,
	ENTITY_INVERSION_ENTRY_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_IS_FONT_BOLD  CHAR(1) NULL,
	ENTITY_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_KEY_DISPLAY_STYLE_TYPE INTEGER NULL,
	ENTITY_OUTLINE_COLOR INTEGER NULL,
	ENTITY_OUTLINE_CURVE_STYLE INTEGER NULL,
	ENTITY_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ENTITY_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ENTITY_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ENTITY_OUTLINE_STYLE INTEGER NULL,
	ENTITY_OUTLINE_WIDTH INTEGER NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_OWNED_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_OWNED_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL,
	FIXED_SIZE_POINT     CHAR(100) NULL,
	GENERAL_FILL_COLOR1  INTEGER NULL,
	GENERAL_FILL_COLOR2  INTEGER NULL,
	GENERAL_FILL_GRADIENT_SLOPE INTEGER NULL,
	GENERAL_FILL_GRADIENT_STYLE INTEGER NULL,
	GENERAL_FILL_IMAGE_REF INTEGER NULL,
	GENERAL_FILL_IMAGE_STYLE INTEGER NULL,
	GENERAL_FILL_MONIKER VARCHAR(1024) NULL,
	GENERAL_FILL_PATTERN_STYLE INTEGER NULL,
	GENERAL_FILL_STYLE   INTEGER NULL,
	GENERAL_FILL_TRANSPARENCY INTEGER NULL,
	GENERAL_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	GENERAL_FONT_COLOR   INTEGER NULL,
	GENERAL_FONT_MONIKER VARCHAR(1024) NULL,
	GENERAL_FONT_NAME    VARCHAR(1024) NULL,
	GENERAL_FONT_SIZE    INTEGER NULL,
	GENERAL_FONT_STRIKETHROUGH CHAR(1) NULL,
	GENERAL_FONT_UNDERSCORE CHAR(1) NULL,
	GENERAL_IS_FONT_BOLD CHAR(1) NULL,
	GENERAL_IS_FONT_ITALIC CHAR(1) NULL,
	GENERAL_LINE_COLOR   INTEGER NULL,
	GENERAL_LINE_CURVE_STYLE INTEGER NULL,
	GENERAL_LINE_CURVE_TENSION DOUBLE NULL,
	GENERAL_LINE_DASH_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_END_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_MONIKER VARCHAR(1024) NULL,
	GENERAL_LINE_START_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_STYLE   INTEGER NULL,
	GENERAL_LINE_WIDTH   INTEGER NULL,
	GENERAL_OUTLINE_COLOR INTEGER NULL,
	GENERAL_OUTLINE_CURVE_STYLE INTEGER NULL,
	GENERAL_OUTLINE_CURVE_TENSION DOUBLE NULL,
	GENERAL_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	GENERAL_OUTLINE_MONIKER VARCHAR(1024) NULL,
	GENERAL_OUTLINE_STYLE INTEGER NULL,
	GENERAL_OUTLINE_WIDTH INTEGER NULL,
	HIDE                 CHAR(1) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IS_DEFAULT_ROUTING   CHAR(1) NULL,
	MID_POINT_OF_RELATIONSHIP_POINT CHAR(100) NULL,
	MODEL_OBJECT_REF     INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_CONNECTOR_POINT CHAR(100) NULL,
	PARENT_SHAPE_REF     INTEGER NULL,
	RELATIONSHIP_CHILD_TO_PARENT_OFFSET INTEGER NULL,
	RELATIONSHIP_CHILD_TO_PARENT_POINT CHAR(100) NULL,
	RELATIONSHIP_COMBINED_VERB_PHRASE_OFFSET INTEGER NULL,
	RELATIONSHIP_COMBINED_VERB_PHRASE_POINT CHAR(100) NULL,
	RELATIONSHIP_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	RELATIONSHIP_FONT_COLOR INTEGER NULL,
	RELATIONSHIP_FONT_INHERITED_FROM_PARENT CHAR(1) NULL,
	RELATIONSHIP_FONT_MONIKER VARCHAR(1024) NULL,
	RELATIONSHIP_FONT_NAME VARCHAR(1024) NULL,
	RELATIONSHIP_FONT_SIZE INTEGER NULL,
	RELATIONSHIP_FONT_STRIKETHROUGH CHAR(1) NULL,
	RELATIONSHIP_FONT_UNDERSCORE CHAR(1) NULL,
	RELATIONSHIP_IS_FONT_BOLD CHAR(1) NULL,
	RELATIONSHIP_IS_FONT_ITALIC CHAR(1) NULL,
	RELATIONSHIP_LINE_COLOR INTEGER NULL,
	RELATIONSHIP_LINE_COLOR_INHERITED_FROM_PARENT CHAR(1) NULL,
	RELATIONSHIP_LINE_CURVE_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_CURVE_TENSION DOUBLE NULL,
	RELATIONSHIP_LINE_DASH_CAP_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_END_CAP_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_MONIKER VARCHAR(1024) NULL,
	RELATIONSHIP_LINE_START_CAP_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_WIDTH INTEGER NULL,
	RELATIONSHIP_NAME_OFFSET INTEGER NULL,
	RELATIONSHIP_NAME_POINT CHAR(100) NULL,
	RELATIONSHIP_PARENT_TO_CHILD_OFFSET INTEGER NULL,
	RELATIONSHIP_PARENT_TO_CHILD_POINT CHAR(100) NULL,
	RELATIONSHIP_PHYSICAL_NAME_OFFSET INTEGER NULL,
	RELATIONSHIP_PHYSICAL_NAME_POINT CHAR(100) NULL,
	RELATIONSHIP_TEXT_COLOR_INHERITED_FROM_LINE CHAR(1) NULL,
	RELATIONSHIP_TYPE_OFFSET INTEGER NULL,
	RELATIONSHIP_TYPE_POINT CHAR(100) NULL,
	SUBTYPE_DISCRIMINATOR_OFFSET INTEGER NULL,
	SUBTYPE_DISCRIMINATOR_POINT CHAR(100) NULL,
	SUBTYPE_SYMBOL_FILL_COLOR1 INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_COLOR2 INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_GRADIENT_SLOPE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_GRADIENT_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_IMAGE_REF INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_IMAGE_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_MONIKER VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FILL_PATTERN_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_TRANSPARENCY INTEGER NULL,
	SUBTYPE_SYMBOL_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FONT_COLOR INTEGER NULL,
	SUBTYPE_SYMBOL_FONT_INHERITED_FROM_PARENT CHAR(1) NULL,
	SUBTYPE_SYMBOL_FONT_MONIKER VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FONT_NAME VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FONT_SIZE INTEGER NULL,
	SUBTYPE_SYMBOL_FONT_STRIKETHROUGH CHAR(1) NULL,
	SUBTYPE_SYMBOL_FONT_UNDERSCORE CHAR(1) NULL,
	SUBTYPE_SYMBOL_IS_FONT_BOLD CHAR(1) NULL,
	SUBTYPE_SYMBOL_IS_FONT_ITALIC CHAR(1) NULL,
	SUBTYPE_SYMBOL_LINE_COLOR INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_COLOR_INHERITED_FROM_PARENT CHAR(1) NULL,
	SUBTYPE_SYMBOL_LINE_CURVE_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_CURVE_TENSION DOUBLE NULL,
	SUBTYPE_SYMBOL_LINE_DASH_CAP_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_END_CAP_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_MONIKER VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_LINE_START_CAP_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_WIDTH INTEGER NULL,
	SUBTYPE_SYMBOL_TEXT_COLOR_INHERITED_FROM_LINE CHAR(1) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_DEFINITION_FILL_COLOR1 INTEGER NULL,
	VIEW_DEFINITION_FILL_COLOR2 INTEGER NULL,
	VIEW_DEFINITION_FILL_GRADIENT_SLOPE INTEGER NULL,
	VIEW_DEFINITION_FILL_GRADIENT_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_IMAGE_REF INTEGER NULL,
	VIEW_DEFINITION_FILL_IMAGE_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_MONIKER VARCHAR(1024) NULL,
	VIEW_DEFINITION_FILL_PATTERN_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_TRANSPARENCY INTEGER NULL,
	VIEW_DEFINITION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_DEFINITION_FONT_COLOR INTEGER NULL,
	VIEW_DEFINITION_FONT_MONIKER VARCHAR(1024) NULL,
	VIEW_DEFINITION_FONT_NAME VARCHAR(1024) NULL,
	VIEW_DEFINITION_FONT_SIZE INTEGER NULL,
	VIEW_DEFINITION_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_DEFINITION_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_DEFINITION_IS_FONT_BOLD CHAR(1) NULL,
	VIEW_DEFINITION_IS_FONT_ITALIC CHAR(1) NULL,
	VIEW_DEFINITION_OUTLINE_COLOR INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_CURVE_STYLE INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	VIEW_DEFINITION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	VIEW_DEFINITION_OUTLINE_STYLE INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_WIDTH INTEGER NULL,
	VIEW_EXPRESSION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_EXPRESSION_FONT_COLOR INTEGER NULL,
	VIEW_EXPRESSION_FONT_MONIKER VARCHAR(1024) NULL,
	VIEW_EXPRESSION_FONT_NAME VARCHAR(1024) NULL,
	VIEW_EXPRESSION_FONT_SIZE INTEGER NULL,
	VIEW_EXPRESSION_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_EXPRESSION_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_EXPRESSION_IS_FONT_BOLD CHAR(1) NULL,
	VIEW_EXPRESSION_IS_FONT_ITALIC CHAR(1) NULL,
	VIEW_FILL_COLOR1     INTEGER NULL,
	VIEW_FILL_COLOR2     INTEGER NULL,
	VIEW_FILL_GRADIENT_SLOPE INTEGER NULL,
	VIEW_FILL_GRADIENT_STYLE INTEGER NULL,
	VIEW_FILL_IMAGE_REF  INTEGER NULL,
	VIEW_FILL_IMAGE_STYLE INTEGER NULL,
	VIEW_FILL_MONIKER    VARCHAR(1024) NULL,
	VIEW_FILL_PATTERN_STYLE INTEGER NULL,
	VIEW_FILL_STYLE      INTEGER NULL,
	VIEW_FILL_TRANSPARENCY INTEGER NULL,
	VIEW_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_FONT_COLOR      INTEGER NULL,
	VIEW_FONT_MONIKER    VARCHAR(1024) NULL,
	VIEW_FONT_NAME       VARCHAR(1024) NULL,
	VIEW_FONT_SIZE       INTEGER NULL,
	VIEW_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_IS_FONT_BOLD    CHAR(1) NULL,
	VIEW_IS_FONT_ITALIC  CHAR(1) NULL,
	VIEW_OUTLINE_COLOR   INTEGER NULL,
	VIEW_OUTLINE_CURVE_STYLE INTEGER NULL,
	VIEW_OUTLINE_CURVE_TENSION DOUBLE NULL,
	VIEW_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	VIEW_OUTLINE_MONIKER VARCHAR(1024) NULL,
	VIEW_OUTLINE_STYLE   INTEGER NULL,
	VIEW_OUTLINE_WIDTH   INTEGER NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_OWNED_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	VIEW_OWNED_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL
);

ALTER TABLE ER_MODEL_SHAPE
ADD PRIMARY KEY (ID@);

CREATE TABLE ER_SHAPE_LINE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	CHILD_ANCHOR_POINT   CHAR(100) NULL,
	CHILD_SHAPE_REF      INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_ANCHOR_POINT  CHAR(100) NULL,
	PARENT_SHAPE_REF     INTEGER NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ER_SHAPE_LINE
ADD PRIMARY KEY (ID@);

CREATE TABLE ER_SHAPE_NODE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ANCHOR_POINT         CHAR(100) NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	FIXED_SIZE_POINT     CHAR(100) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ER_SHAPE_NODE
ADD PRIMARY KEY (ID@);

CREATE TABLE ER_SHAPE_RELATIONSHIP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	CHILD_CONNECTOR_POINT CHAR(100) NULL,
	CHILD_SHAPE_REF      INTEGER NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_CONNECTOR_POINT CHAR(100) NULL,
	PARENT_SHAPE_REF     INTEGER NULL,
	RELATIONSHIP_CHILD_TO_PARENT_OFFSET INTEGER NULL,
	RELATIONSHIP_CHILD_TO_PARENT_POINT CHAR(100) NULL,
	RELATIONSHIP_COMBINED_VERB_PHRASE_OFFSET INTEGER NULL,
	RELATIONSHIP_COMBINED_VERB_PHRASE_POINT CHAR(100) NULL,
	RELATIONSHIP_NAME_OFFSET INTEGER NULL,
	RELATIONSHIP_NAME_POINT CHAR(100) NULL,
	RELATIONSHIP_PARENT_TO_CHILD_OFFSET INTEGER NULL,
	RELATIONSHIP_PARENT_TO_CHILD_POINT CHAR(100) NULL,
	RELATIONSHIP_PHYSICAL_NAME_OFFSET INTEGER NULL,
	RELATIONSHIP_PHYSICAL_NAME_POINT CHAR(100) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ER_SHAPE_RELATIONSHIP
ADD PRIMARY KEY (ID@);

CREATE TABLE ER_SHAPE_SUBTYPE_SYMBOL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ANCHOR_POINT         CHAR(100) NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	CHILD_CONNECTOR_POINT CHAR(100) NULL,
	FIXED_SIZE_POINT     CHAR(100) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_CONNECTOR_POINT CHAR(100) NULL,
	PARENT_SHAPE_REF     INTEGER NULL,
	SUBTYPE_DISCRIMINATOR_OFFSET INTEGER NULL,
	SUBTYPE_DISCRIMINATOR_POINT CHAR(100) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ER_SHAPE_SUBTYPE_SYMBOL
ADD PRIMARY KEY (ID@);

CREATE TABLE EXCLUDE_ELEMENTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE EXCLUDE_ELEMENTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE EXTENDED_NOTES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	MIGRATE              INTEGER NULL,
	MODIFICATION_TIME    TIMESTAMP NULL,
	MODIFIER             VARCHAR(1024) NULL,
	NOTE_IMPORTANCE      INTEGER NULL,
	NOTE_PARENTGUID      CHAR(67) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_ID            INTEGER NULL,
	STATUS               INTEGER NULL,
	TOP_GUID             CHAR(67) NULL,
	USER_DEFINED_EVENT   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE EXTENDED_NOTES
ADD PRIMARY KEY (ID@);

CREATE TABLE EXTENDED_NOTES_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE EXTERNAL_LANGUAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB_ROLE_REF          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_REF             INTEGER NULL
);

ALTER TABLE EXTERNAL_LANGUAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE EXTERNAL_LIBRARY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB_ROLE_REF          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXTERN_LANGUAGE_REF  INTEGER NULL,
	EXTERNAL_LANGUAGE_REF INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_LANGUAGE   INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_REF             INTEGER NULL
);

ALTER TABLE EXTERNAL_LIBRARY
ADD PRIMARY KEY (ID@);

CREATE TABLE FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALIAS_NAME           VARCHAR(1024) NULL,
	DB2_TYPE             INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_TYPE       INTEGER NULL,
	SCHEMA_REF           INTEGER NULL,
	TERADATA_NAME_ON_SERVER VARCHAR(1024) NULL,
	TERADATA_RESIDENCE   INTEGER NULL,
	TERADATA_TYPE        INTEGER NULL,
	UDB_TYPE             INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE FILE_NAMES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE FILE_NAMES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE FILE_SPEC
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXTERNAL_LANG_ENVIRONMENT_VARIABLES VARCHAR(1024) NULL,
	EXTERNAL_LANG_FILE_NAME VARCHAR(1024) NULL,
	EXTERNAL_LANG_PARAMETERS VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PLATFORM             INTEGER NULL,
	SQLSERVER_CONTENT    VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE FILE_SPEC
ADD PRIMARY KEY (ID@);

CREATE TABLE FILE_SPEC_LIB_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE FILE_SPEC_LIB_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE FILE_SPEC_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE FILE_SPEC_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE FILES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE FILES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE FLASHBACK_ARCHIVE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARCHIVE_NAME         VARCHAR(1024) NULL,
	ARCHIVE_QUOTA        VARCHAR(1024) NULL,
	ARCHIVE_RETENTION    VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DEFAULT           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	SIZE_IN_BYTES        INTEGER NULL,
	TIME_DURATION        INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE FLASHBACK_ARCHIVE
ADD PRIMARY KEY (ID@);

CREATE TABLE FUNCTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	AGGREGATE            CHAR(1) NULL,
	AS_FUNCTION_DEFINITION VARCHAR(32000) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	AUTO_BIND_TO_NEW     CHAR(1) NULL,
	CALL_RETURN_TYPE     INTEGER NULL,
	CARDINALITY_VALUE    VARCHAR(1024) NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	CASSANDRA_NULLINPUT  INTEGER NULL,
	CLASS_NAME           VARCHAR(1024) NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	COUCHBASE_FUNCTION_BODY VARCHAR(1024) NULL,
	COUCHBASE_FUNCTION_LANGUAGE VARCHAR(1024) NULL,
	COUCHBASE_FUNCTION_TYPE INTEGER NULL,
	COUCHBASE_SCOPE_REF  INTEGER NULL,
	DB2_CPU_SERVICE_TIME_LIMIT INTEGER NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_EXTERNAL_SECURITY_TYPE INTEGER NULL,
	DB2_FAILURE_LIMIT    INTEGER NULL,
	DB2_FAILURE_STOP_TYPE INTEGER NULL,
	DB2_LANGUAGE         INTEGER NULL,
	DB2_NULL_INPUT       INTEGER NULL,
	DB2_PACKAGE_COLLECTION_ID VARCHAR(1024) NULL,
	DB2_PACKAGE_PATH     VARCHAR(32000) NULL,
	DB2_PARAMETER_STYLE  INTEGER NULL,
	DB2_PARAMETER_VARCHAR_FORM INTEGER NULL,
	DB2_PROGRAM_TYPE     INTEGER NULL,
	DB2_REMAIN_RESIDENT_IN_MEMORY CHAR(1) NULL,
	DB2_RETURN_CAST_CHARACTER_TYPE INTEGER NULL,
	DB2_RETURN_CAST_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_RETURN_CHARACTER_TYPE INTEGER NULL,
	DB2_RETURN_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_RUNTIME_OPTIONS  VARCHAR(4000) NULL,
	DB2_SPECIAL_REGISTER_USAGE INTEGER NULL,
	DB2_TYPE             INTEGER NULL,
	DB2_USE_CPU_SERVICE_TIME_LIMIT CHAR(1) NULL,
	DB2_USE_PACKAGE_COLLECTION CHAR(1) NULL,
	DB2_USE_PACKAGE_PATH CHAR(1) NULL,
	DB2_WORKLOAD_MANAGER_ENVIRONMENT VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DATABRICKS_DATABASE_REF INTEGER NULL,
	DATE_FIRST           INTEGER NULL,
	DATE_FORMAT          VARCHAR(1024) NULL,
	DELAYED_DURABILITY   INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EDITIONABLE          CHAR(1) NULL,
	EXTERNAL_NAME        VARCHAR(1024) NULL,
	FILE_REF             INTEGER NULL,
	GENERATE_AS_PRE_SCRIPT CHAR(1) NULL,
	GLOBAL_PERSISTENT_DATA_SET_REF INTEGER NULL,
	GLOBAL_VARIABLE_REF  INTEGER NULL,
	GOOGLE_BIGQUERY_DATABASE_REF INTEGER NULL,
	GOOGLEBIGQUERY_FUNCTION_BODY VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_FUNCTION_DESCRIPTION VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_FUNCTION_LIBRARY VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_FUNCTION_TYPE INTEGER NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_DETERMINISTIC     CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	IS_EXTERNAL_ACTION_ALLOWED CHAR(1) NULL,
	IS_FENCED            CHAR(1) NULL,
	IS_NOT_NULL          INTEGER NULL,
	IS_PARALLEL_PROCESSING_ALLOWED CHAR(1) NULL,
	IS_SECURE            CHAR(1) NULL,
	IS_THREAD_SAFE       CHAR(1) NULL,
	LANGUAGE             VARCHAR(1024) NULL,
	LANUGUAGE_TYPE       INTEGER NULL,
	MAKE_FINAL_CALL      CHAR(1) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_FUNCTION_DEFINER VARCHAR(1024) NULL,
	MARIADB_FUNCTION_RETURN_DATA_TYPE VARCHAR(1024) NULL,
	MARIADB_FUNCTION_SQL_DATA_ACCESS INTEGER NULL,
	MARIADB_FUNCTION_SECURITY_TYPE INTEGER NULL,
	METHOD_NAME          VARCHAR(1024) NULL,
	MODULE_REF           INTEGER NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_FUNCTION_DEFINER VARCHAR(1024) NULL,
	MYSQL_FUNCTION_RETURN_DATA_TYPE VARCHAR(1024) NULL,
	MYSQL_FUNCTION_SQL_DATA_ACCESS INTEGER NULL,
	MYSQL_FUNCTION_SECURITY_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	PGSQL_FUNCTION_TYPE  INTEGER NULL,
	RS_FUNCTION_LANGUAGE INTEGER NULL,
	RETURN_CAST_CHARACTER_SET_TYPE INTEGER NULL,
	RETURN_CAST_DATA_TYPE VARCHAR(1024) NULL,
	RETURN_CAST_TYPE_REF INTEGER NULL,
	RETURN_DATA_TYPE     VARCHAR(1024) NULL,
	RETURN_DATA_TYPE_ANCHORED_TO_TYPE INTEGER NULL,
	RETURN_TABLE_DEFINITION_REF INTEGER NULL,
	RETURN_TABLE_REF     INTEGER NULL,
	RETURN_TYPE_OPTIONS  INTEGER NULL,
	RETURN_TYPE_REF      INTEGER NULL,
	SQL_DATA_ACCESS      INTEGER NULL,
	SQLSERVER_ASSEMBLY_REF INTEGER NULL,
	SQLSERVER_CODE_TYPE  INTEGER NULL,
	SQLSERVER_ENTITY_REF INTEGER NULL,
	SQLSERVER_EXECUTE_AS_MODE INTEGER NULL,
	SQLSERVER_EXECUTE_AS_PRINCIPAL_REF INTEGER NULL,
	SQLSERVER_FUNCTION_TYPE INTEGER NULL,
	SQLSERVER_IS_OBFUSCATED CHAR(1) NULL,
	SQLSERVER_METHOD_NAME VARCHAR(1024) NULL,
	SQLSERVER_NULL_INPUT_MODE INTEGER NULL,
	SQLSERVER_RETURN_VARIABLE VARCHAR(1024) NULL,
	SQLSERVER_USE_SCHEMA_BINDING CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SCRATCH_PAD_LENGTH   INTEGER NULL,
	SHARING              INTEGER NULL,
	SOURCE_FUNCTION_REF  INTEGER NULL,
	SOURCE_SPECIFIC_FUNCTION_NAME VARCHAR(1024) NULL,
	SOURCE_SPECIFIC_SCHEMA_REF INTEGER NULL,
	SPECIFIC_NAME        VARCHAR(1024) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	SYNAPSE_NULL_INPUT_MODE INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TERADATA_AGGREGATE_CACHE_SIZE INTEGER NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TERADATA_CLASS       INTEGER NULL,
	TERADATA_COMPILE     INTEGER NULL,
	TERADATA_COMPRESS_TYPE INTEGER NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_DEBUG       CHAR(1) NULL,
	TERADATA_DELIMITER   VARCHAR(1024) NULL,
	TERADATA_DETERMINISTIC CHAR(1) NULL,
	TERADATA_ENTRY_POINT_NAME VARCHAR(1024) NULL,
	TERADATA_EXECUTE     INTEGER NULL,
	TERADATA_EXTERNAL_NAME VARCHAR(1024) NULL,
	TERADATA_EXTERNAL_SECURITY_AUTHORIZATION_REF INTEGER NULL,
	TERADATA_EXTERNAL_SECURITY_TYPE INTEGER NULL,
	TERADATA_FUNCTION_TYPE INTEGER NULL,
	TERADATA_LANGUAGE    INTEGER NULL,
	TERADATA_NULL_INPUT  INTEGER NULL,
	TERADATA_PARAMETER_STYLE INTEGER NULL,
	TERADATA_RETURN_TABLE_VARYING_COLUMNS INTEGER NULL,
	TERADATA_SQL_DATA_ACCESS INTEGER NULL,
	TERADATA_SPECIFIC_NAME VARCHAR(1024) NULL,
	TRANSACTION_ISOLATION_LEVEL INTEGER NULL,
	TYPE                 INTEGER NULL,
	UDB_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	UDB_IS_FEDERATED     CHAR(1) NULL,
	UDB_IS_LOCK_ALLOWED_WITH_ISOLATION CHAR(1) NULL,
	UDB_LANGUAGE         INTEGER NULL,
	UDB_NULL_INPUT       INTEGER NULL,
	UDB_PARAMETER_STYLE  INTEGER NULL,
	UDB_PREDICATE_CONTEXT_EXPRESSION VARCHAR(2000000000) NULL,
	UDB_PREDICATE_CONTEXT_OPERATOR VARCHAR(1024) NULL,
	UDB_PREDICATE_FILTER VARCHAR(1024) NULL,
	UDB_PREDICATE_INDEX_EXTENSION_REF INTEGER NULL,
	UDB_PREDICATE_SPECIFICATION_TYPE INTEGER NULL,
	UDB_PREDICATE_USE_INDEX_EXTENSION_EXACT_LOOKUP CHAR(1) NULL,
	UDB_RETURN_CAST_CHARACTER_TYPE INTEGER NULL,
	UDB_RETURN_CHARACTER_TYPE INTEGER NULL,
	UDB_SPECIAL_REGISTER_USAGE INTEGER NULL,
	UDB_TYPE             INTEGER NULL,
	USE_ALTER_SYNTAX     CHAR(1) NULL,
	USE_CALLING_PROCEDURE_ENVIRONMENT CHAR(1) NULL,
	USE_DB_INFO          CHAR(1) NULL,
	USE_GLOBAL_SYNTAX    CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USE_SCRATCH_PAD      CHAR(1) NULL,
	USE_STATIC_DISPATCH  CHAR(1) NULL,
	USE_TEMPORARY_SYNTAX CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VOLATILE_OR_IMMUTABLE INTEGER NULL,
	POSTGRESQL_LANGUAGE  INTEGER NULL,
	POSTGRESQL_IS_WINDOW_FUNCTION CHAR(1) NULL,
	POSTGRESQL_VOLATILITY INTEGER NULL,
	POSTGRESQL_IS_STRICT CHAR(1) NULL,
	POSTGRESQL_RETURNS_SET CHAR(1) NULL,
	POSTGRESQL_IS_LEAKPROOF INTEGER NULL,
	POSTGRESQL_EXECUTION_COST INTEGER NULL,
	POSTGRESQL_RESULT_ROWS INTEGER NULL,
	POSTGRESQL_EXECUTE_PRIVILEGE INTEGER NULL,
	POSTGRESQL_OBJ_FILE  VARCHAR(1024) NULL,
	POSTGRESQL_LINK_SYMBOL VARCHAR(1024) NULL,
	POSTGRESQL_PARALLEL  INTEGER NULL,
	REDSHIFT_VOLATILITY  INTEGER NULL
);

ALTER TABLE FUNCTION
ADD PRIMARY KEY (ID@);

CREATE TABLE FUNCTION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_FUNCTION_PERMISSIONS INTEGER NULL,
	ADBL_GROUP_ROLE_REF  INTEGER NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE FUNCTION_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE FUNCTIONS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE FUNCTIONS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE GENERAL_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE GENERAL_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE GLOBAL_PERSISTENT_DATA_SET
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE GLOBAL_PERSISTENT_DATA_SET
ADD PRIMARY KEY (ID@);

CREATE TABLE GLOBAL_VARIABLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	ANCHORED_TO_TYPE     INTEGER NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	DATA_TYPE_REF        INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GLOBAL_VARIABLE_REF  INTEGER NULL,
	INITIAL_VALUE        VARCHAR(1024) NULL,
	IS_INITIAL_VALUE_CONSTANT CHAR(1) NULL,
	IS_VALID             CHAR(1) NULL,
	MODULE_REF           INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	UDB_CHARACTER_TYPE   INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE GLOBAL_VARIABLE
ADD PRIMARY KEY (ID@);

CREATE TABLE GLOSSARY_WORD_LIST
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE GLOSSARY_WORD_LIST
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE GOOGLE_BIGQUERY_CLUSTERING_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE GOOGLE_BIGQUERY_CLUSTERING_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE GOOGLE_BIGQUERY_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GOOGLE_BIGQUERY_DATABASE_DEFAULT_KMS_KEY_NAME VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_DATABASE_DEFAULT_PARTITION_EXPIRATION_DAYS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_DATABASE_DEFAULT_TABLE_EXPIRATION_DAYS VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_DATABASE_FRIENDLY_NAME VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_LOCATION VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_PROJECT VARCHAR(1024) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE GOOGLE_BIGQUERY_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE GOOGLE_BIGQUERY_LABEL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GOOGLE_BIGQUERY_LABEL_VALUE VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE GOOGLE_BIGQUERY_LABEL
ADD PRIMARY KEY (ID@);

CREATE TABLE GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HASH_INDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_BLOCK_COMPRESSION INTEGER NULL,
	TERADATA_CHECKSUM    INTEGER NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_FALLBACK_PROTECTION INTEGER NULL,
	TERADATA_ORDER_BY    INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HASH_INDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE HASH_INDEX_MEMBER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HASH_INDEX_MEMBER
ADD PRIMARY KEY (ID@);

CREATE TABLE HASH_INDEX_MEMBERS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HASH_INDEX_MEMBERS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HISTORY_LIST
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	EVENT_TYPE           VARCHAR(2) NULL,
	SYSTEM_TEXT          VARCHAR(4000) NULL,
	SOURCE_PATH          VARCHAR(4000) NULL,
	USER_TEXT            VARCHAR(4000) NULL,
	CREATE_TIMESTAMP     VARCHAR(23) NULL,
	CREATOR              VARCHAR(256) NULL,
	HISTORY_ID           VARCHAR(4000) NULL,
	SOURCE_ID            VARCHAR(4000) NULL,
	SOURCE_SHORT_ID      VARCHAR(4000) NULL
);

ALTER TABLE HISTORY_LIST
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_BUCKET_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARE_NULLS_SORTED_LAST CHAR(1) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	COLUMN_SORT_ORDER    INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HIVE_BUCKET_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE HIVE_BUCKET_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_BUCKET_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_CTAS_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_CTAS_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	HIVE_DBLOCATION      VARCHAR(1024) NULL,
	HIVE_DBTBLPROPERTIES VARCHAR(32000) NULL,
	HIVE_ROLE_REF        INTEGER NULL,
	HIVE_USER_ID_REF     INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE HIVE_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE HIVE_DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	HIVE_PARTITION_ARCHIVE CHAR(1) NULL,
	HIVE_PARTITION_COMPACT INTEGER NULL,
	HIVE_PARTITION_CONCATENATE CHAR(1) NULL,
	HIVE_PARTITION_DEST_TABLE INTEGER NULL,
	HIVE_PARTITION_INPUTFORMAT VARCHAR(1024) NULL,
	HIVE_PARTITION_LOCATION VARCHAR(32000) NULL,
	HIVE_PARTITION_OUTPUTFORMAT VARCHAR(1024) NULL,
	HIVE_PARTITION_SERDE VARCHAR(1024) NULL,
	HIVE_PARTITION_SERDEPROPERTIES VARCHAR(32000) NULL,
	HIVE_PARTITION_SPEC  VARCHAR(32000) NULL,
	HIVE_PARTITION_STOREDAS INTEGER NULL,
	HIVE_PARTITION_TOUCH CHAR(1) NULL,
	HIVE_STATISTICS_PARTITION_NUMFILES VARCHAR(1024) NULL,
	HIVE_STATISTICS_PARTITION_NUMROWS VARCHAR(1024) NULL,
	HIVE_STATISTICS_PARTITION_RAWDATASIZE VARCHAR(1024) NULL,
	HIVE_STATISTICS_PARTITION_TOTALSIZE VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HIVE_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE HIVE_PARTITION_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_PARTITION_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HIVE_ROLE
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON HIVE_ROLE
(
	OWNER@
);

CREATE TABLE HIVE_SKEWED_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	HIVE_SKEWED_COLUMN_LOCATION VARCHAR(32000) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HIVE_SKEWED_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE HIVE_SKEWED_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_SKEWED_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_SORTED_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARE_NULLS_SORTED_LAST CHAR(1) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	COLUMN_SORT_ORDER    INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE HIVE_SORTED_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE HIVE_SORTED_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_SORTED_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE HIVE_VIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE HIVE_VIEW_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ILM
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ILM_COLUMN_STORE_COMPRESS_FOR INTEGER NULL,
	ILM_COLUMN_STORE_COMPRESS_LEVEL INTEGER NULL,
	ILM_COMPRESS_NOCOMPRESS INTEGER NULL,
	ILM_COMPRESS_TYPE    INTEGER NULL,
	ILM_COMPRESSION_POLICY_ROW_AFTER VARCHAR(1024) NULL,
	ILM_COMPRESSION_POLICY_ROW_AFTER_TIME INTEGER NULL,
	ILM_COMPRESSION_POLICY_ROW_OR_COLUMN_STORE INTEGER NULL,
	ILM_EDIT_ALL_POLICY  INTEGER NULL,
	ILM_EDIT_POLICY      INTEGER NULL,
	ILM_INMEMORY_AFTER   VARCHAR(1024) NULL,
	ILM_INMEMORY_EXE_AFTER_OF INTEGER NULL,
	ILM_INMEMORY_MEMCOMPRESS_OPTIMIZATION_LEVEL INTEGER NULL,
	ILM_INMEMORY_MEMCOMPRESS_OPTIMIZED_FOR INTEGER NULL,
	ILM_INMEMORY_MEMOMPRESS INTEGER NULL,
	ILM_INMEMORY_ON_FUNCTION VARCHAR(1024) NULL,
	ILM_INMEMORY_POLICY_TIME INTEGER NULL,
	ILM_INMEMORY_SEGMENT CHAR(1) NULL,
	ILM_MEMCOMPRESS_FOR_DML CHAR(1) NULL,
	ILM_POLICY_AFTER     VARCHAR(1024) NULL,
	ILM_POLICY_EXE_AFTER_OF INTEGER NULL,
	ILM_POLICY_EXE_AFTER_TIME INTEGER NULL,
	ILM_POLICY_FOR       INTEGER NULL,
	ILM_POLICY_NAME      VARCHAR(1024) NULL,
	ILM_POLICY_ON_FUNCTION VARCHAR(1024) NULL,
	ILM_ROW_LEVEL_LOCKING INTEGER NULL,
	ILM_ROW_STORE_COMPRESS_LEVEL INTEGER NULL,
	ILM_SET_OR_MODIFY_INMEMORY INTEGER NULL,
	ILM_TIER_AFTER       VARCHAR(1024) NULL,
	ILM_TIER_EXE_AFTER_OF INTEGER NULL,
	ILM_TIER_FOR         INTEGER NULL,
	ILM_TIER_IS_READ_ONLY CHAR(1) NULL,
	ILM_TIER_ON          VARCHAR(1024) NULL,
	ILM_TIER_POLICY_TIME INTEGER NULL,
	ILM_TIER_TO_TABLESPACE VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_INMEMORY_REF  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ILM
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON ILM
(
	OWNER@
);

CREATE TABLE IMAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IMAGE_DATA           VARCHAR(1024) NULL,
	IMAGE_PATH           VARCHAR(1024) NULL,
	IMAGE_SIZE           CHAR(100) NULL,
	IMAGE_STORAGE_TYPE   INTEGER NULL,
	IMAGE_TYPE           CHAR(67) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL
);

ALTER TABLE IMAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE INCLUDE_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE INCLUDE_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE INCLUDE_ELEMENTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE INCLUDE_ELEMENTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE INDEX_EXTENSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GENERATE_KEY_FUNCTION_DEFINITION VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	SOURCE_KEY           VARCHAR(1024) NULL,
	TARGET_KEY           VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE INDEX_EXTENSION
ADD PRIMARY KEY (ID@);

CREATE TABLE INDEX_EXTENSION_EXPRESSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE INDEX_EXTENSION_EXPRESSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE INDEX_MEMBERS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE INDEX_MEMBERS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE INFORMIX_DBSPACE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE INFORMIX_DBSPACE
ADD PRIMARY KEY (ID@);

CREATE TABLE INGRES_LOCATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	INGRES_AREA          VARCHAR(1024) NULL,
	INGRES_LOCATION_AREA VARCHAR(1024) NULL,
	INGRES_LOCATION_USAGE VARCHAR(1024) NULL,
	INGRES_USAGE_ALL     CHAR(1) NULL,
	INGRES_USAGE_CHECKPOINT CHAR(1) NULL,
	INGRES_USAGE_DATABASE CHAR(1) NULL,
	INGRES_USAGE_DUMP    CHAR(1) NULL,
	INGRES_USAGE_JOURNAL CHAR(1) NULL,
	INGRES_USAGE_TYPE    INTEGER NULL,
	INGRES_USAGE_WORK    CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE INGRES_LOCATION
ADD PRIMARY KEY (ID@);

CREATE TABLE INNER_POINTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(100) NULL
);

ALTER TABLE INNER_POINTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE JSON_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE JSON_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE KEY_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_CLUSTERING_KEY_LIST VARCHAR(1024) NULL,
	AWS_KEYSPACE_CUSTOMINDEX CHAR(1) NULL,
	AWS_KEYSPACE_ITEMPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_PARTITION_KEY_LIST VARCHAR(1024) NULL,
	AWS_KEYSPACE_READ_CAPACITY VARCHAR(1024) NULL,
	AWS_KEYSPACE_TBLPROPERTIES VARCHAR(32000) NULL,
	AWS_KEYSPACE_THROUGHPUT_MODE INTEGER NULL,
	AWS_KEYSPACE_USING   VARCHAR(32000) NULL,
	AWS_KEYSPACE_WRITE_CAPACITY VARCHAR(1024) NULL,
	AWS_KEYSPACE_MAX_INDEX_INTERVAL VARCHAR(1024) NULL,
	AWS_KEYSPACE_MEMTABLE_FLUSH_PERIOD_IN_MS VARCHAR(1024) NULL,
	AWS_KEYSPACE_MIN_INDEX_INTERVAL VARCHAR(1024) NULL,
	AWS_KEYSPACE_SPECULATIVE_RETRY VARCHAR(1024) NULL,
	ALLOW_INDEX_REVERSE_SCANS CHAR(1) NULL,
	ALLOW_PAGE_LOCKS     CHAR(1) NULL,
	ALLOW_ROW_LOCKS      CHAR(1) NULL,
	ARANGODB_INDEX_BACKGROUND CHAR(1) NULL,
	ARANGODB_INDEX_DEDUPLICATE CHAR(1) NULL,
	ARANGODB_INDEX_DOCEXPIREAFTER VARCHAR(1024) NULL,
	ARANGODB_INDEX_ESTIMATES CHAR(1) NULL,
	ARANGODB_INDEX_GEOJSON CHAR(1) NULL,
	ARANGODB_INDEX_MINLENGTH VARCHAR(1024) NULL,
	ARANGODB_INDEX_SPARSE CHAR(1) NULL,
	ARANGODB_INDEX_TYPE  INTEGER NULL,
	ARANGODB_INDEX_UNIQUE CHAR(1) NULL,
	ARE_NULLS_EQUAL      CHAR(1) NULL,
	BUCKET_COUNT         INTEGER NULL,
	CASSANDRA_CACHING_KEYS VARCHAR(1024) NULL,
	CASSANDRA_CACHING_ROWS_PER_PARTITION VARCHAR(1024) NULL,
	CASSANDRA_CLUSTERING_KEY_LIST VARCHAR(1024) NULL,
	CASSANDRA_CUSTOMINDEX CHAR(1) NULL,
	CASSANDRA_ITEMPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_PARTITION_KEY_LIST VARCHAR(1024) NULL,
	CASSANDRA_TBLPROPERTIES VARCHAR(32000) NULL,
	CASSANDRA_USING      VARCHAR(32000) NULL,
	CASSANDRA_BLOOM_FILTER_FP_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MAX_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPACTION_MIN_THRESHOLD VARCHAR(1024) NULL,
	CASSANDRA_COMPRESSION_CHUNK_LEN_KB VARCHAR(1024) NULL,
	CASSANDRA_COMPRESSION_CLASS VARCHAR(1024) NULL,
	CASSANDRA_CRC_CHECK_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_DCLOCAL_READ_REPAIR_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_DEFAULT_TIME_TO_LIVE VARCHAR(1024) NULL,
	CASSANDRA_GC_GRACE_SECONDS VARCHAR(1024) NULL,
	CASSANDRA_MAX_INDEX_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_MEMTABLE_FLUSH_PERIOD_IN_MS VARCHAR(1024) NULL,
	CASSANDRA_MIN_INDEX_INTERVAL VARCHAR(1024) NULL,
	CASSANDRA_READ_REPAIR_CHANCE VARCHAR(1024) NULL,
	CASSANDRA_SPECULATIVE_RETRY VARCHAR(1024) NULL,
	CASSANDRA_SSTABLE_COMPRESSION VARCHAR(1024) NULL,
	COLLECT_STATISTICS_TYPE INTEGER NULL,
	COMMENT              VARCHAR(32000) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	COMPRESSIONTYPE      INTEGER NULL,
	CONSTRAINT_IS_DEFERRABLE INTEGER NULL,
	CONSTRAINT_IS_ENFORCED INTEGER NULL,
	CONSTRAINT_MATCH     INTEGER NULL,
	CONSTRAINT_NAME      VARCHAR(1024) NULL,
	CONSTRAINT_ON_DELETE INTEGER NULL,
	CONSTRAINT_ON_UPDATE INTEGER NULL,
	CONSTRAINT_DO_ENABLE INTEGER NULL,
	CONSTRAINT_DO_RELY   INTEGER NULL,
	CONSTRAINT_DO_VALIDATE INTEGER NULL,
	CONSTRAINT_WAS_INTIALLY INTEGER NULL,
	DB2_BT_WTH           CHAR(1) NULL,
	DB2_CLOSE            CHAR(1) NULL,
	DB2_COPY_INDEX       CHAR(1) NULL,
	DB2_DEFER            CHAR(1) NULL,
	DB2_DEFINE_DATA_SETS CHAR(1) NULL,
	DB2_ERASE_WHEN_DELETED CHAR(1) NULL,
	DB2_FREE_PAGE_INTERVAL INTEGER NULL,
	DB2_GROUP_BUFFERPOOL_TYPE INTEGER NULL,
	DB2_NULL_KEYS        INTEGER NULL,
	DB2_OBJECT_ID        VARCHAR(1024) NULL,
	DB2_PCT_UPDATE       VARCHAR(1024) NULL,
	DB2_PERCENT_FREE     VARCHAR(1024) NULL,
	DB2_PIECE_SIZE       VARCHAR(1024) NULL,
	DB2_PRIMARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_SECONDARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_STORAGE_GROUP_REF INTEGER NULL,
	DB2_SUBPAGES         INTEGER NULL,
	DB2_TYPE             INTEGER NULL,
	DB2_USE_BUFFERPOOL   INTEGER NULL,
	DB2_VOLUME_CATALOG   VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DEFERRED             CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DROP_EXISTING        INTEGER NULL,
	DYNAMODB_INDEX_TYPE  INTEGER NULL,
	DYNAMODB_PROJECTED_ATTRIBUTE VARCHAR(1024) NULL,
	DYNAMODB_PROJECTION_TYPE INTEGER NULL,
	EXCEPTION_TABLE_REF  INTEGER NULL,
	FOR_CLAUSE_EXPRESSION VARCHAR(4000) NULL,
	GENERATE_AS_CONSTRAINT CHAR(1) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	HIVE_IDX_DEFERRED_REBUILD CHAR(1) NULL,
	HIVE_IDX_PROPERTIES  VARCHAR(32000) NULL,
	HIVE_IDX_TBLNAME     VARCHAR(1024) NULL,
	HIVE_IDX_TYPE        VARCHAR(1024) NULL,
	HIVE_INPUTFORMAT     VARCHAR(1024) NULL,
	HIVE_LOCATION        VARCHAR(1024) NULL,
	HIVE_OUTPUTFORMAT    VARCHAR(1024) NULL,
	HIVE_OVERWRITETBLPROPERTIES VARCHAR(32000) NULL,
	HIVE_ROW_FORMAT_COLLECTIONITEMS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_FIELDS_ESCAPEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_FIELDS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_LINES_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_MAPKEYS_TERMINATEDBY VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_NULL_DEFINEDAS VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_SERDE VARCHAR(1024) NULL,
	HIVE_ROW_FORMAT_SERDEPROPERTIES VARCHAR(32000) NULL,
	HIVE_STOREDAS        INTEGER NULL,
	HIVE_STOREDBY        VARCHAR(1024) NULL,
	HIVE_TBLPROPERTIES   VARCHAR(32000) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IGNORE_NULLS         CHAR(1) NULL,
	INDEX_EXTENSION_REF  INTEGER NULL,
	INDEX_FILE_NAME      VARCHAR(1024) NULL,
	INFORMIX_DBSPACE_REF INTEGER NULL,
	INFORMIX_STORAGE_OPTION INTEGER NULL,
	INGRES_ALLOCATION    VARCHAR(1024) NULL,
	INGRES_COMPRESS_DATA CHAR(1) NULL,
	INGRES_COMPRESS_HIDATA CHAR(1) NULL,
	INGRES_COMPRESS_KEY  VARCHAR(1024) NULL,
	INGRES_COMPRESSION_TYPE INTEGER NULL,
	INGRES_EXTEND        VARCHAR(1024) NULL,
	INGRES_FILL_FACTOR   VARCHAR(1024) NULL,
	INGRES_INDEX_RANGE   VARCHAR(1024) NULL,
	INGRES_LEAF_FILL     VARCHAR(1024) NULL,
	INGRES_LOCATIONS     VARCHAR(1024) NULL,
	INGRES_MAX_PAGES     VARCHAR(1024) NULL,
	INGRES_MIN_PAGES     VARCHAR(1024) NULL,
	INGRES_NON_LEAF_FILL VARCHAR(1024) NULL,
	INGRES_PAGE_SIZE     VARCHAR(1024) NULL,
	INGRES_PERSISTENCE   CHAR(1) NULL,
	INGRES_RANGE_MAX_X   VARCHAR(1024) NULL,
	INGRES_RANGE_MAX_Y   VARCHAR(1024) NULL,
	INGRES_RANGE_MIN_X   VARCHAR(1024) NULL,
	INGRES_RANGE_MIN_Y   VARCHAR(1024) NULL,
	INGRES_STRUCTURE_TYPE VARCHAR(1024) NULL,
	INGRES_UNIQUE_SCOPE_TYPE INTEGER NULL,
	INGRES_USE_COMPRESS_KEY CHAR(1) NULL,
	INGRES_USE_RANGE     CHAR(1) NULL,
	IS_ASCENDING         CHAR(1) NULL,
	IS_BITMAP_INDEX      CHAR(1) NULL,
	IS_CALCULATED        CHAR(1) NULL,
	IS_CLUSTERED         CHAR(1) NULL,
	IS_COMPRESSED        CHAR(1) NULL,
	IS_DEFERRABLE        CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	IS_ENFORCED          CHAR(1) NULL,
	IS_HASH              CHAR(1) NULL,
	IS_IMMEDIATE         CHAR(1) NULL,
	IS_INDEX_COMPACTED   CHAR(1) NULL,
	IS_INDEX_COMPOUND    VARCHAR(1024) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PARTITIONED       CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	IS_PRIMARY_INDEX     CHAR(1) NULL,
	IS_QUERY_OPTIMIZATION_DISABLED CHAR(1) NULL,
	IS_TERADATA_GEOSPATIAL_INDEX CHAR(1) NULL,
	IS_TERADATA_PRIMARY_AMP_INDEX CHAR(1) NULL,
	IS_TRUSTED           INTEGER NULL,
	IS_UNIQUE            CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	KEY_EXPRESSION       VARCHAR(1024) NULL,
	KEY_GROUP_TYPE       VARCHAR(1024) NULL,
	MARIADB_INDEXALGORITHMOPT INTEGER NULL,
	MARIADB_INDEXBLOCKSIZE VARCHAR(1024) NULL,
	MARIADB_INDEXCATEGORY INTEGER NULL,
	MARIADB_INDEXLOCKOPT INTEGER NULL,
	MARIADB_INDEXPARSERNAME VARCHAR(1024) NULL,
	MARIADB_INDEXUSINGTYPE INTEGER NULL,
	MARIADB_INDEXWAITOPT INTEGER NULL,
	MARIADB_INDEXWAITTIME VARCHAR(1024) NULL,
	MAX_DURATION         VARCHAR(1024) NULL,
	MINIMUM_PERCENT_USED INTEGER NULL,
	MONGODB_COLLATION_ALTERNATE INTEGER NULL,
	MONGODB_COLLATION_BACKWARDS CHAR(1) NULL,
	MONGODB_COLLATION_CASEFIRST INTEGER NULL,
	MONGODB_COLLATION_CASELEVEL CHAR(1) NULL,
	MONGODB_COLLATION_LOCALE VARCHAR(1024) NULL,
	MONGODB_COLLATION_MAXVARIABLE INTEGER NULL,
	MONGODB_COLLATION_NUMERICORDERING CHAR(1) NULL,
	MONGODB_COLLATION_STRENGTH INTEGER NULL,
	MONGODB_INDEX_OPTIONS VARCHAR(1024) NULL,
	MONGODB_INDEX_PARTIAL_FILTER_EXP VARCHAR(1024) NULL,
	MONGODB_INDEX_TTL    VARCHAR(1024) NULL,
	MONGODB_INDEX_WILCARD_PROJECTION VARCHAR(1024) NULL,
	MYSQL_ENGINEATTR     VARCHAR(1024) NULL,
	MYSQL_INDEXALGORITHMOPT INTEGER NULL,
	MYSQL_INDEXBLOCKSIZE VARCHAR(1024) NULL,
	MYSQL_INDEXCATEGORY  INTEGER NULL,
	MYSQL_INDEXLOCKOPT   INTEGER NULL,
	MYSQL_INDEXPARSERNAME VARCHAR(1024) NULL,
	MYSQL_INDEXUSINGTYPE INTEGER NULL,
	MYSQL_INDEXWAITOPT   INTEGER NULL,
	MYSQL_INDEXWAITTIME  VARCHAR(1024) NULL,
	MYSQL_SECONDARYENGINEATTR VARCHAR(1024) NULL,
	MYSQL_VISIBILITY     INTEGER NULL,
	NZ_DEFERRED          INTEGER NULL,
	NZ_IS_DEFERRABLE     INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NOT_ENFORCED         CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONPARTITION          VARCHAR(1024) NULL,
	ONLINE               CHAR(1) NULL,
	OPTIMIZE_FOR_SEQUENTIAL_KEY INTEGER NULL,
	ORACLE_BITMAP_JOIN   VARCHAR(32000) NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_HASH_PARTITION_TYPE INTEGER NULL,
	ORACLE_IMMEDIATE_DEFERRED INTEGER NULL,
	ORACLE_INDEX_ALIAS   VARCHAR(1024) NULL,
	ORACLE_INDEX_COMPRESS_TYPE INTEGER NULL,
	ORACLE_INDEX_GLOBAL_PARTITION_TYPE INTEGER NULL,
	ORACLE_INDEX_INVALIDATION INTEGER NULL,
	ORACLE_INDEX_NO_SORT CHAR(1) NULL,
	ORACLE_INDEX_PARALLEL_MODE INTEGER NULL,
	ORACLE_INDEX_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_INDEX_PARTITION_TYPE INTEGER NULL,
	ORACLE_INDEX_TABLESPACE INTEGER NULL,
	ORACLE_INDEX_USABILITY CHAR(1) NULL,
	ORACLE_INDEX_VISIBLE CHAR(1) NULL,
	ORACLE_INDEXING      INTEGER NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_PARTITION_INDEX_COMPRESS_TYPE INTEGER NULL,
	ORACLE_PARTITION_TYPE INTEGER NULL,
	ORACLE_RELY_NORELY   INTEGER NULL,
	ORACLE_USE_REVERSE_STORE CHAR(1) NULL,
	ORACLE_VALIDATE      INTEGER NULL,
	PAD_VARIABLE_LENGTH_COLUMNS CHAR(1) NULL,
	PARTITION_COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	PARTITION_MODIFICATION_TYPE INTEGER NULL,
	PARTITON_NUMBER_VALUE VARCHAR(1024) NULL,
	PG_DEFERRED          INTEGER NULL,
	PG_IS_DEFERRABLE     INTEGER NULL,
	PGSQL_FILL_FACTOR    VARCHAR(1024) NULL,
	PGSQL_INDEX_ACCESS_METHOD INTEGER NULL,
	PGSQL_IS_CONCURRENT_BUILD CHAR(1) NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	PROGRESS_ABBREVIATED CHAR(1) NULL,
	PROGRESS_ACTIVE      CHAR(1) NULL,
	PROGRESS_AREA_REF    INTEGER NULL,
	PROGRESS_WORD        CHAR(1) NULL,
	REBUILD_PARTITION_TYPE INTEGER NULL,
	RELATIONSHIP_REF     INTEGER NULL,
	REMAINDER_IN_INFORMIX_DBSPACE_REF INTEGER NULL,
	RESUMABLE            INTEGER NULL,
	SQLSERVER_ABORT_AFTER_WAIT INTEGER NULL,
	SQLSERVER_DROP_EXISTING_INDEX CHAR(1) NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_FILESTREAM_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_FILESTREAM_PARTITION_SCHEME_REF INTEGER NULL,
	SQLSERVER_FILL_FACTOR VARCHAR(1024) NULL,
	SQLSERVER_IGNORE_DUPLICATE_KEYS CHAR(1) NULL,
	SQLSERVER_IS_DATA_SORTED CHAR(1) NULL,
	SQLSERVER_KEEP_EXISTING_STATISTICS CHAR(1) NULL,
	SQLSERVER_MAX_PARALLEL INTEGER NULL,
	SQLSERVER_MAX_WAIT_DURATION VARCHAR(1024) NULL,
	SQLSERVER_PAD_INDEX  CHAR(1) NULL,
	SQLSERVER_PARTITION_SCHEME_REF INTEGER NULL,
	SQLSERVER_SORT_IN_TEMP_DB CHAR(1) NULL,
	SQLSERVER_STATISTICS_INCREMENTAL CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	STORAGE_PARAMETER    VARCHAR(32000) NULL,
	SYBASE_DUPLICATE_INDEX_ROW_MODE INTEGER NULL,
	SYBASEIQ_INDEX_TYPE  INTEGER NULL,
	SYBASEIQ_WORD_DELIMITER VARCHAR(1024) NULL,
	SYBASEIQ_WORD_LIMIT  VARCHAR(1024) NULL,
	SYBASE_MAX_ROWS      VARCHAR(1024) NULL,
	SYBASE_RESERVE_PAGE_GAP VARCHAR(1024) NULL,
	SYBASE_SEGMENT_REF   INTEGER NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	TABLESPACE_REF       INTEGER NULL,
	TERADATA_FALLBACK    VARCHAR(1024) NULL,
	TERADATA_MAINTAIN_LOGICAL_ROW_ID CHAR(1) NULL,
	TERADATA_ORDER_BY    INTEGER NULL,
	TERADATA_PARTITIONING_EXPRESSION VARCHAR(32000) NULL,
	TERADATA_TRANSACTIONTIME_QUALIFIER INTEGER NULL,
	TERADATA_VALIDTIME_QUALIFIER INTEGER NULL,
	UDB_LEVEL2_PERCENT_FREE INTEGER NULL,
	UDB_PAGE_SPLIT_TYPE  INTEGER NULL,
	UDB_PERCENT_FREE     INTEGER NULL,
	UDB_TABLESPACE_REF   INTEGER NULL,
	UPDATE_KEY_GROUP_DEFINITION_TO_MATCH CHAR(1) NULL,
	USE_COMPUTE_STATISTICS CHAR(1) NULL,
	USE_INDEX            INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WHERE_CLAUSE         VARCHAR(1024) NULL
);

ALTER TABLE KEY_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE KEY_GROUP_MEMBER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_KEYSPACE_INDEX_COLLECTION_TYPE INTEGER NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	CASSANDRA_INDEX_COLLECTION_TYPE INTEGER NULL,
	COLLATION_REF        INTEGER NULL,
	DB2_INDEX_MEMBER_SORT_ORDER INTEGER NULL,
	DYNAMODB_KEY_TYPE    INTEGER NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	INDEX_MEMBER_ORDER   INTEGER NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	KEY_GROUP_MEMBER_ORDER INTEGER NULL,
	KEY_GROUP_NULLS_ORDER INTEGER NULL,
	KEY_GROUP_SORT_ORDER VARCHAR(1024) NULL,
	MONGODB_INDEX_TYPE   INTEGER NULL,
	MYSQL_INDEX_PREFIX_LENGTH INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_KEY_GROUP_MEMBER_REF INTEGER NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE KEY_GROUP_MEMBER
ADD PRIMARY KEY (ID@);

CREATE TABLE KEY_GROUP_MEMBERS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE KEY_GROUP_MEMBERS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE KEY_SEQUENCE_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SEQUENCE_ENDING_VALUE VARCHAR(1024) NULL,
	SEQUENCE_STARTING_VALUE VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE KEY_SEQUENCE_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE KEY_SEQUENCE_COLUMNS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE KEY_SEQUENCE_COLUMNS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE LINK
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SYNCH_DIRECTION      INTEGER NULL,
	TARGET_COLUMN_REF    INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE LINK
ADD PRIMARY KEY (ID@);

CREATE TABLE LOCK
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_LOCK_LEVEL  INTEGER NULL,
	TERADATA_LOCK_NO_WAIT CHAR(1) NULL,
	TERADATA_LOCKING_OBJECT INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE LOCK
ADD PRIMARY KEY (ID@);

CREATE TABLE LOGFILES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE LOGFILES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MACRO
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTO_BIND_TO_NEW     CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GENERATE_AS_PRE_SCRIPT CHAR(1) NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TYPE                 INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MACRO
ADD PRIMARY KEY (ID@);

CREATE TABLE MACROS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MACROS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MARIADB_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MARIADB_CHARACTER_SET VARCHAR(1024) NULL,
	MARIADB_COLLATE      VARCHAR(1024) NULL,
	MARIADB_DEFAULT_CHARACTER_SET CHAR(1) NULL,
	MARIADB_DEFAULT_COLLATE CHAR(1) NULL,
	MARIADB_ROLE_REF     INTEGER NULL,
	MARIADB_USER_ID_REF  INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE MARIADB_ENTITY_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MARIADB_ENTITY_PARTITION_TYPE INTEGER NULL,
	MARIADB_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	MARIADB_PARTITIONING_EXPRESSION VARCHAR(1024) NULL,
	MARIADB_SYSTEM_TIME_INTERVAL VARCHAR(1024) NULL,
	MARIADB_SYSTEM_TIME_LIMIT VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_NUMBER     INTEGER NULL,
	SUBPARTITION_NUMBER  INTEGER NULL,
	SUBPARTITIONING_EXPRESSION VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_ENTITY_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE MARIADB_ENTITY_PARTITION_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MARIADB_ENTITY_PARTITION_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MARIADB_EVENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_EVENT_DEFINER VARCHAR(1024) NULL,
	MARIADB_EVENT_END_TIME VARCHAR(1024) NULL,
	MARIADB_EVENT_EXCUTE_AT VARCHAR(1024) NULL,
	MARIADB_EVENT_INTERVAL_FIELD VARCHAR(1024) NULL,
	MARIADB_EVENT_INTERVAL_VALUE VARCHAR(1024) NULL,
	MARIADB_EVENT_SQL_BODY VARCHAR(1024) NULL,
	MARIADB_EVENT_START_TIME VARCHAR(1024) NULL,
	MARIADB_EVENT_STATUS VARCHAR(1024) NULL,
	MARIADB_ON_COMPLETION_TIME VARCHAR(1024) NULL,
	MARIADB_ROLE_REF     INTEGER NULL,
	MARIADB_USER_ID_REF  INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_EVENT
ADD PRIMARY KEY (ID@);

CREATE TABLE MARIADB_PARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	MARIADB_DATADIR      VARCHAR(1024) NULL,
	MARIADB_ENGINE       VARCHAR(1024) NULL,
	MARIADB_INDEXDIR     VARCHAR(1024) NULL,
	MARIADB_MAXROWS      VARCHAR(1024) NULL,
	MARIADB_MINROWS      VARCHAR(1024) NULL,
	MARIADB_PARTITION_VALUE VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_PARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE MARIADB_PARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MARIADB_PARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MARIADB_SERVER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_SERVER_DATABASE VARCHAR(1024) NULL,
	MARIADB_SERVER_HOST  VARCHAR(1024) NULL,
	MARIADB_SERVER_OWNER VARCHAR(1024) NULL,
	MARIADB_SERVER_PASSWORD VARCHAR(1024) NULL,
	MARIADB_SERVER_PORT  VARCHAR(1024) NULL,
	MARIADB_SERVER_SOCKET VARCHAR(1024) NULL,
	MARIADB_SERVER_USER  VARCHAR(1024) NULL,
	MARIADB_SERVER_WRAPPER_NAME VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_SERVER
ADD PRIMARY KEY (ID@);

CREATE TABLE MARIADB_SUBPARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	MARIADB_DATADIR      VARCHAR(1024) NULL,
	MARIADB_ENGINE       VARCHAR(1024) NULL,
	MARIADB_INDEXDIR     VARCHAR(1024) NULL,
	MARIADB_MAXROWS      VARCHAR(1024) NULL,
	MARIADB_MINROWS      VARCHAR(1024) NULL,
	MARIADB_PARTITION_VALUE VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_SUBPARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE MARIADB_SUBPARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MARIADB_SUBPARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MARIADB_UDF_FUNCTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AGGREGATE            CHAR(1) NULL,
	AGGREGATEVAL         CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MARIADB_UDF_FUNCTION_LIBRARY_NAME VARCHAR(1024) NULL,
	MARIADB_UDF_FUNCTION_RETURNS INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MARIADB_UDF_FUNCTION
ADD PRIMARY KEY (ID@);

CREATE TABLE MASTER_KEY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENCRYPTION_BY_PASSWORD VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MASTER_KEY
ADD PRIMARY KEY (ID@);

CREATE TABLE MEMBER_ROLES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MEMBER_ROLES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MEMBER_SHAPES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MEMBER_SHAPES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MEMBER_TYPES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MEMBER_TYPES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE METHOD
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GLOBAL_PERSISTENT_DATA_SET_REF INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	RETURN_CAST_BY_REFERENCE CHAR(1) NULL,
	RETURN_CAST_CHARACTER_SET_TYPE INTEGER NULL,
	RETURN_CAST_DATA_TYPE VARCHAR(1024) NULL,
	RETURN_CAST_TYPE_REF INTEGER NULL,
	RETURN_DATA_TYPE     VARCHAR(1024) NULL,
	RETURN_SELF_AS_RESULT CHAR(1) NULL,
	RETURN_TYPE_REF      INTEGER NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TERADATA_COMPILE     INTEGER NULL,
	TERADATA_DEBUG       CHAR(1) NULL,
	TERADATA_DELIMITER   VARCHAR(1024) NULL,
	TERADATA_DETERMINISTIC CHAR(1) NULL,
	TERADATA_ENTRY_POINT_NAME VARCHAR(1024) NULL,
	TERADATA_EXECUTE     INTEGER NULL,
	TERADATA_EXTERNAL_NAME VARCHAR(1024) NULL,
	TERADATA_EXTERNAL_SECURITY_AUTHORIZATION_REF INTEGER NULL,
	TERADATA_EXTERNAL_SECURITY_TYPE INTEGER NULL,
	TERADATA_LANGUAGE    INTEGER NULL,
	TERADATA_NULL_INPUT  INTEGER NULL,
	TERADATA_PARAMETER_STYLE INTEGER NULL,
	TERADATA_SQL_DATA_ACCESS INTEGER NULL,
	TERADATA_SPECIFIC_NAME VARCHAR(1024) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE METHOD
ADD PRIMARY KEY (ID@);

CREATE TABLE METHOD_DATA_TYPES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE METHOD_DATA_TYPES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MODEL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	AUTO_CREATED_INITIALLY_ID INTEGER NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACTIVE_DSM_OPTION_SET_REF INTEGER NULL,
	ACTIVE_NSM_OPTION_SET_REF INTEGER NULL,
	ALLOW_SPECIAL_CHARACTERS CHAR(1) NULL,
	AUTHOR               VARCHAR(1024) NULL,
	CHECK_HIGHLIGHT      CHAR(1) NULL,
	CHILD_DELETE_RULE_IDENTIFYING INTEGER NULL,
	CHILD_DELETE_RULE_NONIDENTIFYING INTEGER NULL,
	CHILD_DELETE_RULE_NONIDENTIFYING_NOT_NULL INTEGER NULL,
	CHILD_DELETE_RULE_SUBTYPE INTEGER NULL,
	CHILD_INSERT_RULE_IDENTIFYING INTEGER NULL,
	CHILD_INSERT_RULE_NONIDENTIFYING INTEGER NULL,
	CHILD_INSERT_RULE_NONIDENTIFYING_NOT_NULL INTEGER NULL,
	CHILD_INSERT_RULE_SUBTYPE INTEGER NULL,
	CHILD_UPDATE_RULE_IDENTIFYING INTEGER NULL,
	CHILD_UPDATE_RULE_NONIDENTIFYING INTEGER NULL,
	CHILD_UPDATE_RULE_NONIDENTIFYING_NOT_NULL INTEGER NULL,
	CHILD_UPDATE_RULE_SUBTYPE INTEGER NULL,
	CREATE_FILE_PATH     VARCHAR(1024) NULL,
	CURRENT_ER_DIAGRAM_REF INTEGER NULL,
	CURRENT_SUBJECT_AREA_REF INTEGER NULL,
	DB_CONNDETAILS       VARCHAR(1024) NULL,
	DBMS_MAJOR_VERSION   INTEGER NULL,
	DBMS_MINOR_VERSION   INTEGER NULL,
	DSM_FILE_PATH        VARCHAR(1024) NULL,
	DATA_VAULT_OBJECT_PROPERTIES_REF INTEGER NULL,
	DEFAULT_FONTS_AND_COLORS_REF INTEGER NULL,
	DELETE_FILE_PATH     VARCHAR(1024) NULL,
	DISALLOW_MANUAL_RELATIONSHIP_LAYOUT CHAR(1) NULL,
	DISPLAY_ATTRIBUTE_COMMENT CHAR(1) NULL,
	DISPLAY_ATTRIBUTE_COMMENT_MAXSIZE INTEGER NULL,
	DISPLAY_COLUMN_COMMENT CHAR(1) NULL,
	DISPLAY_COLUMN_COMMENT_MAXSIZE INTEGER NULL,
	DISPLAY_DW_ICONS     CHAR(1) NULL,
	DISPLAY_DATA_MOVEMENT_OPTIONS CHAR(1) NULL,
	ENABLE_SUPERTYPE_SUBTYPE CHAR(1) NULL,
	ENFORCE_UNIQUE_NAMING INTEGER NULL,
	FONT_COLOR           INTEGER NULL,
	HIDING_VISUALCUE_COLOR INTEGER NULL,
	HISTORY_EVENT_EXECUTING_INFO VARCHAR(1024) NULL,
	INDEX_NAME_MACRO     VARCHAR(1024) NULL,
	IS_DATA_VAULT        CHAR(1) NULL,
	IS_DIMENSIONAL       CHAR(1) NULL,
	IS_FONT_BOLD         CHAR(1) NULL,
	IS_NSM_OPTION_FROM_AMT CHAR(1) NULL,
	JSON_OBJECT_NOSQL_FESCRIPT VARCHAR(32000) NULL,
	LINE_ORIENTATION     INTEGER NULL,
	LOGICAL_NOTATION_TYPE INTEGER NULL,
	LOGICAL_PHYSICAL_VIEW_MODE INTEGER NULL,
	METADATA_VERSION     INTEGER NULL,
	MODEL_BACKGROUND_COLOR INTEGER NULL,
	NAMING_STANDARDS_FILE_NAME VARCHAR(1024) NULL,
	NEO4J_DISPLAY_RELATIONSHIP_TYPE CHAR(1) NULL,
	NEW_THEME_REF        INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OPTION_NON_IDENTIFYING_RELATIONSHIP_NOT_NULL INTEGER NULL,
	OPTION_NON_KEY_ATTRIBUTES_NOT_NULL INTEGER NULL,
	OPTION_USE_DATA_TYPE_IN_UNIFICATION CHAR(1) NULL,
	PARENT_DELETE_RULE_IDENTIFYING INTEGER NULL,
	PARENT_DELETE_RULE_NONIDENTIFYING INTEGER NULL,
	PARENT_DELETE_RULE_NONIDENTIFYING_NOT_NULL INTEGER NULL,
	PARENT_DELETE_RULE_SUBTYPE INTEGER NULL,
	PARENT_INSERT_RULE_IDENTIFYING INTEGER NULL,
	PARENT_INSERT_RULE_NONIDENTIFYING INTEGER NULL,
	PARENT_INSERT_RULE_NONIDENTIFYING_NOT_NULL INTEGER NULL,
	PARENT_INSERT_RULE_SUBTYPE INTEGER NULL,
	PARENT_UPDATE_RULE_IDENTIFYING INTEGER NULL,
	PARENT_UPDATE_RULE_NONIDENTIFYING INTEGER NULL,
	PARENT_UPDATE_RULE_NONIDENTIFYING_NOT_NULL INTEGER NULL,
	PARENT_UPDATE_RULE_SUBTYPE INTEGER NULL,
	PHYSICAL_NOTATION_TYPE INTEGER NULL,
	PROCESSING_MODE      INTEGER NULL,
	PROXY_SHORT_ID       INTEGER NULL,
	REMOVE_VOWELS_IN_NAME_MAPPING CHAR(1) NULL,
	REPLACEMENT_CHARACTER INTEGER NULL,
	SPECIAL_CHARACTER_ACTION_TYPE INTEGER NULL,
	STORE_RI_TRIGGERS_IN_MODEL CHAR(1) NULL,
	SUPPRESS_HIGHLIGHT   CHAR(1) NULL,
	SYNC_PHYSICAL_NAME_WITH_NAME CHAR(1) NULL,
	TABLE_NAME_MACRO     VARCHAR(1024) NULL,
	TARGET_SERVER        INTEGER NULL,
	TEMPLATE_PATH        VARCHAR(1024) NULL,
	THEME_REF            INTEGER NULL,
	TRACKING_HISTORY_EVENTS INTEGER NULL,
	TRACKING_HISTORY_OBJECTS INTEGER NULL,
	TRANS_HISTORY_PROCESS_EXECUTING_TYPE INTEGER NULL,
	TRANS_UNIFICATION_SUPPRESSION_COUNT INTEGER NULL,
	TRIGGER_DELIMITER    VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	UDB_AUDIT_POLICY_REF INTEGER NULL,
	USE_DUMP             INTEGER NULL,
	USE_SYBASE_CTLIB     CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VOLUMETRICS_BLOB_BLOCK_SIZE VARCHAR(1024) NULL,
	VOLUMETRICS_BLOB_FACTOR VARCHAR(1024) NULL,
	VOLUMETRICS_BYTES_PER_CHAR VARCHAR(1024) NULL,
	VOLUMETRICS_INDEX_FACTOR VARCHAR(1024) NULL,
	VOLUMETRICS_INDEX_TYPES VARCHAR(1024) NULL,
	VOLUMETRICS_LOG_PERCENT VARCHAR(1024) NULL,
	VOLUMETRICS_REPORT_TIME_PROJECTION_VALUE INTEGER NULL,
	VOLUMETRICS_REPORT_TIME_TYPE INTEGER NULL,
	VOLUMETRICS_REPORT_TYPE INTEGER NULL,
	VOLUMETRICS_ROW_OVERHEAD VARCHAR(1024) NULL,
	VOLUMETRICS_TABLE_FACTOR VARCHAR(1024) NULL,
	W_PATH               VARCHAR(1024) NULL,
	WYSIWYG_PRINT        CHAR(1) NULL
);

ALTER TABLE MODEL
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON MODEL
(
	OWNER@
);

CREATE TABLE MODEL_DIAGRAMTAB_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MODEL_DIAGRAMTAB_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MODEL_SOURCE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	NAMING_STANDARDS_FILE_NAME VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REMOVE_VOWELS_IN_NAME_MAPPING CHAR(1) NULL,
	REPLACEMENT_CHARACTER INTEGER NULL,
	SOURCE_LAST_SYNCHED_TIME TIMESTAMP NULL,
	SOURCE_MODEL_LONG_ID CHAR(67) NULL,
	SOURCE_NAME          VARCHAR(1024) NULL,
	SPECIAL_CHARACTER_ACTION_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MODEL_SOURCE
ADD PRIMARY KEY (ID@);

CREATE TABLE MODIFIED
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NOT NULL,
	OWNER_PATH           VARCHAR(1024) NULL
);

CREATE TABLE MODULE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MODULE
ADD PRIMARY KEY (ID@);

CREATE TABLE MODULE_OBJECT_DEFINITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACTION_TYPE          INTEGER NULL,
	DOMAIN_REF           INTEGER NULL,
	FUNCTION_REF         INTEGER NULL,
	GLOBAL_VARIABLE_REF  INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQL_STATE_VALUE      VARCHAR(1024) NULL,
	STORED_PROCEDURE_REF INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MODULE_OBJECT_DEFINITION
ADD PRIMARY KEY (ID@);

CREATE TABLE MONGODB_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MONGODB_ROLE_REF     INTEGER NULL,
	MONGODB_USER_ID_REF  INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NOSQLDOCUMENTCOUNT   VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE MONGODB_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE MONGODB_DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MONGODB_DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MONGODB_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MONGODB_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MV_ACCESS_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_AMAZON_KEYSPACES_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_ARANGODB_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_AVRO_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_AZURE_SYNAPSE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_CASSANDRA_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_COUCHBASE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_DATABRICKS_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_DB2_FOR_I_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_DB2_FOR_LUW_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_DB2_FOR_Z_OS_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_DYNAMODB_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_FOXPRO_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_GOOGLE_BIGQUERY_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_HIRDB_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_HIVE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_INFORMIX_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_INGRES_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_INTERBASE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_JSON_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_MARIADB_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_MONGODB_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_MYSQL_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_NEO4J_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_NETEZZA_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_ODBC_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_ORACLE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_PARQUET_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_POSTGRESQL_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_PROGRESS_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_RDB_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_RED_BRICK_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_REDSHIFT_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SAP_ASE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SAP_IQ_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SAS_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SNOWFLAKE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SQL_ANYWHERE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SQL_AZURE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SQL_SERVER_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_SQLBASE_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_TARGET_DBMS@
(
	TYPE                 INTEGER NOT NULL,
	DBMS                 INTEGER NOT NULL,
	DBMS_NAME            CHAR(25) NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MV_TERADATA_DBMS
(
	TYPE                 INTEGER NOT NULL,
	MIN_VERSION          INTEGER NOT NULL,
	MAX_VERSION          INTEGER NOT NULL
);

CREATE TABLE MYSQL_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MYSQL_CHARACTER_SET  VARCHAR(1024) NULL,
	MYSQL_COLLATE        VARCHAR(1024) NULL,
	MYSQL_DEFAULT_CHARACTER_SET CHAR(1) NULL,
	MYSQL_DEFAULT_COLLATE CHAR(1) NULL,
	MYSQL_DEFAULT_ENCRYPTION CHAR(1) NULL,
	MYSQL_ENCRYPTION     INTEGER NULL,
	MYSQL_ROLE_REF       INTEGER NULL,
	MYSQL_USER_ID_REF    INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_ENTITY_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MYSQL_ENTITY_PARTITION_TYPE INTEGER NULL,
	MYSQL_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	MYSQL_PARTITION_ALGORITHM VARCHAR(1024) NULL,
	MYSQL_PARTITIONING_EXPRESSION VARCHAR(1024) NULL,
	MYSQL_SUBPARTITION_ALGORITHM VARCHAR(1024) NULL,
	MYSQL_SYSTEM_TIME_INTERVAL VARCHAR(1024) NULL,
	MYSQL_SYSTEM_TIME_LIMIT VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_NUMBER     INTEGER NULL,
	PARTITIONING_EXPRESSION VARCHAR(1024) NULL,
	SUBPARTITION_NUMBER  INTEGER NULL,
	SUBPARTITIONING_EXPRESSION VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_ENTITY_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_ENTITY_PARTITION_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MYSQL_ENTITY_PARTITION_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MYSQL_EVENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_EVENT_AT_TIME  VARCHAR(1024) NULL,
	MYSQL_EVENT_DEFINER  VARCHAR(1024) NULL,
	MYSQL_EVENT_ENDS_INTERVAL_QUANTITY INTEGER NULL,
	MYSQL_EVENT_ENDS_INTERVAL_VALUE VARCHAR(1024) NULL,
	MYSQL_EVENT_ENDS_TIME VARCHAR(1024) NULL,
	MYSQL_EVENT_INTERVAL_QUANTITY INTEGER NULL,
	MYSQL_EVENT_INTERVAL_VALUE VARCHAR(1024) NULL,
	MYSQL_EVENT_SQL_BODY VARCHAR(1024) NULL,
	MYSQL_EVENT_SCHEDULE INTEGER NULL,
	MYSQL_EVENT_STARTS_INTERVAL_QUANTITY INTEGER NULL,
	MYSQL_EVENT_STARTS_INTERVAL_VALUE VARCHAR(1024) NULL,
	MYSQL_EVENT_STARTS_TIME VARCHAR(1024) NULL,
	MYSQL_EVENT_STATUS   INTEGER NULL,
	MYSQL_ON_COMPLETION  INTEGER NULL,
	MYSQL_ROLE_REF       INTEGER NULL,
	MYSQL_USER_ID_REF    INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_EVENT
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_LOGFILEGROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MYSQL_ENGINE         VARCHAR(1024) NULL,
	MYSQL_INITIALSIZE    VARCHAR(1024) NULL,
	MYSQL_NODEGROUPID    VARCHAR(1024) NULL,
	MYSQL_REDOBUFFERSIZE VARCHAR(1024) NULL,
	MYSQL_UNDOBUFFERSIZE VARCHAR(1024) NULL,
	MYSQL_UNDOFILE       VARCHAR(1024) NULL,
	MYSQL_WAIT           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_LOGFILEGROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_PARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	MYSQL_DATADIR        VARCHAR(1024) NULL,
	MYSQL_ENGINE         VARCHAR(1024) NULL,
	MYSQL_INDEXDIR       VARCHAR(1024) NULL,
	MYSQL_MAXROWS        VARCHAR(1024) NULL,
	MYSQL_MINROWS        VARCHAR(1024) NULL,
	MYSQL_PARTITION_VALUE VARCHAR(1024) NULL,
	MYSQL_TABLESPACE_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_PARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_PARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MYSQL_PARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MYSQL_SERVER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MYSQL_SERVER_DATABASE VARCHAR(1024) NULL,
	MYSQL_SERVER_HOST    VARCHAR(1024) NULL,
	MYSQL_SERVER_OWNER   VARCHAR(1024) NULL,
	MYSQL_SERVER_PASSWORD VARCHAR(1024) NULL,
	MYSQL_SERVER_PORT    VARCHAR(1024) NULL,
	MYSQL_SERVER_SOCKET  VARCHAR(1024) NULL,
	MYSQL_SERVER_USER    VARCHAR(1024) NULL,
	MYSQL_SERVER_WRAPPER_NAME VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_SERVER
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_SPATIALREFSYSTEM
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MYSQL_ORGID          VARCHAR(1024) NULL,
	MYSQL_ORGNAME        VARCHAR(1024) NULL,
	MYSQL_SRID           VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_SPATIALREFSYSTEM
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_SUBPARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	MYSQL_DATADIR        VARCHAR(1024) NULL,
	MYSQL_ENGINE         VARCHAR(1024) NULL,
	MYSQL_INDEXDIR       VARCHAR(1024) NULL,
	MYSQL_MAXROWS        VARCHAR(1024) NULL,
	MYSQL_MINROWS        VARCHAR(1024) NULL,
	MYSQL_PARTITION_VALUE VARCHAR(1024) NULL,
	MYSQL_TABLESPACE_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_SUBPARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_SUBPARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE MYSQL_SUBPARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE MYSQL_TABLESPACE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MYSQL_AUTOEXTENDSIZE VARCHAR(1024) NULL,
	MYSQL_DATAFILENAME   VARCHAR(1024) NULL,
	MYSQL_ENCRYPTION     INTEGER NULL,
	MYSQL_ENGINE         VARCHAR(1024) NULL,
	MYSQL_ENGINEATTR     VARCHAR(1024) NULL,
	MYSQL_EXTENTSIZE     VARCHAR(1024) NULL,
	MYSQL_FILEBLOCKSIZE  VARCHAR(1024) NULL,
	MYSQL_INITIALSIZE    VARCHAR(1024) NULL,
	MYSQL_LOGFILEGROUP_REF INTEGER NULL,
	MYSQL_MAXSIZE        VARCHAR(1024) NULL,
	MYSQL_NODEGROUPID    VARCHAR(1024) NULL,
	MYSQL_UNDO           CHAR(1) NULL,
	MYSQL_WAIT           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_TABLESPACE
ADD PRIMARY KEY (ID@);

CREATE TABLE MYSQL_UDF_FUNCTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AGGREGATEVAL         CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MYSQL_UDF_FUNCTION_LIBRARY_NAME VARCHAR(1024) NULL,
	MYSQL_UDF_FUNCTION_RETURNS INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE MYSQL_UDF_FUNCTION
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_IF_NOT_EXIST   CHAR(1) NULL,
	NEO4J_ROLE_REF       INTEGER NULL,
	NEO4J_USER_ID_REF    INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_GLOBALCONSTRAINT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_CONSTRAINT_DESCRIPTION VARCHAR(32000) NULL,
	NEO4J_CONSTRAINT_DETAILS VARCHAR(32000) NULL,
	NEO4J_CONSTRAINT_SCRIPT VARCHAR(32000) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_GLOBALCONSTRAINT_TYPE INTEGER NULL,
	NEO4J_IF_NOT_EXIST   CHAR(1) NULL,
	NEO4J_INDEX_ENTITYTYPE INTEGER NULL,
	NEO4J_INDEX_PROVIDER VARCHAR(32000) NULL,
	NEO4J_LABEL_REF      INTEGER NULL,
	NEO4J_RELATIONSHIP_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_GLOBALCONSTRAINT
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_GLOBALINDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_IF_NOT_EXIST   CHAR(1) NULL,
	NEO4J_INDEX_ENTITYTYPE INTEGER NULL,
	NEO4J_INDEX_PROVIDER VARCHAR(32000) NULL,
	NEO4J_INDEX_SCRIPT   VARCHAR(32000) NULL,
	NEO4J_INDEX_TYPE     INTEGER NULL,
	NEO4J_LABEL_REF      INTEGER NULL,
	NEO4J_LABELSORTYPES_REF INTEGER NULL,
	NEO4J_RELATIONSHIP_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_GLOBALINDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_GLOBALINDEX_LABEL_LIST
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	NEO4J_LABEL_REF      INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_GLOBALINDEX_LABEL_LIST
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_GLOBALINDEX_LABEL_LIST_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE NEO4J_GLOBALINDEX_LABEL_LIST_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE NEO4J_LABEL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_ENABLE_LABEL_NODE_DISPLAYNAME CHAR(1) NULL,
	NEO4J_ENABLE_LABEL_NODE_SIZE CHAR(1) NULL,
	NEO4J_LABEL_BKCOLOR  VARCHAR(1024) NULL,
	NEO4J_LABEL_GRID_BKCOLOR INTEGER NULL,
	NEO4J_LABEL_NODE_DISPLAYNAME VARCHAR(1024) NULL,
	NEO4J_LABEL_NODE_SIZE INTEGER NULL,
	NOSQL_OBJECT_FULLNAME VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_LABEL
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_LABELSORTYPES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_LABELSORTYPES
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_RELATIONSHIP_LIST
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	NEO4J_RELATIONSHIP_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_RELATIONSHIP_LIST
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_RELATIONSHIP_LIST_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE NEO4J_RELATIONSHIP_LIST_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE NEO4J_ROLEPRIVILEGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_ROLEPRIVILEGE_ACCESS INTEGER NULL,
	NEO4J_ROLEPRIVILEGE_ACTION INTEGER NULL,
	NEO4J_ROLEPRIVILEGE_RESOURCE VARCHAR(1024) NULL,
	NEO4J_ROLEPRIVILEGE_SEGMENT VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NEO4J_ROLEPRIVILEGE
ADD PRIMARY KEY (ID@);

CREATE TABLE NEO4J_ROLEPRIVILEGE_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE NEO4J_ROLEPRIVILEGE_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE NETEZZA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE NETEZZA_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE NOSQL_USERDEFINEDTYPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NOSQL_USERDEFINEDTYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE NOTE_LIST
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	EVENT_TYPE           VARCHAR(1) NULL,
	CREATE_TIMESTAMP     VARCHAR(19) NULL,
	CREATOR              VARCHAR(256) NULL,
	MODIFIED_TIMESTAMP   VARCHAR(19) NULL,
	MODIFIER             VARCHAR(256) NULL,
	SYSTEM_TEXT_PARAMETER VARCHAR(4000) NULL,
	USER_TEXT            VARCHAR(4000) NULL
);

ALTER TABLE NOTE_LIST
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE NSM_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_CURRENT_ACTIVE_OPTION_SET CHAR(1) NULL,
	IS_PHYSICAL_TO_LOGICAL CHAR(1) NULL,
	MATCH_WHOLE_NAME_ONLY CHAR(1) NULL,
	MATCH_WHOLE_WORDS_ONLY CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NSM_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE NSM_OPTION_NAME_STRUCTURE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	IS_LOGICAL           CHAR(1) NULL,
	NAME_PART1           INTEGER NULL,
	NAME_PART2           INTEGER NULL,
	NAME_PART3           INTEGER NULL,
	NAME_PART4           INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE NSM_OPTION_NAME_STRUCTURE
ADD PRIMARY KEY (ID@);

CREATE TABLE OBJECT_MAP_SOURCE_LONG_IDS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(67) NULL
);

ALTER TABLE OBJECT_MAP_SOURCE_LONG_IDS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE OBJECT_MAP_TARGET_LONG_IDS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(67) NULL
);

ALTER TABLE OBJECT_MAP_TARGET_LONG_IDS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE OBJECT_TYPE
(
	ID@                  INTEGER NOT NULL,
	TAG_IS_ABSTRACT      CHAR(1) NULL,
	NAME                 VARCHAR(1024) NULL,
	LONG_ID              CHAR(67) NULL,
	PARENT_REF           INTEGER NULL,
	TAG_DISPLAY_NAME_RESOURCE VARCHAR(1024) NULL,
	TAG_DISPLAY_NAME_RESOURCE_PLURAL VARCHAR(1024) NULL,
	TAG_DISPLAY_BITMAP_RESOURCE VARCHAR(1024) NULL,
	TAG_IS_INTERNAL      CHAR(1) NULL,
	DEFINITION           VARCHAR(32000) NULL,
	TAG_DBMS_ADBL        VARCHAR(1024) NULL,
	TAG_IS_PHYSICAL      CHAR(1) NULL,
	TAG_RELEASE_ADDED    VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ADBL VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ADBL VARCHAR(1024) NULL,
	TAG_HAS_UDP_EDITOR   CHAR(1) NULL,
	TAG_LEGACY_OBJECT_IS_PHYSICAL CHAR(1) NULL,
	TAG_HAS_DBMS_EQUIVALENT CHAR(1) NULL,
	TAG_LEGACY_OWNERSHIP_DEPTH INTEGER NULL,
	TAG_DBMS_ISERIES     VARCHAR(1024) NULL,
	TAG_PHYSICAL_NAME_TEXT VARCHAR(1024) NULL,
	TAG_RELEASE_DEPRECATED VARCHAR(1024) NULL,
	TAG_DEPRECATION_LEVEL INTEGER NULL,
	TAG_IS_DEPRECATED    CHAR(1) NULL,
	TAG_DBMS_DYNAMODB    VARCHAR(1024) NULL,
	TAG_HIDE_IN_EXPLORER CHAR(1) NULL,
	TAG_DBMS_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_DBMS_IS_NOT_REPRESENTED CHAR(1) NULL,
	TAG_IS_LOGICAL       CHAR(1) NULL,
	TAG_SUB_MODEL_ROLE   INTEGER NULL,
	TAG_HAS_HISTORY_TRACKING CHAR(1) NULL,
	TAG_IS_GRAPHIC_DATA  CHAR(1) NULL,
	TAG_HIDE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_PHYSICAL_NAME_TEXT_PLURAL VARCHAR(1024) NULL,
	TAG_DBMS_ARANGODB    VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ARANGODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ARANGODB VARCHAR(1024) NULL,
	TAG_IS_TRANSFORMABLE CHAR(1) NULL,
	TAG_LEGACY_OBJECT_IS_DEPENDENT CHAR(1) NULL,
	TAG_DBMS_SNOWFLAKE   VARCHAR(1024) NULL,
	TAG_DBMS_ORACLE      VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DB2_ZOS VARCHAR(1024) NULL,
	TAG_DBMS_DB2_ZOS     VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DB2_ZOS VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_AVRO VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_AVRO VARCHAR(1024) NULL,
	TAG_DBMS_AVRO        VARCHAR(1024) NULL,
	TAG_LEGACY_MM_IGNORE_DEFAULT CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_DB2_UDB     VARCHAR(1024) NULL,
	TAG_DBMS_TERADATA    VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DB2_UDB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DB2_UDB VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_TERADATA VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_TERADATA VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_ORACLE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ORACLE VARCHAR(1024) NULL,
	TAG_DBMS_HIVE        VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_HIVE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_HIVE VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_CASSANDRA   VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_CASSANDRA VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_CASSANDRA VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SYNAPSE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SYNAPSE VARCHAR(1024) NULL,
	TAG_DBMS_SYNAPSE     VARCHAR(1024) NULL,
	TAG_DBMS_DATABRICKS  VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DATABRICKS VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DATABRICKS VARCHAR(1024) NULL,
	TAG_DBMS_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_IS_FONT_OR_COLOR CHAR(1) NULL,
	TAG_IS_COLLECTED_IN_PARENT_IN_EXPLORER CHAR(1) NULL,
	TAG_DBMS_SQLSERVER   VARCHAR(1024) NULL,
	TAG_HOLDS_USER_SETTINGS CHAR(1) NULL,
	TAG_DBMS_COUCHBASE   VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_COUCHBASE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_COUCHBASE VARCHAR(1024) NULL,
	TAG_IS_FOR_DATA_MOVEMENT CHAR(1) NULL,
	TAG_IS_MART_SECURABLE CHAR(1) NULL,
	TAG_CAN_BE_HARDENED  CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SQLSERVER VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLSERVER VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_SQLAZURE VARCHAR(1024) NULL,
	TAG_DBMS_SQLAZURE    VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLAZURE VARCHAR(1024) NULL,
	TAG_DBMS_MARIADB     VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_MARIADB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MARIADB VARCHAR(1024) NULL,
	TAG_DBMS_MYSQL       VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MYSQL VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_MYSQL VARCHAR(1024) NULL,
	TAG_DBMS_NEO4J       VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_NEO4J VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_NEO4J VARCHAR(1024) NULL,
	TAG_IS_DEFAULT       CHAR(1) NULL,
	TAG_DBMS_ACCESS      VARCHAR(1024) NULL,
	TAG_DBMS_PROGRESS    VARCHAR(1024) NULL,
	TAG_LEGACY_MM_COUNTABLE CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_DYNAMODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DYNAMODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_NOT_TOP_LEVEL_OBJECT CHAR(1) NULL,
	TAG_VSDB_SQLSERVER   VARCHAR(1024) NULL,
	TAG_IGNORE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_INFORMIX    VARCHAR(1024) NULL,
	TAG_DBMS_INGRES      VARCHAR(1024) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_JSON VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_JSON VARCHAR(1024) NULL,
	TAG_DBMS_JSON        VARCHAR(1024) NULL,
	TAG_LEGACY_MM_CONTAINER CHAR(1) NULL,
	TAG_LEGACY_MM_LOCKABLE CHAR(1) NULL,
	TAG_LEGACY_MM_IS_PERSISTENCE_UNIT CHAR(1) NULL,
	TAG_LEGACY_MM_SECURITY_UPDATE CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_MONGODB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MONGODB VARCHAR(1024) NULL,
	TAG_DBMS_MONGODB     VARCHAR(1024) NULL,
	TAG_HIDE_IN_BULK_EDITOR CHAR(1) NULL,
	TAG_DBMS_IS_TOP_LEVEL_OBJECT_PARQUET VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_PARQUET VARCHAR(1024) NULL,
	TAG_DBMS_PARQUET     VARCHAR(1024) NULL,
	TAG_DBMS_REDBRICK    VARCHAR(1024) NULL,
	TAG_DBMS_ODBC        VARCHAR(1024) NULL,
	TAG_DBMS_SYBASEIQ    VARCHAR(1024) NULL,
	TAG_DBMS_SYBASE      VARCHAR(1024) NULL,
	TAG_IS_SCRATCH       CHAR(1) NULL
);

ALTER TABLE OBJECT_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_ATTRIBUTE_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	COMPRESS_TYPE        INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONLINE               CHAR(1) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INDEX_VISIBLE CHAR(1) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NO_SORT       CHAR(1) NULL,
	ORACLE_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	ORACLE_TABLESPACE_USAGE_TYPE INTEGER NULL,
	ORACLE_USE_REVERSE_STORE CHAR(1) NULL,
	PARALLEL_MODE        INTEGER NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	USE_COMPUTE_STATISTICS CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_ATTRIBUTE_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_BITMAPJOININDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_BITMAP_INDEX      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONLINE               CHAR(1) NULL,
	ORACLE_BITMAP_JOIN   VARCHAR(32000) NULL,
	ORACLE_INDEX_COMPRESS_TYPE INTEGER NULL,
	ORACLE_INDEX_INVALIDATION INTEGER NULL,
	ORACLE_INDEX_NO_SORT CHAR(1) NULL,
	ORACLE_INDEX_PARALLEL_MODE INTEGER NULL,
	ORACLE_INDEX_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_INDEX_PARTITION_TYPE INTEGER NULL,
	ORACLE_INDEX_USABILITY CHAR(1) NULL,
	ORACLE_INDEX_VISIBLE CHAR(1) NULL,
	ORACLE_INDEXING      INTEGER NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_PARTITION_TYPE INTEGER NULL,
	ORACLE_USE_REVERSE_STORE CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_BITMAPJOININDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CACHED_VIEW_LOG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DISABLE_RECORDING_NEW_VALUES CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEXT_PURGE           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_CACHE         CHAR(1) NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_PARTITION_TYPE INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_REGULAR_STORAGE_REF INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	ORACLE_USE_OBJECT_ID CHAR(1) NULL,
	PARALLEL_MODE        INTEGER NULL,
	PURGE_LOG            INTEGER NULL,
	REFRESH_LOG          INTEGER NULL,
	REPEAT_INTERVAL_PURGE VARCHAR(1024) NULL,
	STAGING_LOG          VARCHAR(1024) NULL,
	START_PURGE          VARCHAR(1024) NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	USE_COMMIT_SCN       CHAR(1) NULL,
	USE_PRIMARY_KEY      CHAR(1) NULL,
	USE_ROW_ID           CHAR(1) NULL,
	USE_SEQUENCE         CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_CACHED_VIEW_LOG
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CLOG_FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ASM_FILE_TYPE        INTEGER NULL,
	AUTO_EXTEND          CHAR(1) NULL,
	AUTO_EXTEND_MAX_SIZE VARCHAR(1024) NULL,
	AUTO_EXTEND_NEXT_VALUE VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_SPEC_TYPE       INTEGER NULL,
	GROUP_ID             INTEGER NULL,
	IS_ASM_FILE_NAME     CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CAN_REUSE_FILE CHAR(1) NULL,
	ORACLE_FILE_SIZE     VARCHAR(1024) NULL,
	ORACLE_FILE_SIZE_DATA_UNIT INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_CLOG_FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CLUSTER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	HASH_EXPRESSION      VARCHAR(1024) NULL,
	IS_SINGLE_TABLE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_CACHE         CHAR(1) NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_HAS_ROW_DEPENDENCIES CHAR(1) NULL,
	ORACLE_HASH_KEYS     INTEGER NULL,
	ORACLE_INDEX_CLUSTER CHAR(1) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_SIZE          VARCHAR(1024) NULL,
	ORACLE_SIZE_UNITS    INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	PARALLEL_MODE        INTEGER NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_CLUSTER
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CLUSTER_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	ORACLE_CLUSTER_COLLATE VARCHAR(1024) NULL,
	ORACLE_SORT_CLUSTER_ON_COLUMN CHAR(1) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	TIME_ZONE_OPTION     INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_CLUSTER_COLUMN
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON ORACLE_CLUSTER_COLUMN
(
	OWNER@
);

CREATE TABLE ORACLE_CLUSTER_COLUMN_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_CLUSTER_COLUMN_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_CLUSTER_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_CLUSTER_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_CLUSTER_INDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONLINE               CHAR(1) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INDEX_COMPRESS_TYPE INTEGER NULL,
	ORACLE_INDEX_NO_SORT CHAR(1) NULL,
	ORACLE_INDEX_PARALLEL_MODE INTEGER NULL,
	ORACLE_INDEX_PARALLEL_THREADS VARCHAR(1024) NULL,
	ORACLE_INDEX_VISIBLE CHAR(1) NULL,
	ORACLE_INDEXING      INTEGER NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_OPTIMAL       VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_UNIT  INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	ORACLE_USE_REVERSE_STORE CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_CLUSTER_INDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CLUSTERING_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_CLUSTERING_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_COMPOSITE_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COLUMN_REF           INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	HASH_SUBPARTITION_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_COMPOSITE_SUBPARTITION_TYPE INTEGER NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_SUBPARTITION_TEMPLATE_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_COMPOSITE_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CONSTRAINT_STATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONSIDER_NO_VALIDATE CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXCEPTION_TABLE_REF  INTEGER NULL,
	INDEX_REF            INTEGER NULL,
	IS_DEFERRABLE        CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	IS_IMMEDIATE         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_IMMEDIATE_DEFERRED INTEGER NULL,
	ORACLE_RELY_NORELY   INTEGER NULL,
	ORACLE_VALIDATE      INTEGER NULL,
	USE_INDEX            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATE             CHAR(1) NULL
);

ALTER TABLE ORACLE_CONSTRAINT_STATE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_CONTEXT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONTEXT_INITIALIZED  INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ACCESSED_GLOBALLY CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_NAMESPACE     VARCHAR(1024) NULL,
	PACKAGE_REF          INTEGER NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_CONTEXT
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_DATA_FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ASM_FILE_TYPE        INTEGER NULL,
	AUTO_EXTEND          CHAR(1) NULL,
	AUTO_EXTEND_MAX_SIZE VARCHAR(1024) NULL,
	AUTO_EXTEND_NEXT_VALUE VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_SPEC_TYPE       INTEGER NULL,
	IS_ASM_FILE_NAME     CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CAN_REUSE_FILE CHAR(1) NULL,
	ORACLE_FILE_SIZE     VARCHAR(1024) NULL,
	ORACLE_FILE_SIZE_DATA_UNIT INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_DATA_FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUXILIARY_ORACLE_TABLESPACE_REF INTEGER NULL,
	DEFAULT_TABLESPACE_FILE_SIZE INTEGER NULL,
	DEFAULT_TABLESPACE_REF INTEGER NULL,
	DEFAULT_TEMP_TABLESPACE_FILE_SIZE INTEGER NULL,
	DEFAULT_TEMPORARY_TABLESPACE_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FORCE_LOGGING        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NATIONAL_CHARACTER_SET VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ARCHIVE_LOG   CHAR(1) NULL,
	ORACLE_CHARACTER_SET VARCHAR(1024) NULL,
	ORACLE_MAX_DATA_FILES VARCHAR(1024) NULL,
	ORACLE_MAX_INSTANCES VARCHAR(1024) NULL,
	ORACLE_MAX_LOG_FILES VARCHAR(1024) NULL,
	ORACLE_MAX_LOG_HISTORY VARCHAR(1024) NULL,
	ORACLE_MAX_LOG_MEMBERS VARCHAR(1024) NULL,
	ORACLE_REUSE_CONTROL_FILE CHAR(1) NULL,
	ORACLE_SYSTEM_TABLESPACE_REF INTEGER NULL,
	STORAGE_FILE_TYPE    INTEGER NULL,
	TIME_ZONE            VARCHAR(1024) NULL,
	UNDO_TABLESPACE_FILE_SIZE INTEGER NULL,
	UNDO_TABLESPACE_REF  INTEGER NULL,
	USER_DATA_TABLESPACE_NAME VARCHAR(1024) NULL,
	USER_DATA_TABLESPACE_REF INTEGER NULL,
	USER_DATA_TABLESPACE_SIZE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_SYS_PASSWORD    VARCHAR(1024) NULL,
	USER_SYSTEM_PASSWORD VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_DATABASE_LINK
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONNECTION_STRING    VARCHAR(1024) NULL,
	CONNECTION_TYPE      INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_SHARED            CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_IS_PUBLIC     CHAR(1) NULL,
	USE_AUTHENTICATED_USER VARCHAR(1024) NULL,
	USER                 VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_DATABASE_LINK
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_DB_EVENTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_DB_EVENTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_DDL_EVENTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_DDL_EVENTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_DIRECTORY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PATH                 VARCHAR(1024) NULL,
	SHARING              INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_DIRECTORY
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_DISK_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REDUNDANCY_TYPE      INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_DISK_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_EDITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_EDITION_REF   INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_EDITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_ENCRYPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ENCRYPTION_ALGORITHM VARCHAR(1024) NULL,
	ORACLE_ENCRYPTION_DECRYPT CHAR(1) NULL,
	ORACLE_ENCRYPTION_DEFAULT CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_ENCRYPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_ENTITY_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	KEY_GROUP_REF        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CONSTRAINT_NAME VARCHAR(1024) NULL,
	ORACLE_ENTITY_PARTITION_INTERVAL_VALUE VARCHAR(1024) NULL,
	ORACLE_ENTITY_PARTITION_TYPE INTEGER NULL,
	ORACLE_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_HASH_PARTITION_TYPE INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	PARTITION_AUTOMATIC  CHAR(1) NULL,
	PARTITIONING_EXPRESSION VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_ENTITY_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_ENTITY_SUBPARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_SUBPARTITION_TEMPLATE_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_ENTITY_SUBPARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_FAIL_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_FAIL_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_HASH_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_HASH_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_HASH_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	HASH_SUBPARTITION_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_HASH_PARTITION_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_HASH_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_INDEX_GLOBAL_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_INDEX_GLOBAL_HASH_PARTITION_TYPE INTEGER NULL,
	ORACLE_INDEX_GLOBAL_PARTITION_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_INDEX_GLOBAL_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_INDEX_LOCAL_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_HASH_PARTITION_TYPE INTEGER NULL,
	ORACLE_PARTITION_TYPE INTEGER NULL,
	ORACLE_TABLESPACE_USAGE_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_INDEX_LOCAL_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_INDEX_PARTITION_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_INDEX_PARTITION_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_INDIVIDUAL_HASH_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_INDIVIDUAL_HASH_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_INMEMORY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_INMEMORY_COMPRESSION INTEGER NULL,
	ORACLE_INMEMORY_DISTRIBUTE INTEGER NULL,
	ORACLE_INMEMORY_DUPLICATE INTEGER NULL,
	ORACLE_INMEMORY_PRIORITY INTEGER NULL,
	ORACLE_INMEMORY_SERVICE INTEGER NULL,
	ORACLE_INMEMORY_SERVICE_NAME VARCHAR(1024) NULL,
	ORACLE_INMEMORY_YES_NO INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_INMEMORY
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_JAVA
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BFILE         CHAR(1) NULL,
	ORACLE_DIRECTORY_REF INTEGER NULL,
	ORACLE_JAVA_RESOLUTION INTEGER NULL,
	ORACLE_JAVA_SUBQUERY_TYPE INTEGER NULL,
	ORACLE_JAVA_TYPE     INTEGER NULL,
	ORACLE_NOFORCE       CHAR(1) NULL,
	ORACLE_SERVER_FILENAME VARCHAR(1024) NULL,
	ORACLE_SUBQUERY      VARCHAR(1024) NULL,
	ORACLE_USING         CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SHARING              INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_RIGHTS          INTEGER NULL
);

ALTER TABLE ORACLE_JAVA
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LIBRARY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EDITIONABLE          CHAR(1) NULL,
	FILE_NAME            VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_DATABASE_LINK_REF INTEGER NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LIBRARY
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LIST_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COLUMN_REF           INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LIST_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LIST_PARTITION_INFO
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LIST_PARTITION_INFO
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LOB_PARAMETERS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENABLE_STORAGE_IN_ROW CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	KEEP_DUPLICATE       CHAR(1) NULL,
	LOB_RETENTION        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_CACHE         CHAR(1) NULL,
	ORACLE_CACHE_READ    CHAR(1) NULL,
	ORACLE_CHUNK         VARCHAR(1024) NULL,
	ORACLE_COMPRESS      INTEGER NULL,
	ORACLE_ENCRYPT_ALGO  INTEGER NULL,
	ORACLE_ENCRYPT_SALT  INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_FREEPOOLS     VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INTEGRITY_ALGO INTEGER NULL,
	ORACLE_IS_RETAINING_VERSION CHAR(1) NULL,
	ORACLE_LOB_OLD_VERSION_STORAGE_PERCENT VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	PASSWORD             VARCHAR(1024) NULL,
	RETENTION_SIZE       VARCHAR(1024) NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LOB_PARAMETERS
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LOB_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	LOB_SEGMENT_NAME     VARCHAR(1024) NULL,
	LOB_STORAGE_FILE_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_LOB_STORAGE_TYPE INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LOB_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LOCATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_DIRECTORY_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LOCATION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_LOG_FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GROUP_ID             INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	ORACLE_CAN_REUSE_FILE CHAR(1) NULL,
	ORACLE_FILE_SIZE     VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_LOG_FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_OBJECT_OID
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_OPTIMAL       VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_UNIT  INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_REGULAR_STORAGE_REF INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_OBJECT_OID
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_OVERFLOW_INDEX_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_OVERFLOW_INDEX_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_OVERFLOW_TABLESPACES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_OVERFLOW_TABLESPACES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_PACKAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EDITIONABLE          CHAR(1) NULL,
	GENERATE_AS_PRE_SCRIPT CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_SPROC_DEFINER VARCHAR(1024) NULL,
	MARIADB_SPROC_SQL_SECURITY INTEGER NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_SPROC_DEFINER  VARCHAR(1024) NULL,
	MYSQL_SPROC_SQL_SECURITY INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SHARING              INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TEMPLATE_SPECIFICATION VARCHAR(32000) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PACKAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PARTITION_BOUNDARIES_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_PARTITION_BOUNDARIES_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_PARTITION_BOUNDARY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENDING_VALUE         VARCHAR(1024) NULL,
	ENDING_VALUE_TYPE    INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BOUNDARY_TYPE INTEGER NULL,
	PARTITION_COLUMN_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITION_BOUNDARY
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PARTITION_COLUMNS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_PARTITION_DESCRIPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_INDEX_COMPRESS_TYPE INTEGER NULL,
	ORACLE_INDEX_USABILITY CHAR(1) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_OPTIMAL       VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_UNIT  INTEGER NULL,
	ORACLE_OVERFLOW_SEGMENT_ATTRIBUTES_REF INTEGER NULL,
	ORACLE_OVERFLOW_STORAGE_REF INTEGER NULL,
	ORACLE_PARTITION_LEVEL_SUBPARTITION_TYPE INTEGER NULL,
	ORACLE_PARTITION_VALUE VARCHAR(1024) NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_REGULAR_STORAGE_REF INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USE_OVERFLOW         CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PARTITION_DESCRIPTION_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_PARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	COMPRESS_TYPE        INTEGER NULL,
	DEFERRED_SEGMENT     INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_READ_WRITE        INTEGER NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_DIRECTORY_REF INTEGER NULL,
	ORACLE_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	ORACLE_HASH_PARTITION_QUANTITY VARCHAR(1024) NULL,
	ORACLE_HASH_PARTITION_TYPE INTEGER NULL,
	ORACLE_INDEXINGCLAUSE INTEGER NULL,
	ORACLE_LOCATION_SPECIFICATION VARCHAR(32000) NULL,
	ORACLE_PARTITION_VALUE VARCHAR(1024) NULL,
	ORACLE_PREFIX_COMPRESSION INTEGER NULL,
	ORACLE_TBL_COMPRESS_NOCOMPRESS INTEGER NULL,
	USE_OVERFLOW         CHAR(1) NULL,
	USE_OVERFLOW_STORAGE CHAR(1) NULL,
	USE_REGULAR_STORAGE  CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_PARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_PARTITION_ELEMENTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_PARTITION_ELEMENTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_PARTITION_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MAX_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_OVERFLOW_TABLESPACE_REF INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	ORACLE_TABLESPACE_USAGE_TYPE INTEGER NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	TYPE                 INTEGER NULL,
	USE_OVERFLOW         CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITION_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PARTITION_TEMPLATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITION_TEMPLATE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PARTITIONING_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	LOB_SEGMENT_NAME     VARCHAR(1024) NULL,
	LOB_STORAGE_FILE_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_OVERFLOW_TABLESPACE_REF INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	ORACLE_TABLESPACE_USAGE_TYPE INTEGER NULL,
	USE_OVERFLOW         CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PARTITIONING_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PHYSICAL_FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTO_EXTEND          CHAR(1) NULL,
	AUTO_EXTEND_MAX_SIZE VARCHAR(1024) NULL,
	AUTO_EXTEND_NEXT_VALUE VARCHAR(1024) NULL,
	DATA_BLOCK_SIZE      VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_SYSTEM_FILE       CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	ORACLE_BLOCK_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_CAN_REUSE_FILE CHAR(1) NULL,
	ORACLE_FILE_BLOCK_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_FILE_SIZE     VARCHAR(1024) NULL,
	ORACLE_FILE_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_IS_OFFLINE    CHAR(1) NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_NEXT_DATA_UNIT INTEGER NULL,
	ORACLE_PHYSICAL_FILE_NAME VARCHAR(1024) NULL,
	ORACLE_PHYSICAL_FILE_STATUS INTEGER NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PHYSICAL_FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_OPTIMAL       VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_UNIT  INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_DEFAULT CHAR(1) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_PHYSICAL_STORAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BUFFER_POOL   INTEGER NULL,
	ORACLE_FLASH_CACHE   INTEGER NULL,
	ORACLE_FREE_LIST_GROUPS VARCHAR(1024) NULL,
	ORACLE_FREE_LISTS    VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_UNITS INTEGER NULL,
	ORACLE_INITIAL_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE      VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_TYPE INTEGER NULL,
	ORACLE_MAX_SIZE_UNITS INTEGER NULL,
	ORACLE_MAX_TRANSACTIONS VARCHAR(1024) NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_UNITS INTEGER NULL,
	ORACLE_OPTIMAL       VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_TYPE  INTEGER NULL,
	ORACLE_OPTIMAL_UNIT  INTEGER NULL,
	ORACLE_PERCENT_FREE  VARCHAR(1024) NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_PERCENT_USED  VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_DEFAULT CHAR(1) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_QUALIFIED_DISK
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FORCE_ADD            CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_SIZE          VARCHAR(1024) NULL,
	ORACLE_SIZE_UNITS    INTEGER NULL,
	SEARCH_STRING        VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_QUALIFIED_DISK
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_RANGE_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_RANGE_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_RANGE_PARTITION_INFO
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_RANGE_PARTITION_INFO
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_RESOLVER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_JAVA_NAME     VARCHAR(1024) NULL,
	ORACLE_SCHEMA_NAME   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_RESOLVER
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONTAINER            INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IDENTIFIED           CHAR(1) NULL,
	IDENTIFIED_BY        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ROLE_PACKAGE_NAME    VARCHAR(1024) NULL,
	ROLE_PASSWORD        VARCHAR(1024) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_ROLLBACK_SEGMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_IS_OFFLINE    CHAR(1) NULL,
	ORACLE_IS_PUBLIC     CHAR(1) NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_SIZE  VARCHAR(1024) NULL,
	ORACLE_OPTIMAL_SIZE_TYPE INTEGER NULL,
	ORACLE_ROLLBACK_SIZE_UNIT INTEGER NULL,
	ORACLE_SHRINK        VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_ROLLBACK_SEGMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_SUB_PARTITION_ELEMENTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_SUB_PARTITION_ELEMENTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_SUBPARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	COMPRESS_TYPE        INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_READ_WRITE        INTEGER NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_DIRECTORY_REF INTEGER NULL,
	ORACLE_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	ORACLE_INDEXINGCLAUSE INTEGER NULL,
	ORACLE_LOCATION_SPECIFICATION VARCHAR(32000) NULL,
	ORACLE_PARTITION_VALUE VARCHAR(1024) NULL,
	ORACLE_SUBPARTITION_REF INTEGER NULL,
	ORACLE_TBL_COMPRESS_NOCOMPRESS INTEGER NULL,
	USE_REGULAR_STORAGE  CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_SUBPARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_SUBPARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_SUBPARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_SUBPARTITION_SPEC
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMPRESS_PREFIX_LENGTH VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	ORACLE_INDEX_COMPRESS_TYPE INTEGER NULL,
	ORACLE_INDEX_USABILITY CHAR(1) NULL,
	ORACLE_TABLESPACE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_SUBPARTITION_SPEC
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_SUBPARTITION_SPEC_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_SUBPARTITION_SPEC_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_SUBPARTITION_TEMPLATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_ENTITY_SUBPARTITION_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_SUBPARTITION_TEMPLATE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_SUPLOG_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_SUPLOG_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_SUPPLEMENTAL_LOG_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	COLUMN_REF           INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	HAS_NO_LOG           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_SUPPLEMENTAL_LOG_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_SUPPLEMENTAL_LOG_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	LOG_ALWAYS           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_SUPPLEMENTAL_LOG_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_SUPPLEMENTLOG_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_SUPPLEMENTLOG_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_TABLE_CLUSTER_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_TABLE_CLUSTER_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_TABLE_COMPRESSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_TABLE_COMPRESSION
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_TABLESPACE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CAN_FLASHBACK        CHAR(1) NULL,
	COMPRESS_TYPE        INTEGER NULL,
	DATA_BLOCK_SIZE      VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXTENT_MANAGEMENT_TYPE INTEGER NULL,
	EXTENT_SIZE          VARCHAR(1024) NULL,
	FORCE_LOGGING        CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	IS_READ_ONLY         CHAR(1) NULL,
	LOCAL_EXTENT_MANAGEMENT_TYPE INTEGER NULL,
	LOCAL_TEMPORARY_TABLESPACE_NODE INTEGER NULL,
	MINIMUM_EXTENT       VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_BLOCK_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_DATA_BLOCK_UNIT INTEGER NULL,
	ORACLE_ENCRYPT_ALGO  INTEGER NULL,
	ORACLE_ENCRYPTION_ALGORITHM VARCHAR(1024) NULL,
	ORACLE_FILE_BLOCK_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_FILE_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_INITIAL_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_INITIAL_EXTENT_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_IS_OFFLINE    CHAR(1) NULL,
	ORACLE_LOCAL_EXTEND_MANAGEMENT_DATA_UNIT INTEGER NULL,
	ORACLE_LOGGING       INTEGER NULL,
	ORACLE_MAX_EXTENT_DATA_UNIT INTEGER NULL,
	ORACLE_MAX_EXTENT_TYPE INTEGER NULL,
	ORACLE_MAX_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_MAX_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_MIN_EXTENT_DATA_UNIT INTEGER NULL,
	ORACLE_MIN_EXTENTS   VARCHAR(1024) NULL,
	ORACLE_NEXT_DATA_UNIT INTEGER NULL,
	ORACLE_NEXT_EXTENT_SIZE VARCHAR(1024) NULL,
	ORACLE_NEXT_EXTENT_SIZE_DATA_UNIT INTEGER NULL,
	ORACLE_PERCENT_INCREASE VARCHAR(1024) NULL,
	ORACLE_RETENTION     INTEGER NULL,
	ORACLE_SHARDSPACE_NAME VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_GROUP VARCHAR(1024) NULL,
	ORACLE_TABLESPACE_INDEX_COMPRESS INTEGER NULL,
	ORACLE_TABLESPACE_SET CHAR(1) NULL,
	ORACLE_TABLESPACE_TABLE_COMPRESS INTEGER NULL,
	RETENTION_GUARANTEE  CHAR(1) NULL,
	SEGMENT_MANAGEMENT_TYPE INTEGER NULL,
	STORAGE_FILE_TYPE    INTEGER NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	TABLESPACE_SYSTEM_TYPE INTEGER NULL,
	TABLESPACE_TYPE      INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_TABLESPACE
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_TABLESPACES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ORACLE_USER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACCOUNT_STATE        INTEGER NULL,
	AUTHENTICATED_BY     INTEGER NULL,
	CERTIFICATE_DN       VARCHAR(1024) NULL,
	CONTAINER            INTEGER NULL,
	DEFAULT_COLLATION    VARCHAR(1024) NULL,
	DEFAULT_TABLESPACE_REF INTEGER NULL,
	DEFAULT_TEMPORARY_TABLESPACE_REF INTEGER NULL,
	DIRECTORY_DN         VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENABLE_EDITIONS      CHAR(1) NULL,
	HTTP_DIGEST          INTEGER NULL,
	KERBEROS_PRINCIPAL_NAME VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_PROFILE_REF   INTEGER NULL,
	PASSWORD_EXPIRE      CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_PASSWORD        VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_USER
ADD PRIMARY KEY (ID@);

CREATE TABLE ORACLE_USER_SIZE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_USER_TABLESPACE_REF INTEGER NULL,
	QUOTA                INTEGER NULL,
	QUOTA_USER           VARCHAR(1024) NULL,
	QUOTA_VALUE          INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ORACLE_USER_SIZE
ADD PRIMARY KEY (ID@);

CREATE TABLE OTHER_FOREIGN_KEY_ATTRIBUTES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE OTHER_FOREIGN_KEY_ATTRIBUTES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE OWNER_OVERRIDE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_TYPECODE      INTEGER NULL,
	OWNER_NAME           VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE OWNER_OVERRIDE
ADD PRIMARY KEY (ID@);

CREATE TABLE PACKAGE_NAMES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE PACKAGE_NAMES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PAGE_SETUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SYNCHRONIZE_WITH_CURRENT_DIAGRAM CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PAGE_SETUP
ADD PRIMARY KEY (ID@);

CREATE TABLE PAGE_STYLE_SHEET
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PRINT_BORDER         CHAR(1) NULL,
	PRINT_BOTTOM_MARGIN  DOUBLE NULL,
	PRINT_COLLATE        CHAR(1) NULL,
	PRINT_COLOR          CHAR(1) NULL,
	PRINT_FOOTER         VARCHAR(1024) NULL,
	PRINT_FOOTER_MARGIN  DOUBLE NULL,
	PRINT_HEADER         VARCHAR(1024) NULL,
	PRINT_HEADER_MARGIN  DOUBLE NULL,
	PRINT_LEFT_MARGIN    DOUBLE NULL,
	PRINT_ORIENTATION    INTEGER NULL,
	PRINT_PAPER_DIMENSIONS CHAR(100) NULL,
	PRINT_PAPER_FORM_TYPE INTEGER NULL,
	PRINT_PAPER_SIZE     VARCHAR(1024) NULL,
	PRINT_PAPER_SOURCE   INTEGER NULL,
	PRINT_PRINTER_NAME   VARCHAR(1024) NULL,
	PRINT_RIGHT_MARGIN   DOUBLE NULL,
	PRINT_SCALED_PAGE_SIZE CHAR(100) NULL,
	PRINT_SCALING        INTEGER NULL,
	PRINT_TOP_MARGIN     DOUBLE NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PAGE_STYLE_SHEET
ADD PRIMARY KEY (ID@);

CREATE TABLE PARAMETER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABSTRACT_ENTITY_REF  INTEGER NULL,
	ANCHORED_TO_TYPE     INTEGER NULL,
	AS_LOCATOR           CHAR(1) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	CHARACTER_CASE_TYPE  INTEGER NULL,
	DB2_CHARACTER_TYPE   INTEGER NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DEFAULT_REF          INTEGER NULL,
	DEFAULT_VALUE        VARCHAR(1024) NULL,
	DISPLAY_FORMAT_REF   INTEGER NULL,
	GLOBAL_VARIABLE_REF  INTEGER NULL,
	HEADER               VARCHAR(1024) NULL,
	IS_READ_ONLY         CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	IS_VARIANT_TYPE      CHAR(1) NULL,
	KEY_GROUP_SORT_ORDER VARCHAR(1024) NULL,
	MARIADB_SPROC_PTYPE  INTEGER NULL,
	NULL_OPTION_TYPE     INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	OUT_OUTPUT           INTEGER NULL,
	PGSQL_PARAMETER_MODE INTEGER NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	SQLSERVER_IS_VARYING CHAR(1) NULL,
	STORE_IN_UPPERCASE   CHAR(1) NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TYPE                 INTEGER NULL,
	UDB_CHARACTER_TYPE   INTEGER NULL,
	USER_DEFINED_TYPE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PARAMETER
ADD PRIMARY KEY (ID@);

CREATE TABLE PARAMETER_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PARAMETER_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PARAMETER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PARAMETER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PARENT_RELATIONSHIPS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PARENT_RELATIONSHIPS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PARQUET_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PARQUET_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE PARTITION_BOUNDARY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ENDING_VALUE         VARCHAR(1024) NULL,
	ENDING_VALUE_TYPE    INTEGER NULL,
	KEY_GROUP_MEMBER_REF INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_COLUMN_REF INTEGER NULL,
	STARTING_VALUE       VARCHAR(1024) NULL,
	STARTING_VALUE_TYPE  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PARTITION_BOUNDARY
ADD PRIMARY KEY (ID@);

CREATE TABLE PARTITION_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARE_NULLS_SORTED_LAST CHAR(1) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	COLUMN_SORT_ORDER    INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_BY         VARCHAR(32000) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PARTITION_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE PARTITION_COLUMNS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PARTITION_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_DEFINE_DATA_SETS CHAR(1) NULL,
	DB2_ERASE_WHEN_DELETED CHAR(1) NULL,
	DB2_FREE_PAGE_INTERVAL INTEGER NULL,
	DB2_GROUP_BUFFERPOOL_TYPE INTEGER NULL,
	DB2_HASH_SIZE_DATA   VARCHAR(1024) NULL,
	DB2_HASH_SIZE_DATA_UNIT INTEGER NULL,
	DB2_PCT_UPDATE       VARCHAR(1024) NULL,
	DB2_PAGENUM          INTEGER NULL,
	DB2_PERCENT_FREE     VARCHAR(1024) NULL,
	DB2_PRIMARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_SECONDARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_STORAGE_GROUP_REF INTEGER NULL,
	DB2_TRACK_MODIFIED_PAGES CHAR(1) NULL,
	DB2_VOLUME_CATALOG   VARCHAR(1024) NULL,
	DB2_ZOS_DSSIZE       INTEGER NULL,
	DATA_SET_SIZE        INTEGER NULL,
	DURATION_TYPE        INTEGER NULL,
	DURATION_VALUE       INTEGER NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	INFORMIX_DBSPACE_REF INTEGER NULL,
	IS_COMPRESSED        CHAR(1) NULL,
	IS_ENDING_VALUE_EXCLUDED CHAR(1) NULL,
	IS_STARTING_VALUE_EXCLUDED CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_NUMBER     INTEGER NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	UDB_INDEX_TABLESPACE_REF INTEGER NULL,
	UDB_LONG_TABLESPACE_REF INTEGER NULL,
	UDB_TABLESPACE_REF   INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PARTITION_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE PARTITION_ELEMENTS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PARTITION_ELEMENTS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PARTITION_LESS_THAN_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE PARTITION_LESS_THAN_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PARTITION_VALUES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE PARTITION_VALUES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PERMISSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_GROUP_ROLE_REF  INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	ALL_PERMISSIONS      INTEGER NULL,
	CAN_ADMINISTER       CHAR(1) NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_ALL_AUTHENTICATED_USERS CHAR(1) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_ALL_USERS CHAR(1) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_DOMAIN VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_FILTER_EXPRESSION VARCHAR(32000) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_GROUP VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_SERVICEACCOUNT VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ROW_ACCESS_POLICY_USER VARCHAR(1024) NULL,
	GRANT_ALL_PERMISSIONS_EXCEPT CHAR(1) NULL,
	GRANT_AS_PRINCIPAL_REF INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_CASCADE    CHAR(1) NULL,
	TYPE                 INTEGER NULL,
	UDB_SECURITY_LABEL_PERMISSION INTEGER NULL,
	UDB_SECURITY_POLICY_RULE INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PERMISSION
ADD PRIMARY KEY (ID@);

CREATE TABLE PERMISSION_RECIPIENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	APPLY_TO_ALL_RECIPIENT_OWNEES CHAR(1) NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	CASSANDRA_ROLE_REF   INTEGER NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	HIVE_ROLE_REF        INTEGER NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_ROLE_REF     INTEGER NULL,
	MONGODB_DATABASE_REF INTEGER NULL,
	MONGODB_ROLE_REF     INTEGER NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_ROLE_REF       INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_ROLE_REF    INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE PERMISSION_RECIPIENT
ADD PRIMARY KEY (ID@);

CREATE TABLE PGSQL_VARIABLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VARIABLE_VALUE       VARCHAR(1024) NULL
);

ALTER TABLE PGSQL_VARIABLE
ADD PRIMARY KEY (ID@);

CREATE TABLE PHYSICAL_COLUMNS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PHYSICAL_COLUMNS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PHYSICAL_FILES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PHYSICAL_FILES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PIPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AWS_SNS_TOPIC        VARCHAR(1024) NULL,
	COPY_STATEMENT       VARCHAR(32000) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	INTEGRATION_NAME     VARCHAR(1024) NULL,
	IS_AUTO_INGEST       CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PIPE
ADD PRIMARY KEY (ID@);

CREATE TABLE POLYSHAPE_POINTS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(100) NULL
);

ALTER TABLE POLYSHAPE_POINTS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PRE_AUTH_ROLES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PREAUTH_ROLES_REF    INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PRE_AUTH_ROLES
ADD PRIMARY KEY (ID@);

CREATE TABLE PRE_AUTHORIZED_ROLES_LIST_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PRE_AUTHORIZED_ROLES_LIST_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PRE_DATA_VAULT_ENTITIES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(100) NULL
);

ALTER TABLE PRE_DATA_VAULT_ENTITIES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PRINCIPALS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE PRINCIPALS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE PROFILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CPU_PER_CALL         INTEGER NULL,
	CPU_PER_CALL_VALUE   VARCHAR(1024) NULL,
	CPU_PER_SESSION      INTEGER NULL,
	CPU_PER_SESSION_VALUE VARCHAR(1024) NULL,
	COMPOSITE_LIMIT      INTEGER NULL,
	COMPOSITE_LIMIT_VALUE VARCHAR(1024) NULL,
	CONNECT_TIME         INTEGER NULL,
	CONNECT_TIME_VALUE   VARCHAR(1024) NULL,
	CONTAINER            INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FAILED_LOGIN_ATTEMPTS INTEGER NULL,
	FAILED_LOGIN_ATTEMPTS_VALUE VARCHAR(1024) NULL,
	IDLE_TIME            INTEGER NULL,
	IDLE_TIME_VALUE      VARCHAR(1024) NULL,
	LOGICAL_READS_PER_CALL INTEGER NULL,
	LOGICAL_READS_PER_CALL_VALUE VARCHAR(1024) NULL,
	LOGICAL_READS_PER_SESSION INTEGER NULL,
	LOGICAL_READS_PER_SESSION_VALUE VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PASSWORD_GRACE_TIME  INTEGER NULL,
	PASSWORD_GRACE_TIME_VALUE VARCHAR(1024) NULL,
	PASSWORD_LIFE_TIME   INTEGER NULL,
	PASSWORD_LIFE_TIME_VALUE VARCHAR(1024) NULL,
	PASSWORD_LOCK_TIME   INTEGER NULL,
	PASSWORD_LOCK_TIME_VALUE VARCHAR(1024) NULL,
	PASSWORD_REUSE_MAX   INTEGER NULL,
	PASSWORD_REUSE_MAX_VALUE VARCHAR(1024) NULL,
	PASSWORD_REUSE_TIME  INTEGER NULL,
	PASSWORD_REUSE_TIME_VALUE VARCHAR(1024) NULL,
	PASSWORD_VERIFY_FUNCTION INTEGER NULL,
	PRIVATE_SGA          INTEGER NULL,
	PRIVATE_SGA_VALUE    VARCHAR(1024) NULL,
	SGA_SIZE             INTEGER NULL,
	SESSIONS_PER_USER    INTEGER NULL,
	SESSIONS_PER_USER_VALUE VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VERIFY_FUNCTION      VARCHAR(1024) NULL
);

ALTER TABLE PROFILE
ADD PRIMARY KEY (ID@);

CREATE TABLE PROGRESS_AREA
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE PROGRESS_AREA
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON PROGRESS_AREA
(
	OWNER@
);

CREATE TABLE PROPERTIES
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OLD_VALUE@           VARCHAR(1024) NULL,
	NEW_VALUE@           VARCHAR(1024) NULL
);

CREATE TABLE PROPERTY_TYPE
(
	ID@                  INTEGER NOT NULL,
	NAME                 VARCHAR(1024) NULL,
	DATA_TYPE            INTEGER NULL,
	TAG_IS_REFERENCE     CHAR(1) NULL,
	LONG_ID              CHAR(67) NULL,
	TAG_RELEASE_ADDED    VARCHAR(1024) NULL,
	TAG_DISPLAY_NAME_RESOURCE VARCHAR(1024) NULL,
	REFERENCED_TYPE_REF  INTEGER NULL,
	REFERENCED_MODEL     CHAR(67) NULL,
	TAG_IS_DEPRECATED    CHAR(1) NULL,
	DEFINITION           VARCHAR(32000) NULL,
	TAG_IS_SCRATCH       CHAR(1) NULL,
	TAG_IS_PHYSICAL      CHAR(1) NULL,
	TAG_DBMS_ADBL        VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ADBL VARCHAR(1024) NULL,
	TAG_IS_SOURCE_CODE   CHAR(1) NULL,
	TAG_COLUMN_WIDTH     INTEGER NULL,
	TAG_IS_LOGICAL       CHAR(1) NULL,
	TAG_IGNORE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_IS_NOT_REPRESENTED CHAR(1) NULL,
	TAG_RELEASE_DEPRECATED VARCHAR(1024) NULL,
	TAG_DEPRECATION_LEVEL INTEGER NULL,
	TAG_LEGACY_PROPERTY_IS_TRANSIENT CHAR(1) NULL,
	TAG_DBMS_DYNAMODB    VARCHAR(1024) NULL,
	TAG_DBMS_AWS_KEYSPACE VARCHAR(1024) NULL,
	TAG_LEGACY_PROPERTY_VISUALIZER_TYPE VARCHAR(1024) NULL,
	TAG_HAS_ENUM_VALUES  CHAR(1) NULL,
	TAG_DBMS_SNOWFLAKE   VARCHAR(1024) NULL,
	TAG_IS_THREE_STATE_BOOLEAN CHAR(1) NULL,
	TAG_DBMS_SQLSERVER   VARCHAR(1024) NULL,
	TAG_DBMS_TERADATA    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES      VARCHAR(1024) NULL,
	TAG_IS_PREFETCH      CHAR(1) NULL,
	TAG_DBMS_MARIADB     VARCHAR(1024) NULL,
	TAG_DBMS_MYSQL       VARCHAR(1024) NULL,
	TAG_IS_INTERNAL      CHAR(1) NULL,
	TAG_DBMS_ISERIES     VARCHAR(1024) NULL,
	TAG_DBMS_ACCESS      VARCHAR(1024) NULL,
	TAG_CAN_BE_HARDENED  CHAR(1) NULL,
	TAG_IS_COLOR_VALUE   CHAR(1) NULL,
	TAG_IS_FONT_OR_COLOR CHAR(1) NULL,
	TAG_DO_NOT_DELETE_WHEN_FALSE CHAR(1) NULL,
	TAG_DBMS_DB2_ZOS     VARCHAR(1024) NULL,
	TAG_DBMS_ARANGODB    VARCHAR(1024) NULL,
	TAG_DBMS_ORACLE      VARCHAR(1024) NULL,
	TAG_DBMS_DB2_UDB     VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLSERVER VARCHAR(1024) NULL,
	TAG_IS_ORDERED_VECTOR CHAR(1) NULL,
	TAG_INTERNAL_COLUMN_NAMES VARCHAR(1024) NULL,
	TAG_IS_READ_ONLY_IN_UI CHAR(1) NULL,
	TAG_PHYSICAL_NAME_TEXT VARCHAR(1024) NULL,
	TAG_IS_SYSTEM_MAINTAINED CHAR(1) NULL,
	TAG_IS_ATOMIC_VECTOR CHAR(1) NULL,
	TAG_LEGACY_PROPERTY_IS_PHYSICAL CHAR(1) NULL,
	TAG_DBMS_SQLAZURE    VARCHAR(1024) NULL,
	TAG_DBMS_SYNAPSE     VARCHAR(1024) NULL,
	TAG_DEEP_COPY_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_SQLAZURE VARCHAR(1024) NULL,
	TAG_IS_SORTED        CHAR(1) NULL,
	TAG_IS_READ_ONLY     CHAR(1) NULL,
	TAG_DBMS_AVRO        VARCHAR(1024) NULL,
	TAG_DBMS_JSON        VARCHAR(1024) NULL,
	TAG_HIDE_IN_COMPLETE_COMPARE CHAR(1) NULL,
	TAG_HIDE_IN_BULK_EDITOR CHAR(1) NULL,
	TAG_DBMS_CASSANDRA   VARCHAR(1024) NULL,
	TAG_DBMS_PROGRESS    VARCHAR(1024) NULL,
	TAG_HIDE_IN_EXPLORER CHAR(1) NULL,
	TAG_IS_SET           CHAR(1) NULL,
	TAG_DBMS_DATABRICKS  VARCHAR(1024) NULL,
	TAG_DBMS_INFORMIX    VARCHAR(1024) NULL,
	TAG_CAN_HOLD_MULTILINE_TEXT CHAR(1) NULL,
	TAG_ALLOW_EMPTY_VALUE CHAR(1) NULL,
	TAG_LEGACY_PROPERTY_IS_VECTOR CHAR(1) NULL,
	TAG_DBMS_COUCHBASE   VARCHAR(1024) NULL,
	TAG_DBMS_MONGODB     VARCHAR(1024) NULL,
	TAG_IS_GRAPHIC_DATA  CHAR(1) NULL,
	TAG_IS_FOR_DATA_MOVEMENT CHAR(1) NULL,
	TAG_DBMS_INGRES      VARCHAR(1024) NULL,
	TAG_DBMS_REDBRICK    VARCHAR(1024) NULL,
	TAG_DBMS_ODBC        VARCHAR(1024) NULL,
	TAG_DBMS_SYBASEIQ    VARCHAR(1024) NULL,
	TAG_DBMS_SYBASE      VARCHAR(1024) NULL,
	TAG_MAX_LENGTH       INTEGER NULL,
	TAG_IS_DIMENSIONAL   CHAR(1) NULL,
	TAG_DBMS_SAS         VARCHAR(1024) NULL,
	TAG_DBMS_NEO4J       VARCHAR(1024) NULL,
	TAG_DBMS_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_DBMS_FOXPRO      VARCHAR(1024) NULL,
	TAG_DBMS_PARQUET     VARCHAR(1024) NULL,
	TAG_IS_READ_ONLY_IN_BULK_EDITOR CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_SNOWFLAKE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_ORACLE VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_MYSQL VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_GOOGLE_BIGQUERY VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_2    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_3    VARCHAR(1024) NULL,
	TAG_DBMS_HIVE        VARCHAR(1024) NULL,
	TAG_LEGACY_PROPERTY_HAS_DEFAULT_VALUE CHAR(1) NULL,
	TAG_LEGACY_PROPERTY_IS_INTERNAL CHAR(1) NULL,
	TAG_REPLACES_EXISTING_ELEMENT CHAR(1) NULL,
	TAG_USES_NAME_VALIDATION CHAR(1) NULL,
	TAG_IS_REQUIRED      CHAR(1) NULL,
	TAG_USES_ERWIN_MACROS CHAR(1) NULL,
	TAG_REFERENCE_META_LEVEL INTEGER NULL,
	TAG_ENUM_VALUES_4    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_5    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_6    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_7    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_8    VARCHAR(1024) NULL,
	TAG_ENUM_VALUES_9    VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_TERADATA VARCHAR(1024) NULL,
	TAG_HANDLE_AS_BITFIELD CHAR(1) NULL,
	TAG_BIT_FIELD_VALUES VARCHAR(1024) NULL,
	TAG_BIT_FIELD_VALUES_2 VARCHAR(1024) NULL,
	TAG_BIT_FIELD_VALUES_3 VARCHAR(1024) NULL,
	TAG_IS_TRANSIENT     CHAR(1) NULL,
	TAG_DBMS_IS_REPRESENTED_MARIADB VARCHAR(1024) NULL,
	TAG_DBMS_IS_REPRESENTED_DATABRICKS VARCHAR(1024) NULL,
	PARTICIPATING_OBJECT_REF INTEGER NULL,
	PARTICIPATING_PROPERTY_REF INTEGER NULL
);

ALTER TABLE PROPERTY_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE REDSHIFT_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE REDSHIFT_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE REFERENCE_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE REFERENCE_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE REFERENCED_HISTORY_INFORMATIONS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE REFERENCED_HISTORY_INFORMATIONS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE RELATIONSHIP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALIAS_NAME           VARCHAR(1024) NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_GRAPH_EDGE_DEFINITION VARCHAR(32000) NULL,
	CARDINALITY          INTEGER NULL,
	CARDINALITY_VALUE    VARCHAR(1024) NULL,
	CHILD_DELETE_RULE    INTEGER NULL,
	CHILD_DELETE_TRIGGER_TEMPLATE_REF INTEGER NULL,
	CHILD_ENTITY_REF     INTEGER NULL,
	CHILD_INSERT_RULE    INTEGER NULL,
	CHILD_INSERT_TRIGGER_TEMPLATE_REF INTEGER NULL,
	CHILD_SYNONYM_REF    INTEGER NULL,
	CHILD_TO_PARENT_VERB_PHRASE VARCHAR(1024) NULL,
	CHILD_UPDATE_RULE    INTEGER NULL,
	CHILD_UPDATE_TRIGGER_TEMPLATE_REF INTEGER NULL,
	COLUMN_ROLENAME      VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	CONSTRAINT_IS_DEFERRABLE INTEGER NULL,
	CONSTRAINT_IS_ENFORCED INTEGER NULL,
	CONSTRAINT_MATCH     INTEGER NULL,
	CONSTRAINT_ON_DELETE INTEGER NULL,
	CONSTRAINT_ON_UPDATE INTEGER NULL,
	CONSTRAINT_DO_ENABLE INTEGER NULL,
	CONSTRAINT_DO_RELY   INTEGER NULL,
	CONSTRAINT_DO_VALIDATE INTEGER NULL,
	CONSTRAINT_WAS_INTIALLY INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXCEPTION_TABLE_REF  INTEGER NULL,
	FORCE_CHECKING_OF_EXISTING_DATA CHAR(1) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IS_DEFERRABLE        CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	IS_ENFORCED          CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	IS_OUTER             CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	IS_QUERY_OPTIMIZATION_DISABLED CHAR(1) NULL,
	IS_TRUSTED           INTEGER NULL,
	KEY_GROUP_REF        INTEGER NULL,
	MANY_TO_MANY_ASSOCIATION_TABLE_REF INTEGER NULL,
	MANY_TO_MANY_RELATIONSHIP_REF INTEGER NULL,
	MATCH_OPTION         INTEGER NULL,
	MODE                 INTEGER NULL,
	NZ_DEFERRED          INTEGER NULL,
	NZ_IS_DEFERRABLE     INTEGER NULL,
	NEO4J_RELATIONSHIP_PROPERTIES VARCHAR(32000) NULL,
	NEO4J_RELATIONSHIP_TYPE VARCHAR(32000) NULL,
	NEO4J_RELATIONSHIP_TYPE_COUNT VARCHAR(1024) NULL,
	NULL_OPTION_TYPE     INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_IMMEDIATE_DEFERRED INTEGER NULL,
	ORACLE_RELY_NORELY   INTEGER NULL,
	ORACLE_VALIDATE      INTEGER NULL,
	PARENT_DELETE_RULE   INTEGER NULL,
	PARENT_DELETE_TRIGGER_TEMPLATE_REF INTEGER NULL,
	PARENT_ENTITY_REF    INTEGER NULL,
	PARENT_INSERT_RULE   INTEGER NULL,
	PARENT_INSERT_TRIGGER_TEMPLATE_REF INTEGER NULL,
	PARENT_SYNONYM_REF   INTEGER NULL,
	PARENT_TO_CHILD_VERB_PHRASE VARCHAR(1024) NULL,
	PARENT_UPDATE_RULE   INTEGER NULL,
	PARENT_UPDATE_TRIGGER_TEMPLATE_REF INTEGER NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	RELATIONSHIP_ARROWHEAD_COLOR INTEGER NULL,
	RELATIONSHIP_ARROWHEAD_HEIGHT INTEGER NULL,
	RELATIONSHIP_ARROWHEAD_STYLE INTEGER NULL,
	RELATIONSHIP_ARROWHEAD_WIDTH INTEGER NULL,
	RELATIONSHIP_GRAPH_LINE_STYLE INTEGER NULL,
	RELATIONSHIP_SEQUENCE INTEGER NULL,
	SUBTYPE_DISCRIMINATOR_REF INTEGER NULL,
	TERADATA_TRANSACTIONTIME_QUALIFIER INTEGER NULL,
	TERADATA_VALIDTIME_QUALIFIER INTEGER NULL,
	THEME_REF            INTEGER NULL,
	TRANS_ROLENAMING_ATTRIBUTE_REF INTEGER NULL,
	TRANS_ROLENAMING_COLUMN_REF INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE RELATIONSHIP
ADD PRIMARY KEY (ID@);

CREATE TABLE RELATIONSHIP_COORDINATES
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(100) NULL
);

ALTER TABLE RELATIONSHIP_COORDINATES
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE RESULT_SETS_TO_RETURN
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE RESULT_SETS_TO_RETURN
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE RETURN_TABLE_ORDER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SORT_ORDER           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE RETURN_TABLE_ORDER
ADD PRIMARY KEY (ID@);

CREATE TABLE RETURN_TABLE_ORDERS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE RETURN_TABLE_ORDERS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE ROLE_USAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CAN_ADMINISTER       CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ROLE_REF             INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE ROLE_USAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE RS_DIST_KEY_COLUMN_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE RS_DIST_KEY_COLUMN_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE RS_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_PARTITION_LOCATION VARCHAR(32000) NULL,
	ADBL_PARTITION_SPEC  VARCHAR(32000) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE RS_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE RS_PARTITION_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE RS_PARTITION_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SCHEMA
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_DATABASE_REF    INTEGER NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	CLONE_OF             VARCHAR(1024) NULL,
	CLONE_SCHEMA         VARCHAR(1024) NULL,
	CLONE_SCHEMA_REF     INTEGER NULL,
	DATA_RETENTION_TIME  VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DEFAULT_DDL_COLLATION VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ELEMENT_CLAUSE       VARCHAR(32000) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_TRANSIENT         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OWNER_REF            INTEGER NULL,
	RS_CREATE_EXTERNAL_DATABASE_IF_NOT_EXISTS CHAR(1) NULL,
	RS_EXTERNAL_SCHEMA   CHAR(1) NULL,
	RS_SCHEMA_EXTERNAL_CATALOG_ROLE VARCHAR(1024) NULL,
	RS_SCHEMA_EXTERNAL_FROM INTEGER NULL,
	RS_SCHEMA_EXTERNAL_PORT VARCHAR(1024) NULL,
	RS_SCHEMA_EXTERNAL_REGION VARCHAR(1024) NULL,
	RS_SCHEMA_EXTERNAL_URI VARCHAR(1024) NULL,
	RS_SCHEMA_IAM_ROLE   VARCHAR(1024) NULL,
	SNOWFLAKE_DATABASE_REF INTEGER NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	TIME_AT_BEFORE       INTEGER NULL,
	TIME_POINT           VARCHAR(1024) NULL,
	TIME_POINT_TYPE      INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WITH_MANAGED_ACCESS  CHAR(1) NULL,
	SCHEMA_PATH          VARCHAR(1024) NULL
);

ALTER TABLE SCHEMA
ADD PRIMARY KEY (ID@);

CREATE TABLE SCHEMA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_SCHEMA_PERMISSIONS VARCHAR(1024) NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SCHEMA_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE SCHEMA_REF_PERMISSION
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SCHEMA_REF_PERMISSION
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SCHEMA_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_TAG_REF       INTEGER NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SCHEMA_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE SCHEMAS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SCHEMAS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SCRATCH_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SCRATCH_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SCRIPT_TEMPLATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTO_BIND_TO_NEW     CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	GENERATE_AS_PRE_SCRIPT CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SCRIPT_TEMPLATE
ADD PRIMARY KEY (ID@);

CREATE TABLE SCRIPT_TEMPLATES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SEARCH_METHOD_DEFINITIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE SEARCH_METHOD_DEFINITIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SECURITY_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ENCODED_VALUE        VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SECURITY_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE SECURITY_ELEMENTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SECURITY_ELEMENTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SECURITY_INTEGRATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENABLED              CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NETWORK_POLICY       VARCHAR(1024) NULL,
	OAUTH_ALLOW_NON_TLS_REDIRECT_URI CHAR(1) NULL,
	OAUTH_CLIENT         INTEGER NULL,
	OAUTH_CLIENT_RSA_PUBLIC_KEY VARCHAR(1024) NULL,
	OAUTH_CLIENT_RSA_PUBLIC_KEY_2 VARCHAR(1024) NULL,
	OAUTH_CLIENT_TYPE    INTEGER NULL,
	OAUTH_ENFORCE_PKCE   CHAR(1) NULL,
	OAUTH_ISSUE_REFRESH_TOKENS CHAR(1) NULL,
	OAUTH_REDIRECT_URI   VARCHAR(1024) NULL,
	OAUTH_REFRESH_TOKEN_VALIDITY VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTNER_APPLICATION_VALUE INTEGER NULL,
	SECURITY_INTEGRATION_TYPE INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SECURITY_INTEGRATION
ADD PRIMARY KEY (ID@);

CREATE TABLE SECURITY_LABEL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENCODED_VALUE        VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	UDB_SECURITY_POLICY_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SECURITY_LABEL
ADD PRIMARY KEY (ID@);

CREATE TABLE SECURITY_LABEL_COMPONENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ELEMENT_TYPE         INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SECURITY_LABEL_COMPONENT
ADD PRIMARY KEY (ID@);

CREATE TABLE SECURITY_LABEL_COMPONENTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SECURITY_LABEL_COMPONENTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SECURITY_LABEL_ELEMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SECURITY_LABEL_COMPONENT_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SECURITY_LABEL_ELEMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE SECURITY_POLICY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	UNAUTHORIZED_ACTION_TYPE INTEGER NULL,
	USE_GROUP_AUTHORIZATIONS CHAR(1) NULL,
	USE_ROLE_AUTHORIZATIONS CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SECURITY_POLICY
ADD PRIMARY KEY (ID@);

CREATE TABLE SEQUENCE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	CACHE_CAPACITY       VARCHAR(1024) NULL,
	CYCLE_OPTIONS        INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	INCREMENT_BY         VARCHAR(1024) NULL,
	IS_CACHE_ON          CHAR(1) NULL,
	IS_CYCLE_ON          CHAR(1) NULL,
	IS_MAX               CHAR(1) NULL,
	IS_MIN               CHAR(1) NULL,
	MARIADB_AUTOINCREMENT VARCHAR(1024) NULL,
	MARIADB_AVGROWLEN    VARCHAR(1024) NULL,
	MARIADB_CHARACTER_SET VARCHAR(1024) NULL,
	MARIADB_CHECKSUM     INTEGER NULL,
	MARIADB_COLLATE      VARCHAR(1024) NULL,
	MARIADB_CONSTRING    VARCHAR(1024) NULL,
	MARIADB_DATADIR      VARCHAR(1024) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_DELAYKEYWRITE INTEGER NULL,
	MARIADB_ENCRYPTED    INTEGER NULL,
	MARIADB_ENCRYPTIONKEYID VARCHAR(1024) NULL,
	MARIADB_ENGINE       VARCHAR(1024) NULL,
	MARIADB_IETFQUOTES   INTEGER NULL,
	MARIADB_INDEXDIR     VARCHAR(1024) NULL,
	MARIADB_INSERTMETHOD INTEGER NULL,
	MARIADB_KEYBLOCKSIZE VARCHAR(1024) NULL,
	MARIADB_MAXROWS      VARCHAR(1024) NULL,
	MARIADB_MINROWS      VARCHAR(1024) NULL,
	MARIADB_PACKKEYS     INTEGER NULL,
	MARIADB_PAGECHECKSUM INTEGER NULL,
	MARIADB_PAGECOMPRESSED INTEGER NULL,
	MARIADB_PAGECOMPRESSIONLEVEL VARCHAR(1024) NULL,
	MARIADB_PASSWORD     VARCHAR(1024) NULL,
	MARIADB_ROWFORMAT    INTEGER NULL,
	MARIADB_SEQ_CACHE_CAPACITY VARCHAR(1024) NULL,
	MARIADB_SEQ_ENGINE   VARCHAR(1024) NULL,
	MARIADB_SEQUENCE     INTEGER NULL,
	MARIADB_SEQUENCE_NO_MAX_VALUE CHAR(1) NULL,
	MARIADB_SEQUENCE_NO_MIN_VALUE CHAR(1) NULL,
	MARIADB_SEQUENCE_RESTART_VALUE VARCHAR(1024) NULL,
	MARIADB_STATSAUTORECALC INTEGER NULL,
	MARIADB_STATSPERSISTENT INTEGER NULL,
	MARIADB_STATSSAMPLEPAGES VARCHAR(1024) NULL,
	MARIADB_SYSTEMVERSION CHAR(1) NULL,
	MARIADB_TABLESPACE   VARCHAR(1024) NULL,
	MARIADB_TRANSACTIONAL INTEGER NULL,
	MARIADB_UNION        VARCHAR(1024) NULL,
	MAX_VALUE            VARCHAR(1024) NULL,
	MIN_VALUE            VARCHAR(1024) NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_TABLESPACE_REF INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_KEEP_CONSTRAINT INTEGER NULL,
	ORACLE_SEQUENCE_SHARING INTEGER NULL,
	ORACLE_SEQUENCE_VISIBILITY INTEGER NULL,
	ORDER_ON             CHAR(1) NULL,
	PERIOD_DEFINITION    VARCHAR(1024) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SEQUENCE_DATATYPE    INTEGER NULL,
	STARTING_VALUE       VARCHAR(1024) NULL,
	SYNONYM_REF          INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_DEFINED_TYPE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SEQUENCE
ADD PRIMARY KEY (ID@);

CREATE TABLE SEQUENCE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_SEQUENCE_PERMISSIONS VARCHAR(1024) NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SEQUENCE_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE SESSION_USER_CONNECTION_VALUES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SESSION_USER_CONNECTION_VALUES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SESSION_USER_GROUP_CONNECTION_VALUES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SESSION_USER_GROUP_CONNECTION_VALUES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SESSION_USER_ROLE_CONNECTION_VALUES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SESSION_USER_ROLE_CONNECTION_VALUES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SHAPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ANCHOR_POINT         CHAR(100) NULL,
	ANCHOR_POINT_2       CHAR(100) NULL,
	ANNOTATION_FILL_COLOR1 INTEGER NULL,
	ANNOTATION_FILL_COLOR2 INTEGER NULL,
	ANNOTATION_FILL_GRADIENT_SLOPE INTEGER NULL,
	ANNOTATION_FILL_GRADIENT_STYLE INTEGER NULL,
	ANNOTATION_FILL_IMAGE_REF INTEGER NULL,
	ANNOTATION_FILL_IMAGE_STYLE INTEGER NULL,
	ANNOTATION_FILL_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_FILL_PATTERN_STYLE INTEGER NULL,
	ANNOTATION_FILL_STYLE INTEGER NULL,
	ANNOTATION_FILL_TRANSPARENCY INTEGER NULL,
	ANNOTATION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ANNOTATION_FONT_COLOR INTEGER NULL,
	ANNOTATION_FONT_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_FONT_NAME VARCHAR(1024) NULL,
	ANNOTATION_FONT_SIZE INTEGER NULL,
	ANNOTATION_FONT_STRIKETHROUGH CHAR(1) NULL,
	ANNOTATION_FONT_UNDERSCORE CHAR(1) NULL,
	ANNOTATION_IS_FONT_BOLD CHAR(1) NULL,
	ANNOTATION_IS_FONT_ITALIC CHAR(1) NULL,
	ANNOTATION_LINE_COLOR INTEGER NULL,
	ANNOTATION_LINE_CURVE_STYLE INTEGER NULL,
	ANNOTATION_LINE_CURVE_TENSION DOUBLE NULL,
	ANNOTATION_LINE_DASH_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_END_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_LINE_START_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_STYLE INTEGER NULL,
	ANNOTATION_LINE_WIDTH INTEGER NULL,
	ANNOTATION_OUTLINE_COLOR INTEGER NULL,
	ANNOTATION_OUTLINE_CURVE_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ANNOTATION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_OUTLINE_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_WIDTH INTEGER NULL,
	ANNOTATION_TEXT_HANDLING_STYLE INTEGER NULL,
	ANNOTATION_TEXT_HORIZONTAL_ALIGNMENT INTEGER NULL,
	ANNOTATION_TEXT_SLOPE INTEGER NULL,
	ANNOTATION_TEXT_VERTICAL_ALIGNMENT INTEGER NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	CHILD_CONNECTOR_POINT CHAR(100) NULL,
	CHILD_SHAPE_REF      INTEGER NULL,
	FIXED_SIZE_POINT     CHAR(100) NULL,
	GENERAL_FILL_COLOR1  INTEGER NULL,
	GENERAL_FILL_COLOR2  INTEGER NULL,
	GENERAL_FILL_GRADIENT_SLOPE INTEGER NULL,
	GENERAL_FILL_GRADIENT_STYLE INTEGER NULL,
	GENERAL_FILL_IMAGE_REF INTEGER NULL,
	GENERAL_FILL_IMAGE_STYLE INTEGER NULL,
	GENERAL_FILL_MONIKER VARCHAR(1024) NULL,
	GENERAL_FILL_PATTERN_STYLE INTEGER NULL,
	GENERAL_FILL_STYLE   INTEGER NULL,
	GENERAL_FILL_TRANSPARENCY INTEGER NULL,
	GENERAL_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	GENERAL_FONT_COLOR   INTEGER NULL,
	GENERAL_FONT_MONIKER VARCHAR(1024) NULL,
	GENERAL_FONT_NAME    VARCHAR(1024) NULL,
	GENERAL_FONT_SIZE    INTEGER NULL,
	GENERAL_FONT_STRIKETHROUGH CHAR(1) NULL,
	GENERAL_FONT_UNDERSCORE CHAR(1) NULL,
	GENERAL_IS_FONT_BOLD CHAR(1) NULL,
	GENERAL_IS_FONT_ITALIC CHAR(1) NULL,
	GENERAL_LINE_COLOR   INTEGER NULL,
	GENERAL_LINE_CURVE_STYLE INTEGER NULL,
	GENERAL_LINE_CURVE_TENSION DOUBLE NULL,
	GENERAL_LINE_DASH_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_END_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_MONIKER VARCHAR(1024) NULL,
	GENERAL_LINE_START_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_STYLE   INTEGER NULL,
	GENERAL_LINE_WIDTH   INTEGER NULL,
	GENERAL_OUTLINE_COLOR INTEGER NULL,
	GENERAL_OUTLINE_CURVE_STYLE INTEGER NULL,
	GENERAL_OUTLINE_CURVE_TENSION DOUBLE NULL,
	GENERAL_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	GENERAL_OUTLINE_MONIKER VARCHAR(1024) NULL,
	GENERAL_OUTLINE_STYLE INTEGER NULL,
	GENERAL_OUTLINE_WIDTH INTEGER NULL,
	IS_CONNECTOR         CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	LABEL_POSITION       CHAR(100) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_CONNECTOR_POINT CHAR(100) NULL,
	PARENT_SHAPE_REF     INTEGER NULL,
	TEXT                 VARCHAR(1024) NULL,
	THEME_REF            INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SHAPE
ADD PRIMARY KEY (ID@);

CREATE TABLE SHAPE_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ANCHOR_POINT         CHAR(100) NULL,
	BOUNDING_RECTANGLE   CHAR(100) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SHAPE_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE SHAPES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SHAPES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SHARE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SHARE
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AS_REPLICA_OF        VARCHAR(1024) NULL,
	AUTO_REFRESH_MATVIEWS INTEGER NULL,
	CLONE_DATABASE       VARCHAR(1024) NULL,
	CLONE_DATABASE_REF   INTEGER NULL,
	CLONE_FROM_SHARE     VARCHAR(1024) NULL,
	CLONE_OF             VARCHAR(1024) NULL,
	DATA_RETENTION_TIME  VARCHAR(1024) NULL,
	DEFAULT_DDL_COLLATION VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_TRANSIENT         CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SF_DATABASE_TYPE     INTEGER NULL,
	SHARE_REF            INTEGER NULL,
	TIME_AT_BEFORE       INTEGER NULL,
	TIME_POINT           VARCHAR(1024) NULL,
	TIME_POINT_TYPE      INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SNOWFLAKE_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_DATABASE_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SNOWFLAKE_DATABASE_TAG_REF INTEGER NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SNOWFLAKE_DATABASE_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_FILE_FORMAT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALLOW_DUPLICATE      CHAR(1) NULL,
	BINARY_AS_TEXT       CHAR(1) NULL,
	BINARY_FORMAT        INTEGER NULL,
	COMPRESSION          INTEGER NULL,
	DATE_FORMAT          VARCHAR(1024) NULL,
	DISABLE_AUTO_CONVERT CHAR(1) NULL,
	DISABLE_SNOWFLAKE_DATA CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EMPTY_FIELD_AS_NULL  CHAR(1) NULL,
	ENABLE_OCTAL         CHAR(1) NULL,
	ENCODING             VARCHAR(1024) NULL,
	ERROR_ON_COLUMN_COUNT_MISMATCH CHAR(1) NULL,
	ESCAPE               VARCHAR(1024) NULL,
	ESCAPE_UNENCLOSED_FIELD VARCHAR(1024) NULL,
	FIELD_DELIMITER      VARCHAR(1024) NULL,
	FIELD_OPTIONALLY_ENCLOSED_BY VARCHAR(1024) NULL,
	FILE_EXTENSION       VARCHAR(1024) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IGNORE_UTF8_ERRORS   CHAR(1) NULL,
	MATCH_BY_COLUMN_NAME INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NULL_IF              VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PRESERVE_SPACE       CHAR(1) NULL,
	RECORD_DELIMITER     VARCHAR(1024) NULL,
	REPLACE_INVALID_CHARACTERS CHAR(1) NULL,
	SCHEMA_REF           INTEGER NULL,
	SKIP_BLANK_LINES     CHAR(1) NULL,
	SKIP_BYTE_ORDER_MARK CHAR(1) NULL,
	SKIP_HEADER          VARCHAR(1024) NULL,
	SNAPPY_COMPRESSION   CHAR(1) NULL,
	STAGE_FILE_FORMAT_TYPE INTEGER NULL,
	STRIP_NULL_VALUES    CHAR(1) NULL,
	STRIP_OUTER_ARRAY    CHAR(1) NULL,
	STRIP_OUTER_ELEMENT  CHAR(1) NULL,
	TIME_FORMAT          VARCHAR(1024) NULL,
	TIMESTAMP_FORMAT     VARCHAR(1024) NULL,
	TRIM_SPACE           CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATE_UTF8        CHAR(1) NULL
);

ALTER TABLE SNOWFLAKE_FILE_FORMAT
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_FUNCTION_PARAMETER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARAMETER_NAME       VARCHAR(1024) NULL,
	PARAMETER_TYPE       VARCHAR(1024) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SNOWFLAKE_FUNCTION_PARAMETER
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SNOWFLAKE_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_USER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABORT_DETACHED_QUERY CHAR(1) NULL,
	AUTO_COMMIT          CHAR(1) NULL,
	DATE_INPUT_FORMAT    VARCHAR(1024) NULL,
	DATE_OUTPUT_FORMAT   VARCHAR(1024) NULL,
	DAYS_TO_EXPIRY_LOGIN VARCHAR(1024) NULL,
	DEFAULT_NAMESPACE    VARCHAR(1024) NULL,
	DEFAULT_ROLE_REF     INTEGER NULL,
	DEFAULT_WAREHOUSE_REF INTEGER NULL,
	DISABLE_MFA          CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EMAIL_ADDRESS        VARCHAR(1024) NULL,
	ERROR_ON_NONDETERMINISTIC_MERGE CHAR(1) NULL,
	ERROR_ON_NONDETERMINISTIC_UPDATE CHAR(1) NULL,
	EXT_AUTHN_DUO        CHAR(1) NULL,
	EXT_AUTHN_UID        VARCHAR(1024) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	LOCK_TIMEOUT         VARCHAR(1024) NULL,
	LOGIN_NAME           VARCHAR(1024) NULL,
	MINS_TO_BYPASS_MFA   VARCHAR(1024) NULL,
	MINS_TO_UNLOCK       VARCHAR(1024) NULL,
	MUST_CHANGE_PASSWORD CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PASSWORD             VARCHAR(1024) NULL,
	QUERY_TAG            VARCHAR(1024) NULL,
	RSA_PUBLIC_KEY       VARCHAR(1024) NULL,
	RSA_PUBLIC_KEY_2     VARCHAR(1024) NULL,
	ROWS_PER_RESULTSET   VARCHAR(1024) NULL,
	SNOWFLAKE_SUPPORT    CHAR(1) NULL,
	STATEMENT_TIMEOUT_IN_SECONDS VARCHAR(1024) NULL,
	TIME_INPUT_FORMAT    VARCHAR(1024) NULL,
	TIME_OUTPUT_FORMAT   VARCHAR(1024) NULL,
	TIMESTAMP_DAY_IS_ALWAYS_24H CHAR(1) NULL,
	TIMESTAMP_INPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_LTZ_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_NTZ_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_TZ_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_TYPE_MAPPING VARCHAR(1024) NULL,
	TIMEZONE             VARCHAR(1024) NULL,
	TRANSACTION_DEFAULT_ISOLATION_LEVEL VARCHAR(1024) NULL,
	TWO_DIGIT_CENTURY_START VARCHAR(1024) NULL,
	UNSUPPORTED_DDL_ACTION VARCHAR(1024) NULL,
	USE_CASHED_RESULT    CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_DISABLED        CHAR(1) NULL,
	USER_DISPLAY_NAME    VARCHAR(1024) NULL,
	USER_FIRST_NAME      VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_LAST_NAME       VARCHAR(1024) NULL,
	USER_MIDDLE_NAME     VARCHAR(1024) NULL
);

ALTER TABLE SNOWFLAKE_USER
ADD PRIMARY KEY (ID@);

CREATE TABLE SNOWFLAKE_USER_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SNOWFLAKE_USER_TAG_REF INTEGER NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SNOWFLAKE_USER_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE SOURCE_FILES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SOURCE_FILES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SOURCE_OBJECTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SOURCE_OBJECTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SPATIAL_INDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALLOW_PAGE_LOCKS     CHAR(1) NULL,
	ALLOW_ROW_LOCKS      CHAR(1) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	BOUND_LOWER_LEFT_X   INTEGER NULL,
	BOUND_LOWER_LEFT_Y   INTEGER NULL,
	BOUND_UPPER_RIGHT_X  INTEGER NULL,
	BOUND_UPPER_RIGHT_Y  INTEGER NULL,
	CELLS_PER_OBJECT     INTEGER NULL,
	DATA_COMPRESSION     INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	LEVEL_1_DENSITY_TYPE INTEGER NULL,
	LEVEL_2_DENSITY_TYPE INTEGER NULL,
	LEVEL_3_DENSITY_TYPE INTEGER NULL,
	LEVEL_4_DENSITY_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONLINE               CHAR(1) NULL,
	SQLSERVER_DROP_EXISTING_INDEX CHAR(1) NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_FILL_FACTOR VARCHAR(1024) NULL,
	SQLSERVER_IGNORE_DUPLICATE_KEYS CHAR(1) NULL,
	SQLSERVER_KEEP_EXISTING_STATISTICS CHAR(1) NULL,
	SQLSERVER_MAX_PARALLEL INTEGER NULL,
	SQLSERVER_PAD_INDEX  CHAR(1) NULL,
	SQLSERVER_SORT_IN_TEMP_DB CHAR(1) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SPATIAL_INDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_AGGREGATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ASSEMBLY_REF         INTEGER NULL,
	CLASS_NAME           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	INPUT_DATA_TYPE      VARCHAR(1024) NULL,
	INPUT_PARAMETER_NAME VARCHAR(1024) NULL,
	INPUT_TYPE_REF       INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	RETURN_DATA_TYPE     VARCHAR(1024) NULL,
	RETURN_TYPE_REF      INTEGER NULL,
	SCHEMA_REF           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_AGGREGATE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_AGGREGATE_PARAMETER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATA_TYPE_REF        INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_AGGREGATE_PARAMETER
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_ALWAYS_ENCRYPTED_KEY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALWAYS_ENCRYPTED_KEY_TYPE INTEGER NULL,
	CUSTOM_KEY_STORE_PROVIDE_NAME VARCHAR(1024) NULL,
	KEY_PATH             VARCHAR(1024) NULL,
	KEY_STORE_PROVIDE_NAME INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_ALWAYS_ENCRYPTED_KEY
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_APPLICATION_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DEFAULT_SCHEMA_REF   INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PASSWORD             VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_APPLICATION_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_APPLICATION_ROLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_APPLICATION_ROLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_APPLICATION_ROLES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_APPLICATION_ROLES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_ASSEMBLY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALLOW_USE_BY_FUNCTIONS CHAR(1) NULL,
	ASSEMBLY_BITS        VARCHAR(32000) NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PERMISSION_SET_TYPE  INTEGER NULL,
	UNCHECKED_DATA       CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_ASSEMBLY
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_ASSEMBLY_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_ASSEMBLY_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_ASYMMETRIC_KEY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALGORITHM_TYPE       INTEGER NULL,
	ASSEMBLY_REF         INTEGER NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DISPOSITION          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_REF             INTEGER NULL,
	KEY_SOURCE_TYPE      INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PROVIDER_KEY_NAME    VARCHAR(1024) NULL,
	SQLSERVER_CRYPTOGRAPHIC_PROVIDER_REF INTEGER NULL,
	SQLSERVER_DATABASE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_ASYMMETRIC_KEY
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_ASYMMETRIC_KEY_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_ASYMMETRIC_KEY_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_AUDIT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUDIT_GUID           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FAILURE_ACTION       INTEGER NULL,
	FILE_PATH            VARCHAR(1024) NULL,
	IS_ENABLED           CHAR(1) NULL,
	MAX_FILES            INTEGER NULL,
	MAX_SIZE             VARCHAR(1024) NULL,
	MAXIMUM_ROLLOVER_FILES INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	QUEUE_DELAY          INTEGER NULL,
	RESERVE_DISK_SPACE   INTEGER NULL,
	SQL_RETENTION_DAYS   VARCHAR(32000) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WHERE_CLAUSE         VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_AUDIT
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_CERTIFICATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ASSEMBLY_REF         INTEGER NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	CERTIFICATE_FROM_BINARY VARCHAR(1024) NULL,
	CERTIFICATE_SUBJECT  VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DECRYPTION_BY_PASSWORD_BINARY VARCHAR(1024) NULL,
	DECRYPTION_BY_PASSWORD_FILE VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENCRYPTION_BY_PASSWORD_BINARY VARCHAR(1024) NULL,
	ENCRYPTION_BY_PASSWORD_FILE VARCHAR(1024) NULL,
	EXECUTABLE_FILE_REF  INTEGER NULL,
	EXPIRATION_DATE      VARCHAR(1024) NULL,
	IS_ACTIVE_FOR_BEGIN_DIALOG CHAR(1) NULL,
	IS_PRIVATE_KEY       CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PRIVATE_KEY_BINARY   VARCHAR(1024) NULL,
	PRIVATE_KEY_FILE_REF INTEGER NULL,
	SQLSERVER_DATABASE_REF INTEGER NULL,
	START_DATE           VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_CERTIFICATE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_CERTIFICATE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_CERTIFICATE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_CHANGE_DATA_CAPTURE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	INDEX_REF            INTEGER NULL,
	IS_NET_CHANGE_SUPPORTED CHAR(1) NULL,
	IS_PARTITION_SWITCH_ALLOWED CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_DATABASE_ROLE_REF INTEGER NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_CHANGE_DATA_CAPTURE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_CREDENTIAL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_SCOPED      CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IDENTITY             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_CREDENTIAL_SECRET VARCHAR(1024) NULL,
	SQLSERVER_CRYPTOGRAPHIC_PROVIDER_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_CREDENTIAL
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_CRYPTOGRAPHIC_PROVIDER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_REF             INTEGER NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_CRYPTOGRAPHIC_PROVIDER
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_DATA_COMPRESSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_NUMBER     INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_DATA_COMPRESSION
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABORT_ON_ARITHMETIC_ERROR CHAR(1) NULL,
	ABORT_ON_PRECISION_LOSS CHAR(1) NULL,
	ALLOW_NESTED_TRIGGERS CHAR(1) NULL,
	ALLOW_RECURSIVE_TRIGGERS CHAR(1) NULL,
	ALLOW_SNAPSHOT_ISOLATION CHAR(1) NULL,
	ALLOW_TRANSFORM_NOISE_WORDS CHAR(1) NULL,
	ALLOW_TRUSTWORTHY_MODULES CHAR(1) NULL,
	ARE_STRINGS_PADDED   CHAR(1) NULL,
	ARE_WARNINGS_ISSUED  CHAR(1) NULL,
	AUTO_CLEANUP         INTEGER NULL,
	AUTO_CLOSE           CHAR(1) NULL,
	AUTO_CREATE_STATISTICS CHAR(1) NULL,
	AUTO_SHRINK          CHAR(1) NULL,
	AUTO_UPDATE_STATISTICS CHAR(1) NULL,
	AUTO_UPDATE_STATISTICS_ASYNC CHAR(1) NULL,
	CAN_CHAIN            CHAR(1) NULL,
	CHANGE_RETENTION_PERIOD INTEGER NULL,
	CHANGE_RETENTION_PERIOD_TYPE INTEGER NULL,
	CHANGE_TRACKING      INTEGER NULL,
	CLOSE_CURSOR_ON_COMMIT CHAR(1) NULL,
	COLLATION_NAME       VARCHAR(1024) NULL,
	COMPATIBILITY_LEVEL_TYPE INTEGER NULL,
	CONTAINMENT          INTEGER NULL,
	COPY_DATABASE_NAME   VARCHAR(1024) NULL,
	CURSOR_DEFAULT_TYPE  INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_TYPE        INTEGER NULL,
	DEFAULT_FULLTEXT_LANGUAGE INTEGER NULL,
	DEFAULT_LANGUAGE     INTEGER NULL,
	DELAYED_DURABILITY   INTEGER NULL,
	DIRECTORY_NAME       VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ELASTIC_POOL_NAME    VARCHAR(1024) NULL,
	IS_DATE_CORRELATION_OPTIMIZATION_ACTIVE CHAR(1) NULL,
	IS_ELASTIC_POOL      CHAR(1) NULL,
	IS_ENCRYPTED         CHAR(1) NULL,
	IS_NULL_DEFAULT      CHAR(1) NULL,
	IS_QUOTED_IDENTIFIER CHAR(1) NULL,
	IS_READ_ONLY         CHAR(1) NULL,
	MAX_DATABASE_SIZE    VARCHAR(1024) NULL,
	MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NON_TRANSACTED_ACCESS INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PAGE_VERIFY          INTEGER NULL,
	PARAMETERIZATION     INTEGER NULL,
	READ_COMMITTED_SNAPSHOT CHAR(1) NULL,
	RECOVERY_TYPE        INTEGER NULL,
	RESTRICTED_ACCESS_TYPE INTEGER NULL,
	SQLAZURE_DATABASE_EDITION INTEGER NULL,
	SQLAZURE_DATABASE_MAX_SIZE INTEGER NULL,
	SQLSERVER_DATABASE_REF INTEGER NULL,
	SQLSERVER_EDITION    INTEGER NULL,
	SQLSERVER_IS_CHANGE_DATA_CAPTURE_ENABLED CHAR(1) NULL,
	SQLSERVER_USE_VARDECIMAL_STORAGE_FORMAT CHAR(1) NULL,
	SERVICE_OBJECTIVE    VARCHAR(1024) NULL,
	STATE_TYPE           INTEGER NULL,
	TERMINATION_OPTION   INTEGER NULL,
	TERMINATION_WAIT_TIME INTEGER NULL,
	TWO_DIGIT_YEAR_CUTOFF INTEGER NULL,
	USE_ANSI_NULLS       CHAR(1) NULL,
	USE_TORN_PAGE_DETECTION CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	YIELD_NULL_ON_NULL_CONCATENATION CHAR(1) NULL
);

ALTER TABLE SQLSERVER_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_DATABASE_AUDIT_ACTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUDIT_OBJECT_REF     INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_DATABASE_AUDIT_ACTION
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_DATABASE_AUDIT_SPECIFICATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_AUDIT_REF  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_DATABASE_AUDIT_SPECIFICATION
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_DATABASE_ENCRYPTION_KEY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALGORITHM_TYPE       INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_ASYMMETRIC_KEY_REF INTEGER NULL,
	SQLSERVER_CERTIFICATE_REF INTEGER NULL,
	SQLSERVER_DATABASE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_DATABASE_ENCRYPTION_KEY
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_DATABASE_ROLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_DATABASE_ROLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_DATABASE_ROLES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_DATABASE_ROLES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_EXTERNAL_DATA_SOURCE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONNECTION_OPTIONS   VARCHAR(1024) NULL,
	CREDENTIAL_REF       INTEGER NULL,
	DATABASE_NAME        VARCHAR(1024) NULL,
	DATABASE_SCOPED_CREDENTIAL_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXTERNAL_DATA_SOURCE_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PUSHDOWN             INTEGER NULL,
	RESOURCE_MANAGER_LOCATION VARCHAR(1024) NULL,
	SQL_LOCATION         VARCHAR(1024) NULL,
	SHARD_MAP_NAME       VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_EXTERNAL_DATA_SOURCE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_EXTERNAL_FILE_FORMAT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATE_FORMAT          VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENCODING_TYPE        INTEGER NULL,
	FIELD_TERMINATOR     VARCHAR(1024) NULL,
	FIRST_ROW            VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQL_DATA_COMPRESSION_DELIMIT_TEXT INTEGER NULL,
	SQL_DATA_COMPRESSION_JSON INTEGER NULL,
	SQL_DATA_COMPRESSION_ORC_FILE INTEGER NULL,
	SQL_DATA_COMPRESSION_PARQUET INTEGER NULL,
	SQL_DATA_COMPRESSION_RC_FILE INTEGER NULL,
	SQL_FORMAT_TYPE      INTEGER NULL,
	SQL_SERDE_METHOD     INTEGER NULL,
	STRING_DELIMITER     VARCHAR(1024) NULL,
	USE_TYPE_DEFAULT     INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_EXTERNAL_FILE_FORMAT
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FILEGROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONTAINS_FILESTREAM  CHAR(1) NULL,
	CONTAINS_MEMORYOPTIMIZEDDATA CHAR(1) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DEFAULT           CHAR(1) NULL,
	IS_PRIMARY           CHAR(1) NULL,
	IS_READ_WRITE        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_FILEGROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FILEGROUPS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_FILEGROUPS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_FULLTEXT_CATALOG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_PATH            VARCHAR(1024) NULL,
	IS_ACCENT_SENSITIVE  CHAR(1) NULL,
	IS_DEFAULT           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_CATALOG
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FULLTEXT_CATALOG_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_CATALOG_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_FULLTEXT_INDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CHANGE_TRACKING_TYPE INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	KEY_GROUP_REF        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	POPULATION_MODE      INTEGER NULL,
	SQLSERVER_FILEGROUP_REF INTEGER NULL,
	SQLSERVER_FULLTEXT_CATALOG_REF INTEGER NULL,
	STOP_LIST_REF        INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_INDEX
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FULLTEXT_INDEX_COLUMN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	DO_NOT_POPULATE      CHAR(1) NULL,
	LANGUAGE             VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TYPE_COLUMN_REF      INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_INDEX_COLUMN
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FULLTEXT_STOPLIST
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STOP_LIST_REF        INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_STOPLIST
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FULLTEXT_STOPLIST_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_STOPLIST_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_FULLTEXT_STOPWORD
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	LANGUAGE             VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_FULLTEXT_STOPWORD
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_FUNCTION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_FUNCTION_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_LOGIN
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ASYMMETRIC_KEY_REF   INTEGER NULL,
	AUTHENTICATION_TYPE  INTEGER NULL,
	CHECK_EXPIRATION     CHAR(1) NULL,
	CHECK_POLICY         CHAR(1) NULL,
	CREDENTIAL_REF       INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DISABLED          CHAR(1) NULL,
	LANGUAGE             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PASSWORD             VARCHAR(1024) NULL,
	PASSWORD_MUST_CHANGE_ON_NEXT_LOGON CHAR(1) NULL,
	SQLSERVER_CERTIFICATE_REF INTEGER NULL,
	SQLSERVER_DATABASE_REF INTEGER NULL,
	SERVER_ID            VARCHAR(1024) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	UNLOCK_PASSWORD      CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_LOGIN
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_LOGIN_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_LOGIN_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_LOGINS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_LOGINS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_PARTITION_FUNCTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COLLATION_NAME       VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	RANGE_PARTITION_BOUNDARY_SIDE INTEGER NULL,
	SQLSERVER_PARTITION_TYPE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_PARTITION_FUNCTION
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_PARTITION_SCHEME
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MAP_ALL              CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_FUNCTION_REF INTEGER NULL,
	SQLSERVER_DATABASE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_PARTITION_SCHEME
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_PHYSICAL_FILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_GROWTH_BY_TYPE  INTEGER NULL,
	FILE_GROWTH_SIZE     VARCHAR(1024) NULL,
	FILE_NAME            VARCHAR(1024) NULL,
	FILE_SIZE            VARCHAR(1024) NULL,
	IS_PRIMARY           CHAR(1) NULL,
	IS_READ_ONLY         CHAR(1) NULL,
	IS_SPARSE            CHAR(1) NULL,
	MAX_SIZE             VARCHAR(1024) NULL,
	MEDIA_IS_READ_ONLY   CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STATE_TYPE           INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_PHYSICAL_FILE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_RESOURCE_POOL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AFFINITY_TYPE        INTEGER NULL,
	AFFINITY_VALUE       VARCHAR(1024) NULL,
	CAP_CPU_PERCENTAGE   INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MAXIMUM_CPU_PERCENTAGE INTEGER NULL,
	MAXIMUM_IOPS_PER_VOLUME INTEGER NULL,
	MAXIMUM_MEMORY_PERCENTAGE INTEGER NULL,
	MINIMUM_CPU_PERCENTAGE INTEGER NULL,
	MINIMUM_IOPS_PER_VOLUME INTEGER NULL,
	MINIMUM_MEMORY_PERCENTAGE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_RESOURCE_POOL
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_ROLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_ROLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_SCHEMA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_SCHEMA_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_SEQUENCE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_SEQUENCE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_SERVER_AUDIT_SPECIFICATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SQLSERVER_AUDIT_REF  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_SERVER_AUDIT_SPECIFICATION
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_SERVER_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_SERVER_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_SERVER_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_SERVER_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_STORED_PROCEDURE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_STORED_PROCEDURE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_SYMMETRIC_KEY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALGORITHM_TYPE       INTEGER NULL,
	AUTHORIZATION_REF    INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DISPOSITION          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IDENTITY_VALUE       VARCHAR(1024) NULL,
	KEY_SOURCE           VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PROVIDER_KEY_NAME    VARCHAR(1024) NULL,
	SQLSERVER_CRYPTOGRAPHIC_PROVIDER_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_SYMMETRIC_KEY
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_SYMMETRIC_KEY_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_SYMMETRIC_KEY_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_SYNONYM_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_SYNONYM_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_TYPE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_TYPE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_USER_ID_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_USER_ID_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_VIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_VIEW_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SQLSERVER_WORKLOAD_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IMPORTANCE           INTEGER NULL,
	MAXIMUM_REQUESTS     INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REQUEST_MAXIMUM_CPU_TIME INTEGER NULL,
	REQUEST_MAXIMUM_MEMORY_GRANT_PERCENTAGE INTEGER NULL,
	REQUEST_MEMORY_GRANT_TIMEOUT INTEGER NULL,
	SQLSERVER_MAX_PARALLEL INTEGER NULL,
	SQLSERVER_RESOURCE_POOL_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_WORKLOAD_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_XML_SCHEMA_COLLECTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SQLSERVER_XML_SCHEMA_COLLECTION
ADD PRIMARY KEY (ID@);

CREATE TABLE SQLSERVER_XML_SCHEMA_COLLECTION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SQLSERVER_XML_SCHEMA_COLLECTION_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE STAGE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALLOW_DUPLICATE      CHAR(1) NULL,
	AUTO_REFRESH         INTEGER NULL,
	AWS_KEY_ID           VARCHAR(1024) NULL,
	AWS_ROLE             VARCHAR(1024) NULL,
	AWS_TOKEN            VARCHAR(1024) NULL,
	AWS_SECRET_KEY       VARCHAR(1024) NULL,
	AZURE_SAS_TOKEN      VARCHAR(1024) NULL,
	BINARY_AS_TEXT       CHAR(1) NULL,
	BINARY_FORMAT        INTEGER NULL,
	COMPRESSION          INTEGER NULL,
	COPY_ENFORCE_LENGTH  CHAR(1) NULL,
	COPY_LOAD_UNCERTAIN_FILES CHAR(1) NULL,
	COPY_ON_ERROR        INTEGER NULL,
	COPY_ON_ERROR_SIZE_LIMIT_SPEC VARCHAR(1024) NULL,
	COPY_PURGE           CHAR(1) NULL,
	COPY_RETURN_FAILED_ONLY CHAR(1) NULL,
	COPY_SIZE_LIMIT      VARCHAR(1024) NULL,
	COPY_TRUNCATECOLUMNS CHAR(1) NULL,
	COPY_DO_FORCE        CHAR(1) NULL,
	DATE_FORMAT          VARCHAR(1024) NULL,
	DISABLE_AUTO_CONVERT CHAR(1) NULL,
	DISABLE_SNOWFLAKE_DATA CHAR(1) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EMPTY_FIELD_AS_NULL  CHAR(1) NULL,
	ENABLE               CHAR(1) NULL,
	ENABLE_OCTAL         CHAR(1) NULL,
	ENCODING             VARCHAR(1024) NULL,
	ERROR_ON_COLUMN_COUNT_MISMATCH CHAR(1) NULL,
	ESCAPE               VARCHAR(1024) NULL,
	ESCAPE_UNENCLOSED_FIELD VARCHAR(1024) NULL,
	EXTERNAL_STAGE_ENCRYPTION_KMS_KEY_ID VARCHAR(1024) NULL,
	EXTERNAL_STAGE_ENCRYPTION_MASTER_KEY VARCHAR(1024) NULL,
	EXTERNAL_STAGE_ENCRYPTION_TYPE INTEGER NULL,
	EXTERNAL_STAGE_TYPE  INTEGER NULL,
	FIELD_DELIMITER      VARCHAR(1024) NULL,
	FIELD_OPTIONALLY_ENCLOSED_BY VARCHAR(1024) NULL,
	FILE_EXTENSION       VARCHAR(1024) NULL,
	FILE_FORMAT_NAME     VARCHAR(1024) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IGNORE_UTF8_ERRORS   CHAR(1) NULL,
	IS_TEMPORARY         CHAR(1) NULL,
	MATCH_BY_COLUMN_NAME INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NOTIFICATION_INTEGRATION VARCHAR(1024) NULL,
	NULL_IF              VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PRESERVE_SPACE       CHAR(1) NULL,
	RECORD_DELIMITER     VARCHAR(1024) NULL,
	REPLACE_INVALID_CHARACTERS CHAR(1) NULL,
	SCHEMA_REF           INTEGER NULL,
	SKIP_BLANK_LINES     CHAR(1) NULL,
	SKIP_BYTE_ORDER_MARK CHAR(1) NULL,
	SKIP_HEADER          VARCHAR(1024) NULL,
	SNAPPY_COMPRESSION   CHAR(1) NULL,
	SNOWFLAKE_FILE_FORMAT_REF INTEGER NULL,
	STAGE_FILE_FORMAT_NAME VARCHAR(1024) NULL,
	STAGE_FILE_FORMAT_TYPE INTEGER NULL,
	STAGE_TYPE           INTEGER NULL,
	STORAGE_INTEGRATION_REF INTEGER NULL,
	STRIP_NULL_VALUES    CHAR(1) NULL,
	STRIP_OUTER_ARRAY    CHAR(1) NULL,
	STRIP_OUTER_ELEMENT  CHAR(1) NULL,
	SUBPATH              VARCHAR(1024) NULL,
	TIME_FORMAT          VARCHAR(1024) NULL,
	TIMESTAMP_FORMAT     VARCHAR(1024) NULL,
	TRIM_SPACE           CHAR(1) NULL,
	URL                  VARCHAR(1024) NULL,
	USE_EXISTING_FILE_FORMAT CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATE_UTF8        CHAR(1) NULL
);

ALTER TABLE STAGE
ADD PRIMARY KEY (ID@);

CREATE TABLE STAGE_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STAGE_TAG_REF        INTEGER NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE STAGE_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE STATISTICS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FROM_CLAUSE          VARCHAR(1024) NULL,
	FULL_SCAN            CHAR(1) NULL,
	IS_MAXINTERVALS_FOR_CURRENT CHAR(1) NULL,
	IS_MAXVALUELENGTH_FOR_CURRENT CHAR(1) NULL,
	IS_ON_MATERIALIZED_INSTANCE CHAR(1) NULL,
	IS_SAMPLE_FOR_CURRENT CHAR(1) NULL,
	IS_SUMMARY           CHAR(1) NULL,
	IS_THRESHOLD_DAYS_FOR_CURRENT CHAR(1) NULL,
	IS_THRESHOLD_FOR_CURRENT CHAR(1) NULL,
	IS_THRESHOLD_PERCENT_FOR_CURRENT CHAR(1) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	KEY_GROUP_REF        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PERSIST_SAMPLE_PERCENT CHAR(1) NULL,
	SQLSERVER_KEEP_EXISTING_STATISTICS CHAR(1) NULL,
	SQLSERVER_MAX_PARALLEL INTEGER NULL,
	SQLSERVER_STATISTICS_INCREMENTAL CHAR(1) NULL,
	SAMPLE_NUMBER        VARCHAR(1024) NULL,
	SAMPLE_TYPE          INTEGER NULL,
	STATISTICS_REF       INTEGER NULL,
	USE_PARTITION_COLUMNS CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USING_MAXINTERVALS   INTEGER NULL,
	USING_MAXVALUELENGTH INTEGER NULL,
	USING_NO_SAMPLE      CHAR(1) NULL,
	USING_NO_THRESHOLD   INTEGER NULL,
	USING_NUMBER_DAYS_THRESHOLD INTEGER NULL,
	USING_NUMBER_PERCENT_THRESHOLD VARCHAR(1024) NULL,
	USING_SAMPLE         CHAR(1) NULL,
	USING_SAMPLE_PERCENT VARCHAR(1024) NULL,
	USING_SYSTEM_MAXINTERVALS CHAR(1) NULL,
	USING_SYSTEM_MAXVALUELENGTH CHAR(1) NULL,
	USING_SYSTEM_SAMPLE  CHAR(1) NULL,
	USING_SYSTEM_THRESHOLD INTEGER NULL,
	WHERE_CLAUSE         VARCHAR(1024) NULL
);

ALTER TABLE STATISTICS
ADD PRIMARY KEY (ID@);

CREATE TABLE STATISTICS_COLUMN_EXPRESSION
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE STATISTICS_COLUMN_EXPRESSION
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE STORAGE_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_VSAM_CATALOG     VARCHAR(1024) NULL,
	DATA_CLASS           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	MANAGEMENT_CLASS     VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STORAGE_CLASS        VARCHAR(1024) NULL,
	UDB_STORAGE_DATA_TAG VARCHAR(1024) NULL,
	UDB_STORAGE_DEFAULT  CHAR(1) NULL,
	UDB_STORAGE_DEVICE_READ_RATE VARCHAR(1024) NULL,
	UDB_STORAGE_OVERHEAD VARCHAR(1024) NULL,
	UDB_STORAGE_PATH     VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE STORAGE_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE STORAGE_INTEGRATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_STORAGE_INTEGRATION_ENABLED CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STORAGE_ACCOUNT_PROVIDER INTEGER NULL,
	STORAGE_ALLOWED_LOCATIONS VARCHAR(1024) NULL,
	STORAGE_AWS_ROLE_ARN VARCHAR(1024) NULL,
	STORAGE_BLOCKED_LOCATIONS VARCHAR(1024) NULL,
	TENANT_ID            VARCHAR(1024) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE STORAGE_INTEGRATION
ADD PRIMARY KEY (ID@);

CREATE TABLE STORED_PROCEDURE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AS_PROCEDURE_DEFINITION VARCHAR(32000) NULL,
	AUTO_BIND_TO_NEW     CHAR(1) NULL,
	CALL_RETURN_TYPE     INTEGER NULL,
	CLASS_NAME           VARCHAR(1024) NULL,
	COMMIT_TRANSACTION_ON_RETURN CHAR(1) NULL,
	CONSTRAINT_NOT_NULL  CHAR(1) NULL,
	DB2_APPLICATION_ENCODING_SCHEME INTEGER NULL,
	DB2_CPU_SERVICE_TIME_LIMIT INTEGER NULL,
	DB2_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	DB2_CURSOR_FOR_UPDATE_CLAUSE_MODE INTEGER NULL,
	DB2_DATE_FORMAT      INTEGER NULL,
	DB2_DEBUG_MODE       INTEGER NULL,
	DB2_DECIMAL_ARITHMETIC_PRECISION VARCHAR(1024) NULL,
	DB2_DETERMINE_ACCESS_PATH_MODE INTEGER NULL,
	DB2_DYNAMIC_RULES_MODE INTEGER NULL,
	DB2_EXTERNAL_SECURITY_TYPE INTEGER NULL,
	DB2_FAILURE_LIMIT    INTEGER NULL,
	DB2_FAILURE_STOP_TYPE INTEGER NULL,
	DB2_FLOAT_DATA_ROUNDING_MODE INTEGER NULL,
	DB2_IS_EXPLAIN_PLAN_PROVIDED CHAR(1) NULL,
	DB2_IS_PREPARE_DEFERRED CHAR(1) NULL,
	DB2_ISOLATION_LEVEL  INTEGER NULL,
	DB2_KEEP_DYNAMIC_SQL_ON_COMMIT CHAR(1) NULL,
	DB2_LANGUAGE         INTEGER NULL,
	DB2_OPTIMIZATION_HINT VARCHAR(1024) NULL,
	DB2_PACKAGE_COLLECTION_ID VARCHAR(1024) NULL,
	DB2_PACKAGE_OWNER_REF INTEGER NULL,
	DB2_PACKAGE_PATH     VARCHAR(32000) NULL,
	DB2_PARAMETER_STYLE  INTEGER NULL,
	DB2_PARAMETER_VARCHAR_FORM INTEGER NULL,
	DB2_QUALIFIER_SCHEMA_REF INTEGER NULL,
	DB2_RELEASE_RESOURCE_POINT INTEGER NULL,
	DB2_REMAIN_RESIDENT_IN_MEMORY CHAR(1) NULL,
	DB2_RUNTIME_OPTIONS  VARCHAR(4000) NULL,
	DB2_SQL_PATH_TYPE    INTEGER NULL,
	DB2_SPECIAL_REGISTER_USAGE INTEGER NULL,
	DB2_TIME_FORMAT      INTEGER NULL,
	DB2_TYPE             INTEGER NULL,
	DB2_USE_CPU_SERVICE_TIME_LIMIT CHAR(1) NULL,
	DB2_USE_DATA_CURRENCY CHAR(1) NULL,
	DB2_USE_IMMEDIATE_WRITE CHAR(1) NULL,
	DB2_USE_PACKAGE_COLLECTION CHAR(1) NULL,
	DB2_USE_PACKAGE_PATH CHAR(1) NULL,
	DB2_VALIDATE_OBJECTS_AND_PRIVILEGES INTEGER NULL,
	DB2_VERSION_ID       VARCHAR(1024) NULL,
	DB2_WORKLOAD_MANAGER_ENVIRONMENT VARCHAR(1024) NULL,
	DB2_WORKLOAD_MANAGER_ENVIRONMENT_FOR_DEBUG VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DATE_FIRST           INTEGER NULL,
	DATE_FORMAT          VARCHAR(1024) NULL,
	DELAYED_DURABILITY   INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DYNAMIC_RESULT_SETS  INTEGER NULL,
	EDITIONABLE          CHAR(1) NULL,
	EXECUTES_AUTONOMOUSLY CHAR(1) NULL,
	EXECUTION_TYPE       INTEGER NULL,
	EXTERNAL_NAME        VARCHAR(1024) NULL,
	FILE_REF             INTEGER NULL,
	GENERATE_AS_PRE_SCRIPT CHAR(1) NULL,
	GLOBAL_PERSISTENT_DATA_SET_REF INTEGER NULL,
	GOOGLE_BIGQUERY_DATABASE_REF INTEGER NULL,
	GOOGLEBIGQUERY_PROCEDURE_BODY VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_PROCEDURE_STRICT_MODE INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_ACTIVE_VERSION    CHAR(1) NULL,
	IS_DETERMINISTIC     CHAR(1) NULL,
	IS_EXTERNAL_ACTION_ALLOWED CHAR(1) NULL,
	IS_FENCED            CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	IS_PARALLEL_PROCESSING_ALLOWED CHAR(1) NULL,
	IS_SECURE            CHAR(1) NULL,
	IS_THREAD_SAFE       CHAR(1) NULL,
	LANGUAGE             VARCHAR(1024) NULL,
	LANUGUAGE_TYPE       INTEGER NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_SPROC_DEFINER VARCHAR(1024) NULL,
	MARIADB_SPROC_IS_DETERMINISTIC CHAR(1) NULL,
	MARIADB_SPROC_SQL_SECURITY INTEGER NULL,
	METHOD_NAME          VARCHAR(1024) NULL,
	MODULE_REF           INTEGER NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_SPROC_DEFINER  VARCHAR(1024) NULL,
	MYSQL_SPROC_IS_DETERMINISTIC CHAR(1) NULL,
	MYSQL_SPROC_SQL_SECURITY INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NULL_INPUT           INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	PROGRAM_TYPE         INTEGER NULL,
	RESULT_SET_RETURNED_TO INTEGER NULL,
	RETURN_DATA_TYPE     VARCHAR(1024) NULL,
	RETURN_TYPE_OPTIONS  INTEGER NULL,
	SQL_DATA_ACCESS      INTEGER NULL,
	SQLSERVER_ASSEMBLY_REF INTEGER NULL,
	SQLSERVER_CODE_TYPE  INTEGER NULL,
	SQLSERVER_EXECUTE_AS_MODE INTEGER NULL,
	SQLSERVER_EXECUTE_AS_PRINCIPAL_REF INTEGER NULL,
	SQLSERVER_IS_OBFUSCATED CHAR(1) NULL,
	SQLSERVER_METHOD_NAME VARCHAR(1024) NULL,
	SQLSERVER_RECOMPILE  CHAR(1) NULL,
	SQLSERVER_STARTUP    CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SHARING              INTEGER NULL,
	SPECIFIC_NAME        VARCHAR(1024) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TERADATA_COMPILE     INTEGER NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_DEBUG       CHAR(1) NULL,
	TERADATA_DELIMITER   VARCHAR(1024) NULL,
	TERADATA_DYNAMIC_RESULT_SETS INTEGER NULL,
	TERADATA_ENTRY_POINT_NAME VARCHAR(1024) NULL,
	TERADATA_EXECUTE     INTEGER NULL,
	TERADATA_EXTERNAL_NAME VARCHAR(1024) NULL,
	TERADATA_EXTERNAL_SECURITY_AUTHORIZATION_REF INTEGER NULL,
	TERADATA_EXTERNAL_SECURITY_TYPE INTEGER NULL,
	TERADATA_LANGUAGE    INTEGER NULL,
	TERADATA_PARAMETER_STYLE INTEGER NULL,
	TERADATA_RETURN_WARNINGS CHAR(1) NULL,
	TERADATA_SQL_SECURITY_MODE INTEGER NULL,
	TERADATA_STORE_SOURCE CHAR(1) NULL,
	TERADATA_TYPE        INTEGER NULL,
	TRANSACTION_ISOLATION_LEVEL INTEGER NULL,
	TYPE                 INTEGER NULL,
	UDB_CODED_CHARACTER_SET_IDENTIFIER INTEGER NULL,
	UDB_LANGUAGE         INTEGER NULL,
	UDB_PARAMETER_STYLE  INTEGER NULL,
	UDB_SERVER_REF       INTEGER NULL,
	UDB_SOURCE_NUMBER_OF_PARAMETERS INTEGER NULL,
	UDB_SOURCE_OBJECT_ID VARCHAR(4000) NULL,
	UDB_SOURCE_OBJECT_PACKAGE_NAME VARCHAR(1024) NULL,
	UDB_SOURCE_OBJECT_SCHEMA_NAME VARCHAR(1024) NULL,
	UDB_SOURCE_PROCEDURE_NAME VARCHAR(1024) NULL,
	UDB_SPECIAL_REGISTER_USAGE INTEGER NULL,
	UDB_TYPE             INTEGER NULL,
	UDB_USE_NEW_SAVEPOINT_LEVEL CHAR(1) NULL,
	USE_ALTER_SYNTAX     CHAR(1) NULL,
	USE_CALLING_PROCEDURE_ENVIRONMENT CHAR(1) NULL,
	USE_DB_INFO          CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VOLATILE_OR_IMMUTABLE INTEGER NULL
);

ALTER TABLE STORED_PROCEDURE
ADD PRIMARY KEY (ID@);

CREATE TABLE STORED_PROCEDURES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE STORED_PROCEDURES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE STREAM
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CLONE_STREAM         VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_APPEND            CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SF_COPY_GRANTS       CHAR(1) NULL,
	SCHEMA_REF           INTEGER NULL,
	SHOW_INITIAL_ROWS    CHAR(1) NULL,
	SNOWFLAKE_SCHEMA_REF INTEGER NULL,
	TABLE_NAME_REF       INTEGER NULL,
	TIME_AT_BEFORE       INTEGER NULL,
	TIME_POINT           VARCHAR(1024) NULL,
	TIME_POINT_TYPE      INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE STREAM
ADD PRIMARY KEY (ID@);

CREATE TABLE STYLE_LIBRARY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	NEW_THEME_REF        INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE STYLE_LIBRARY
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON STYLE_LIBRARY
(
	OWNER@
);

CREATE TABLE SUBJECT_AREA
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTHOR               VARCHAR(1024) NULL,
	AUTO_POPULATE_WITH_ALL_OBJECTS CHAR(1) NULL,
	BUILT_IN_ID_ARCHIVE  INTEGER NULL,
	CREATION_TIME        TIMESTAMP NULL,
	CURRENT_ER_DIAGRAM_REF INTEGER NULL,
	FILTER_DANGLING_RELATIONSHIPS_FROM_FE CHAR(1) NULL,
	IS_MAIN_SUBJECT_AREA CHAR(1) NULL,
	MODIFICATION_TIME    TIMESTAMP NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	THEME_REF            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SUBJECT_AREA
ADD PRIMARY KEY (ID@);

CREATE TABLE SUBSCRIBERS@
(
	ID@                  INTEGER NOT NULL,
	REFERENCE@           INTEGER NOT NULL
);

ALTER TABLE SUBSCRIBERS@
ADD PRIMARY KEY (ID@,REFERENCE@);

CREATE TABLE SUBTYPE_SYMBOL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CONSTRAINT    VARCHAR(1024) NULL,
	SSTRANSFORMATION_TYPE INTEGER NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SUBTYPE_DISCRIMINATOR_REF INTEGER NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	THEME_REF            INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SUBTYPE_SYMBOL
ADD PRIMARY KEY (ID@);

CREATE TABLE SUBTYPE_SYMBOL_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SUBTYPE_SYMBOL_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SYBASE_SEGMENT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SYBASE_SEGMENT
ADD PRIMARY KEY (ID@);

CREATE TABLE SYMMETRIC_KEYS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SYMMETRIC_KEYS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SYNAPSE_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COLLATION_NAME       VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SYNAPSE_EDITION      VARCHAR(1024) NULL,
	SYNAPSE_MAX_SIZE     INTEGER NULL,
	SYNAPSE_SERVICE_OBJECTIVE INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SYNAPSE_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE SYNCH_PROPERTIES_LIST
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SYNCH_PROPERTIES_LIST
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE SYNONYM
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_GEN_AS_SYNONYM   CHAR(1) NULL,
	DB2_SYNONYM_DATABASE VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EDITIONABLE          CHAR(1) NULL,
	INFORMIX_SYNONYM_DATABASE VARCHAR(1024) NULL,
	IS_PUBLIC            CHAR(1) NULL,
	LABEL                VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_DATABASE_LINK_REF INTEGER NULL,
	ORACLE_IS_PUBLIC_SYNONYM CHAR(1) NULL,
	ORACLE_SYNONYM_SHARING INTEGER NULL,
	REMOTE_OBJECT_NAME   VARCHAR(1024) NULL,
	REMOTE_OBJECT_OWNER  VARCHAR(1024) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE SYNONYM
ADD PRIMARY KEY (ID@);

CREATE TABLE SYSTEM_USER_CONNECTION_VALUES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE SYSTEM_USER_CONNECTION_VALUES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_TABLE_PERMISSIONS INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE TABLESPACE_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TABLESPACE_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE TABLESPACE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_TABLESPACE_PERMISSIONS INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TABLESPACE_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE TAG_DBMS_BRANDS_AND_VERSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TAG_DBMS_BRANDS_AND_VERSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TAG_DBMS_IS_REPRESENTED
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TAG_DBMS_IS_REPRESENTED
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TAG_DBMS_IS_TOP_LEVEL_OBJECT
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TAG_DBMS_IS_TOP_LEVEL_OBJECT
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TAG_VSDB_BRANDS_AND_VERSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TAG_VSDB_BRANDS_AND_VERSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TARGET_SERVER_AND_VERSION
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TARGET_SERVER_AND_VERSION
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TASK
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ABORT_DETACHED_QUERY CHAR(1) NULL,
	AFTER_TASK_REF       INTEGER NULL,
	AUTO_COMMIT          CHAR(1) NULL,
	CLONE_TASK           VARCHAR(1024) NULL,
	DATE_INPUT_FORMAT    VARCHAR(1024) NULL,
	DATE_OUTPUT_FORMAT   VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ERROR_ON_NONDETERMINISTIC_MERGE CHAR(1) NULL,
	ERROR_ON_NONDETERMINISTIC_UPDATE CHAR(1) NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	LOCK_TIMEOUT         VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	QUERY_TAG            VARCHAR(1024) NULL,
	ROWS_PER_RESULTSET   VARCHAR(1024) NULL,
	SF_COPY_GRANTS       CHAR(1) NULL,
	SCHEDULE_TIME        VARCHAR(1024) NULL,
	SCHEDULE_TYPE        INTEGER NULL,
	SCHEMA_REF           INTEGER NULL,
	SQL_STATEMENT        VARCHAR(32000) NULL,
	STATEMENT_TIMEOUT_IN_SECONDS VARCHAR(1024) NULL,
	STREAM_REF           INTEGER NULL,
	TIME_INPUT_FORMAT    VARCHAR(1024) NULL,
	TIME_OUTPUT_FORMAT   VARCHAR(1024) NULL,
	TIMESTAMP_DAY_IS_ALWAYS_24H CHAR(1) NULL,
	TIMESTAMP_INPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_LTZ_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_NTZ_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_TZ_OUTPUT_FORMAT VARCHAR(1024) NULL,
	TIMESTAMP_TYPE_MAPPING VARCHAR(1024) NULL,
	TIMEZONE             VARCHAR(1024) NULL,
	TRANSACTION_DEFAULT_ISOLATION_LEVEL VARCHAR(1024) NULL,
	TWO_DIGIT_CENTURY_START VARCHAR(1024) NULL,
	UNSUPPORTED_DDL_ACTION VARCHAR(1024) NULL,
	USE_CASHED_RESULT    CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_TASK_TIMEOUT_MS VARCHAR(1024) NULL,
	WAREHOUSE_REF        INTEGER NULL,
	WHEN_BOOLEAN_EXPRESSION INTEGER NULL
);

ALTER TABLE TASK
ADD PRIMARY KEY (ID@);

CREATE TABLE TASK_SESSION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARAMETER_VALUE      VARCHAR(1024) NULL,
	SESSION_PARAMETER    VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TASK_SESSION
ADD PRIMARY KEY (ID@);

CREATE TABLE TASK_SESSION_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TASK_SESSION_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TEMPLATE_OBJECT
(
	IS_METADATA          CHAR(1) NOT NULL,
	ID@                  INTEGER NULL,
	LONG_ID              CHAR(67) NOT NULL,
	TYPE@                INTEGER NULL,
	TYPE_NAME            VARCHAR(1024) NULL,
	NAME                 VARCHAR(1024) NULL,
	STATUS               CHAR(15) NOT NULL,
	OWNER_PATH           VARCHAR(4000) NULL,
	OWNER_PATH2          VARCHAR(4000) NULL,
	IS_AUTO_CREATED      CHAR(1) NULL
);

CREATE TABLE TERADATA_ACCOUNT_IDS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_ACCOUNT_IDS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_AUTHORIZATION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTHORIZATION_TYPE   INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OS_DOMAIN            VARCHAR(1024) NULL,
	OS_USER              VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_AUTHORIZATION
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_AUTHORIZATION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_AUTHORIZATION_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_COLUMN_PARTITION_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_AUTO_COMPRESS     CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_COLUMN_PARTITION_ALL_BUT CHAR(1) NULL,
	TERADATA_COLUMN_PARTITION_STORAGE_FORMAT INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_COLUMN_PARTITION_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_COLUMN_PARTITION_GROUPS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_COLUMN_PARTITION_GROUPS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_DATABASE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FROM_TERADATA_DATABASE_REF INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PERMANENT_STORAGE_SIZE VARCHAR(1024) NULL,
	SPOOL_FILE_SIZE      VARCHAR(1024) NULL,
	TEMPORARY_TABLE_SIZE VARCHAR(1024) NULL,
	TERADATA_AFTER_JOURNAL_IMAGE INTEGER NULL,
	TERADATA_BEFORE_JOURNAL_IMAGE INTEGER NULL,
	TERADATA_DB_ACCOUNT  VARCHAR(1024) NULL,
	TERADATA_DEFJOURNAL  VARCHAR(1024) NULL,
	TERADATA_FALLBACK    VARCHAR(1024) NULL,
	TERADATA_FALLBACK_PROTECTION INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE TERADATA_DATABASE
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_FUNCTION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_FUNCTION_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_GLOP_SET_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_GLOP_SET_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_HASH_INDEX_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_HASH_INDEX_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_JOIN_INDEX_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_JOIN_INDEX_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_MACRO_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_MACRO_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_MONITOR_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_MONITOR_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_NORMALIZE_IGNORE_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_NORMALIZE_IGNORE_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_ORDER_BY_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_ORDER_BY_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_PATITIONED_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_PATITIONED_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_PRIMARY_INDEX_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_PRIMARY_INDEX_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_PROFILE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALLOW_RESTRICTED_WORDS_FOR_PASSWORD CHAR(1) NULL,
	ALLOW_USERNAME_IN_PASSWORD CHAR(1) NULL,
	COST_PROFILE         VARCHAR(1024) NULL,
	DEFAULT_TERADATA_DATABASE_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PASSWORD_DAYS_BEFORE_REUSE INTEGER NULL,
	PASSWORD_DAYS_TO_EXPIRE INTEGER NULL,
	PASSWORD_MAX_CHARACTERS INTEGER NULL,
	PASSWORD_MAX_LOGON_ATTEMPTS INTEGER NULL,
	PASSWORD_MIN_CHARACTERS INTEGER NULL,
	PASSWORD_MINUTES_TO_UNLOCK_USER INTEGER NULL,
	PASSWORD_SPECIAL_CHARACTER_MODE INTEGER NULL,
	REQUIRE_PASSWORD_ALPHAS CHAR(1) NULL,
	REQUIRE_PASSWORD_DIGITS INTEGER NULL,
	REQUIRE_PASSWORD_MIXED_CASE CHAR(1) NULL,
	SPECIAL_CHARACTERS_FOR_PASSWORD_MODE INTEGER NULL,
	SPOOL_FILE_SIZE      VARCHAR(1024) NULL,
	TEMPORARY_TABLE_SIZE VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_PROFILE
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_REPLICATION_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_REPLICATION_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_REPLICATION_RULE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	LIKE_CLAUSE          VARCHAR(4000) NULL,
	LIKE_ESCAPE_CHARACTER VARCHAR(1024) NULL,
	NOT_LIKE_CLAUSE      VARCHAR(4000) NULL,
	NOT_LIKE_ESCAPE_CHARACTER VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_TYPE          INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_REPLICATION_RULE
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_REPLICATION_RULE_SET
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DEFAULT           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_REPLICATION_GROUP_REF INTEGER NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_REPLICATION_RULE_SET
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_ROLE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_EXTERNAL          CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_ROLE
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_SECURE_ZONE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_SECURE_ZONE
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_SECURE_ZONE_ROOT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TERADATA_SECURE_ZONE_ROOT
ADD PRIMARY KEY (ID@);

CREATE TABLE TERADATA_SERVER_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_SERVER_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_STORED_PROCEDURE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_STORED_PROCEDURE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_TYPE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_TYPE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_UDT_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_UDT_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_USER_ID_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_USER_ID_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TERADATA_VIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TERADATA_VIEW_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE THEME
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ANNOTATION_FILL_COLOR1 INTEGER NULL,
	ANNOTATION_FILL_COLOR2 INTEGER NULL,
	ANNOTATION_FILL_GRADIENT_SLOPE INTEGER NULL,
	ANNOTATION_FILL_GRADIENT_STYLE INTEGER NULL,
	ANNOTATION_FILL_IMAGE_REF INTEGER NULL,
	ANNOTATION_FILL_IMAGE_STYLE INTEGER NULL,
	ANNOTATION_FILL_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_FILL_PATTERN_STYLE INTEGER NULL,
	ANNOTATION_FILL_STYLE INTEGER NULL,
	ANNOTATION_FILL_TRANSPARENCY INTEGER NULL,
	ANNOTATION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ANNOTATION_FONT_COLOR INTEGER NULL,
	ANNOTATION_FONT_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_FONT_NAME VARCHAR(1024) NULL,
	ANNOTATION_FONT_SIZE INTEGER NULL,
	ANNOTATION_FONT_STRIKETHROUGH CHAR(1) NULL,
	ANNOTATION_FONT_UNDERSCORE CHAR(1) NULL,
	ANNOTATION_IS_FONT_BOLD CHAR(1) NULL,
	ANNOTATION_IS_FONT_ITALIC CHAR(1) NULL,
	ANNOTATION_LINE_COLOR INTEGER NULL,
	ANNOTATION_LINE_CURVE_STYLE INTEGER NULL,
	ANNOTATION_LINE_CURVE_TENSION DOUBLE NULL,
	ANNOTATION_LINE_DASH_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_END_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_LINE_START_CAP_STYLE INTEGER NULL,
	ANNOTATION_LINE_STYLE INTEGER NULL,
	ANNOTATION_LINE_WIDTH INTEGER NULL,
	ANNOTATION_OUTLINE_COLOR INTEGER NULL,
	ANNOTATION_OUTLINE_CURVE_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ANNOTATION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ANNOTATION_OUTLINE_STYLE INTEGER NULL,
	ANNOTATION_OUTLINE_WIDTH INTEGER NULL,
	ANNOTATION_TEXT_HANDLING_STYLE INTEGER NULL,
	ANNOTATION_TEXT_HORIZONTAL_ALIGNMENT INTEGER NULL,
	ANNOTATION_TEXT_SLOPE INTEGER NULL,
	ANNOTATION_TEXT_VERTICAL_ALIGNMENT INTEGER NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_ALTERNATE_KEY_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_ALTERNATE_KEY_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_ALTERNATE_KEY_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_FILL_COLOR1 INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_COLOR2 INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_GRADIENT_SLOPE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_GRADIENT_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_IMAGE_REF INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_IMAGE_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FILL_PATTERN_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FILL_TRANSPARENCY INTEGER NULL,
	CACHED_VIEW_DEFINITION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_DEFINITION_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_DEFINITION_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_COLOR INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_CURVE_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_STYLE INTEGER NULL,
	CACHED_VIEW_DEFINITION_OUTLINE_WIDTH INTEGER NULL,
	CACHED_VIEW_EXPRESSION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_EXPRESSION_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_EXPRESSION_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_EXPRESSION_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_EXPRESSION_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_EXPRESSION_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_EXPRESSION_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_EXPRESSION_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_EXPRESSION_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_FILL_COLOR1 INTEGER NULL,
	CACHED_VIEW_FILL_COLOR2 INTEGER NULL,
	CACHED_VIEW_FILL_GRADIENT_SLOPE INTEGER NULL,
	CACHED_VIEW_FILL_GRADIENT_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_IMAGE_REF INTEGER NULL,
	CACHED_VIEW_FILL_IMAGE_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_FILL_PATTERN_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_STYLE INTEGER NULL,
	CACHED_VIEW_FILL_TRANSPARENCY INTEGER NULL,
	CACHED_VIEW_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_INVERSION_ENTRY_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_IS_FONT_ITALIC CHAR(1) NULL,
	CACHED_VIEW_KEY_DISPLAY_STYLE_TYPE INTEGER NULL,
	CACHED_VIEW_OUTLINE_COLOR INTEGER NULL,
	CACHED_VIEW_OUTLINE_CURVE_STYLE INTEGER NULL,
	CACHED_VIEW_OUTLINE_CURVE_TENSION DOUBLE NULL,
	CACHED_VIEW_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	CACHED_VIEW_OUTLINE_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_OUTLINE_STYLE INTEGER NULL,
	CACHED_VIEW_OUTLINE_WIDTH INTEGER NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	CACHED_VIEW_OWNED_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL,
	ER_DIAGRAM_FILL_COLOR1 INTEGER NULL,
	ER_DIAGRAM_FILL_COLOR2 INTEGER NULL,
	ER_DIAGRAM_FILL_GRADIENT_SLOPE INTEGER NULL,
	ER_DIAGRAM_FILL_GRADIENT_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_IMAGE_REF INTEGER NULL,
	ER_DIAGRAM_FILL_IMAGE_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_MONIKER VARCHAR(1024) NULL,
	ER_DIAGRAM_FILL_PATTERN_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_STYLE INTEGER NULL,
	ER_DIAGRAM_FILL_TRANSPARENCY INTEGER NULL,
	ENTITY_ALTERNATE_KEY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_ALTERNATE_KEY_FONT_COLOR INTEGER NULL,
	ENTITY_ALTERNATE_KEY_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_ALTERNATE_KEY_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_ALTERNATE_KEY_FONT_SIZE INTEGER NULL,
	ENTITY_ALTERNATE_KEY_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_ALTERNATE_KEY_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_ALTERNATE_KEY_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_ALTERNATE_KEY_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_DEFINITION_FILL_COLOR1 INTEGER NULL,
	ENTITY_DEFINITION_FILL_COLOR2 INTEGER NULL,
	ENTITY_DEFINITION_FILL_GRADIENT_SLOPE INTEGER NULL,
	ENTITY_DEFINITION_FILL_GRADIENT_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_IMAGE_REF INTEGER NULL,
	ENTITY_DEFINITION_FILL_IMAGE_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_MONIKER VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FILL_PATTERN_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_STYLE INTEGER NULL,
	ENTITY_DEFINITION_FILL_TRANSPARENCY INTEGER NULL,
	ENTITY_DEFINITION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FONT_COLOR INTEGER NULL,
	ENTITY_DEFINITION_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_DEFINITION_FONT_SIZE INTEGER NULL,
	ENTITY_DEFINITION_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_DEFINITION_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_DEFINITION_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_DEFINITION_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_DEFINITION_OUTLINE_COLOR INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_CURVE_STYLE INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ENTITY_DEFINITION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ENTITY_DEFINITION_OUTLINE_STYLE INTEGER NULL,
	ENTITY_DEFINITION_OUTLINE_WIDTH INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_COLOR_INHERITANCE_TYPE INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_INHERITANCE_TYPE INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	ENTITY_FK_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_FK_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_FK_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_FK_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_FILL_COLOR1   INTEGER NULL,
	ENTITY_FILL_COLOR2   INTEGER NULL,
	ENTITY_FILL_GRADIENT_SLOPE INTEGER NULL,
	ENTITY_FILL_GRADIENT_STYLE INTEGER NULL,
	ENTITY_FILL_IMAGE_REF INTEGER NULL,
	ENTITY_FILL_IMAGE_STYLE INTEGER NULL,
	ENTITY_FILL_MONIKER  VARCHAR(1024) NULL,
	ENTITY_FILL_PATTERN_STYLE INTEGER NULL,
	ENTITY_FILL_STYLE    INTEGER NULL,
	ENTITY_FILL_TRANSPARENCY INTEGER NULL,
	ENTITY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_FONT_COLOR    INTEGER NULL,
	ENTITY_FONT_MONIKER  VARCHAR(1024) NULL,
	ENTITY_FONT_NAME     VARCHAR(1024) NULL,
	ENTITY_FONT_SIZE     INTEGER NULL,
	ENTITY_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_INVERSION_ENTRY_FONT_COLOR INTEGER NULL,
	ENTITY_INVERSION_ENTRY_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_INVERSION_ENTRY_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_INVERSION_ENTRY_FONT_SIZE INTEGER NULL,
	ENTITY_INVERSION_ENTRY_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_INVERSION_ENTRY_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_IS_FONT_BOLD  CHAR(1) NULL,
	ENTITY_IS_FONT_ITALIC CHAR(1) NULL,
	ENTITY_KEY_DISPLAY_STYLE_TYPE INTEGER NULL,
	ENTITY_OUTLINE_COLOR INTEGER NULL,
	ENTITY_OUTLINE_CURVE_STYLE INTEGER NULL,
	ENTITY_OUTLINE_CURVE_TENSION DOUBLE NULL,
	ENTITY_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	ENTITY_OUTLINE_MONIKER VARCHAR(1024) NULL,
	ENTITY_OUTLINE_STYLE INTEGER NULL,
	ENTITY_OUTLINE_WIDTH INTEGER NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	ENTITY_OWNED_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	ENTITY_OWNED_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	ENTITY_OWNED_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL,
	GENERAL_FILL_COLOR1  INTEGER NULL,
	GENERAL_FILL_COLOR2  INTEGER NULL,
	GENERAL_FILL_GRADIENT_SLOPE INTEGER NULL,
	GENERAL_FILL_GRADIENT_STYLE INTEGER NULL,
	GENERAL_FILL_IMAGE_REF INTEGER NULL,
	GENERAL_FILL_IMAGE_STYLE INTEGER NULL,
	GENERAL_FILL_MONIKER VARCHAR(1024) NULL,
	GENERAL_FILL_PATTERN_STYLE INTEGER NULL,
	GENERAL_FILL_STYLE   INTEGER NULL,
	GENERAL_FILL_TRANSPARENCY INTEGER NULL,
	GENERAL_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	GENERAL_FONT_COLOR   INTEGER NULL,
	GENERAL_FONT_MONIKER VARCHAR(1024) NULL,
	GENERAL_FONT_NAME    VARCHAR(1024) NULL,
	GENERAL_FONT_SIZE    INTEGER NULL,
	GENERAL_FONT_STRIKETHROUGH CHAR(1) NULL,
	GENERAL_FONT_UNDERSCORE CHAR(1) NULL,
	GENERAL_IS_FONT_BOLD CHAR(1) NULL,
	GENERAL_IS_FONT_ITALIC CHAR(1) NULL,
	GENERAL_LINE_COLOR   INTEGER NULL,
	GENERAL_LINE_CURVE_STYLE INTEGER NULL,
	GENERAL_LINE_CURVE_TENSION DOUBLE NULL,
	GENERAL_LINE_DASH_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_END_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_MONIKER VARCHAR(1024) NULL,
	GENERAL_LINE_START_CAP_STYLE INTEGER NULL,
	GENERAL_LINE_STYLE   INTEGER NULL,
	GENERAL_LINE_WIDTH   INTEGER NULL,
	GENERAL_OUTLINE_COLOR INTEGER NULL,
	GENERAL_OUTLINE_CURVE_STYLE INTEGER NULL,
	GENERAL_OUTLINE_CURVE_TENSION DOUBLE NULL,
	GENERAL_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	GENERAL_OUTLINE_MONIKER VARCHAR(1024) NULL,
	GENERAL_OUTLINE_STYLE INTEGER NULL,
	GENERAL_OUTLINE_WIDTH INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	RELATIONSHIP_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	RELATIONSHIP_FONT_COLOR INTEGER NULL,
	RELATIONSHIP_FONT_INHERITED_FROM_PARENT CHAR(1) NULL,
	RELATIONSHIP_FONT_MONIKER VARCHAR(1024) NULL,
	RELATIONSHIP_FONT_NAME VARCHAR(1024) NULL,
	RELATIONSHIP_FONT_SIZE INTEGER NULL,
	RELATIONSHIP_FONT_STRIKETHROUGH CHAR(1) NULL,
	RELATIONSHIP_FONT_UNDERSCORE CHAR(1) NULL,
	RELATIONSHIP_IS_FONT_BOLD CHAR(1) NULL,
	RELATIONSHIP_IS_FONT_ITALIC CHAR(1) NULL,
	RELATIONSHIP_LINE_COLOR INTEGER NULL,
	RELATIONSHIP_LINE_COLOR_INHERITED_FROM_PARENT CHAR(1) NULL,
	RELATIONSHIP_LINE_CURVE_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_CURVE_TENSION DOUBLE NULL,
	RELATIONSHIP_LINE_DASH_CAP_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_END_CAP_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_MONIKER VARCHAR(1024) NULL,
	RELATIONSHIP_LINE_START_CAP_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_STYLE INTEGER NULL,
	RELATIONSHIP_LINE_WIDTH INTEGER NULL,
	RELATIONSHIP_TEXT_COLOR_INHERITED_FROM_LINE CHAR(1) NULL,
	SUBTYPE_SYMBOL_FILL_COLOR1 INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_COLOR2 INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_GRADIENT_SLOPE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_GRADIENT_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_IMAGE_REF INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_IMAGE_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_MONIKER VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FILL_PATTERN_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_FILL_TRANSPARENCY INTEGER NULL,
	SUBTYPE_SYMBOL_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FONT_COLOR INTEGER NULL,
	SUBTYPE_SYMBOL_FONT_INHERITED_FROM_PARENT CHAR(1) NULL,
	SUBTYPE_SYMBOL_FONT_MONIKER VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FONT_NAME VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_FONT_SIZE INTEGER NULL,
	SUBTYPE_SYMBOL_FONT_STRIKETHROUGH CHAR(1) NULL,
	SUBTYPE_SYMBOL_FONT_UNDERSCORE CHAR(1) NULL,
	SUBTYPE_SYMBOL_IS_FONT_BOLD CHAR(1) NULL,
	SUBTYPE_SYMBOL_IS_FONT_ITALIC CHAR(1) NULL,
	SUBTYPE_SYMBOL_LINE_COLOR INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_COLOR_INHERITED_FROM_PARENT CHAR(1) NULL,
	SUBTYPE_SYMBOL_LINE_CURVE_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_CURVE_TENSION DOUBLE NULL,
	SUBTYPE_SYMBOL_LINE_DASH_CAP_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_END_CAP_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_MONIKER VARCHAR(1024) NULL,
	SUBTYPE_SYMBOL_LINE_START_CAP_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_STYLE INTEGER NULL,
	SUBTYPE_SYMBOL_LINE_WIDTH INTEGER NULL,
	SUBTYPE_SYMBOL_TEXT_COLOR_INHERITED_FROM_LINE CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_DEFINITION_FILL_COLOR1 INTEGER NULL,
	VIEW_DEFINITION_FILL_COLOR2 INTEGER NULL,
	VIEW_DEFINITION_FILL_GRADIENT_SLOPE INTEGER NULL,
	VIEW_DEFINITION_FILL_GRADIENT_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_IMAGE_REF INTEGER NULL,
	VIEW_DEFINITION_FILL_IMAGE_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_MONIKER VARCHAR(1024) NULL,
	VIEW_DEFINITION_FILL_PATTERN_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_STYLE INTEGER NULL,
	VIEW_DEFINITION_FILL_TRANSPARENCY INTEGER NULL,
	VIEW_DEFINITION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_DEFINITION_FONT_COLOR INTEGER NULL,
	VIEW_DEFINITION_FONT_MONIKER VARCHAR(1024) NULL,
	VIEW_DEFINITION_FONT_NAME VARCHAR(1024) NULL,
	VIEW_DEFINITION_FONT_SIZE INTEGER NULL,
	VIEW_DEFINITION_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_DEFINITION_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_DEFINITION_IS_FONT_BOLD CHAR(1) NULL,
	VIEW_DEFINITION_IS_FONT_ITALIC CHAR(1) NULL,
	VIEW_DEFINITION_OUTLINE_COLOR INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_CURVE_STYLE INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_CURVE_TENSION DOUBLE NULL,
	VIEW_DEFINITION_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_MONIKER VARCHAR(1024) NULL,
	VIEW_DEFINITION_OUTLINE_STYLE INTEGER NULL,
	VIEW_DEFINITION_OUTLINE_WIDTH INTEGER NULL,
	VIEW_EXPRESSION_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_EXPRESSION_FONT_COLOR INTEGER NULL,
	VIEW_EXPRESSION_FONT_MONIKER VARCHAR(1024) NULL,
	VIEW_EXPRESSION_FONT_NAME VARCHAR(1024) NULL,
	VIEW_EXPRESSION_FONT_SIZE INTEGER NULL,
	VIEW_EXPRESSION_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_EXPRESSION_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_EXPRESSION_IS_FONT_BOLD CHAR(1) NULL,
	VIEW_EXPRESSION_IS_FONT_ITALIC CHAR(1) NULL,
	VIEW_FILL_COLOR1     INTEGER NULL,
	VIEW_FILL_COLOR2     INTEGER NULL,
	VIEW_FILL_GRADIENT_SLOPE INTEGER NULL,
	VIEW_FILL_GRADIENT_STYLE INTEGER NULL,
	VIEW_FILL_IMAGE_REF  INTEGER NULL,
	VIEW_FILL_IMAGE_STYLE INTEGER NULL,
	VIEW_FILL_MONIKER    VARCHAR(1024) NULL,
	VIEW_FILL_PATTERN_STYLE INTEGER NULL,
	VIEW_FILL_STYLE      INTEGER NULL,
	VIEW_FILL_TRANSPARENCY INTEGER NULL,
	VIEW_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_FONT_COLOR      INTEGER NULL,
	VIEW_FONT_MONIKER    VARCHAR(1024) NULL,
	VIEW_FONT_NAME       VARCHAR(1024) NULL,
	VIEW_FONT_SIZE       INTEGER NULL,
	VIEW_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_IS_FONT_BOLD    CHAR(1) NULL,
	VIEW_IS_FONT_ITALIC  CHAR(1) NULL,
	VIEW_OUTLINE_COLOR   INTEGER NULL,
	VIEW_OUTLINE_CURVE_STYLE INTEGER NULL,
	VIEW_OUTLINE_CURVE_TENSION DOUBLE NULL,
	VIEW_OUTLINE_DASH_CAP_STYLE INTEGER NULL,
	VIEW_OUTLINE_MONIKER VARCHAR(1024) NULL,
	VIEW_OUTLINE_STYLE   INTEGER NULL,
	VIEW_OUTLINE_WIDTH   INTEGER NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_CHARACTER_SET VARCHAR(1024) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_COLOR INTEGER NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_MONIKER VARCHAR(1024) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_NAME VARCHAR(1024) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_SIZE INTEGER NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_STRIKETHROUGH CHAR(1) NULL,
	VIEW_OWNED_ATTRIBUTE_FONT_UNDERSCORE CHAR(1) NULL,
	VIEW_OWNED_ATTRIBUTE_IS_FONT_BOLD CHAR(1) NULL,
	VIEW_OWNED_ATTRIBUTE_IS_FONT_ITALIC CHAR(1) NULL
);

ALTER TABLE THEME
ADD PRIMARY KEY (ID@);

CREATE TABLE TO_PRINCIPALS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TO_PRINCIPALS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TRANS_COLUMNS_ORDER_SNAPSHOT_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TRANS_COLUMNS_ORDER_SNAPSHOT_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TRANS_MIGRATION_MAPPING
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TRANS_MIGRATION_MAPPING
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TRANS_PHYSICAL_ORDER_SNAPSHOT_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TRANS_PHYSICAL_ORDER_SNAPSHOT_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TRIGGER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CLASS_NAME           VARCHAR(1024) NULL,
	DB2_OBJECT_ID        VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EDITIONABLE          CHAR(1) NULL,
	FUNCTION_REF         INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_VIEWDEFINEROPT VARCHAR(1024) NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_VIEWDEFINEROPT VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	OTHERTRIGGERNAME     VARCHAR(1024) NULL,
	PRECEDESFOLLOWS      INTEGER NULL,
	REFERENCED_TABLE_REF INTEGER NULL,
	RELATIONSHIP_TYPE    INTEGER NULL,
	SQLSERVER_APPLICATION_ROLE_EVENTS INTEGER NULL,
	SQLSERVER_ASSEMBLY_EVENTS INTEGER NULL,
	SQLSERVER_ASSEMBLY_REF INTEGER NULL,
	SQLSERVER_ASYMMETRIC_KEY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_ASYMMETRIC_KEY_EVENTS INTEGER NULL,
	SQLSERVER_AUDIT_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_AUDIT_EVENTS INTEGER NULL,
	SQLSERVER_AUTHORIZATION_DATABASE_EVENTS INTEGER NULL,
	SQLSERVER_AUTHORIZATION_SERVER_EVENTS INTEGER NULL,
	SQLSERVER_BROKER_PRIORITY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_BROKER_PRIORITY_EVENTS INTEGER NULL,
	SQLSERVER_CERTIFICATE_EVENTS INTEGER NULL,
	SQLSERVER_CODE_TYPE  INTEGER NULL,
	SQLSERVER_CONTRACT_EVENTS INTEGER NULL,
	SQLSERVER_CREDENTIAL_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_CREDENTIAL_EVENTS INTEGER NULL,
	SQLSERVER_CRYPTOGRAPHIC_PROVIDER_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_CRYPTOGRAPHIC_PROVIDER_EVENTS INTEGER NULL,
	SQLSERVER_CRYPTOGRAPHIC_SIGNATURE_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_CRYPTOGRAPHIC_SIGNATURE_EVENTS INTEGER NULL,
	SQLSERVER_DATABASE_AUDIT_SPECIFICATION_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_DATABASE_AUDIT_SPECIFICATION_EVENTS INTEGER NULL,
	SQLSERVER_DATABASE_ENCRYPTION_KEY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_DATABASE_ENCRYPTION_KEY_EVENTS INTEGER NULL,
	SQLSERVER_DATABASE_EVENTS INTEGER NULL,
	SQLSERVER_DATABASE_LEVEL_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_DATABASE_LEVEL_EVENTS INTEGER NULL,
	SQLSERVER_DATABASE_SECURITY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_DEFAULT_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_DEFAULT_EVENTS INTEGER NULL,
	SQLSERVER_ENDPOINT_EVENTS INTEGER NULL,
	SQLSERVER_EVENT_NOTIFICATION_EVENTS INTEGER NULL,
	SQLSERVER_EVENT_SESSION_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_EVENT_SESSION_EVENTS INTEGER NULL,
	SQLSERVER_EXECUTE_AS_MODE INTEGER NULL,
	SQLSERVER_EXECUTE_AS_PRINCIPAL_REF INTEGER NULL,
	SQLSERVER_EXTENDED_PROCEDURE_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_EXTENDED_PROCEDURE_EVENTS INTEGER NULL,
	SQLSERVER_EXTENDED_PROPERTY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_EXTENDED_PROPERTY_EVENTS INTEGER NULL,
	SQLSERVER_FULLTEXT_CATALOG_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_FULLTEXT_CATALOG_EVENTS INTEGER NULL,
	SQLSERVER_FULLTEXT_STOP_LIST_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_FULLTEXT_STOP_LIST_EVENTS INTEGER NULL,
	SQLSERVER_FUNCTION_EVENTS INTEGER NULL,
	SQLSERVER_GDR_DATABASE_EVENTS INTEGER NULL,
	SQLSERVER_GDR_SERVER_EVENTS INTEGER NULL,
	SQLSERVER_INDEX_EVENTS INTEGER NULL,
	SQLSERVER_IS_OBFUSCATED CHAR(1) NULL,
	SQLSERVER_LINKED_SERVER_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_LINKED_SERVER_EVENTS INTEGER NULL,
	SQLSERVER_LINKED_SERVER_LOGIN_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_LINKED_SERVER_LOGIN_EVENTS INTEGER NULL,
	SQLSERVER_LOGIN_EVENTS INTEGER NULL,
	SQLSERVER_LOGON_EVENT CHAR(1) NULL,
	SQLSERVER_MASTER_KEY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_MASTER_KEY_EVENTS INTEGER NULL,
	SQLSERVER_MESSAGE_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_MESSAGE_EVENTS INTEGER NULL,
	SQLSERVER_MESSAGE_TYPE_EVENTS INTEGER NULL,
	SQLSERVER_METHOD_NAME VARCHAR(1024) NULL,
	SQLSERVER_PARTITION_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_PARTITION_FUNCTION_EVENTS INTEGER NULL,
	SQLSERVER_PARTITION_SCHEME_EVENTS INTEGER NULL,
	SQLSERVER_PLAN_GUIDE_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_PLAN_GUIDE_EVENTS INTEGER NULL,
	SQLSERVER_PROCEDURE_EVENTS INTEGER NULL,
	SQLSERVER_QUEUE_EVENTS INTEGER NULL,
	SQLSERVER_REMOTE_SERVER_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_REMOTE_SERVER_EVENTS INTEGER NULL,
	SQLSERVER_REMOTE_SERVICE_BINDING_EVENTS INTEGER NULL,
	SQLSERVER_RESOURCE_GOVERNOR_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_RESOURCE_GOVERNOR_EVENTS INTEGER NULL,
	SQLSERVER_RESOURCE_POOL_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_RESOURCE_POOL_EVENTS INTEGER NULL,
	SQLSERVER_ROLE_EVENTS INTEGER NULL,
	SQLSERVER_ROUTE_EVENTS INTEGER NULL,
	SQLSERVER_RULE_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_RULE_EVENTS INTEGER NULL,
	SQLSERVER_SSB_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_SCHEMA_EVENTS INTEGER NULL,
	SQLSERVER_SERVER_AUDIT_SPECIFICATION_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_SERVER_AUDIT_SPECIFICATION_EVENTS INTEGER NULL,
	SQLSERVER_SERVER_LEVEL_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_SERVER_SECURITY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_SERVER_SECURITY_EVENTS INTEGER NULL,
	SQLSERVER_SERVICE_EVENTS INTEGER NULL,
	SQLSERVER_SERVICE_MASTER_KEY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_SERVICE_MASTER_KEY_EVENTS INTEGER NULL,
	SQLSERVER_STATISTICS_EVENTS INTEGER NULL,
	SQLSERVER_SYMMETRIC_KEY_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_SYMMETRIC_KEY_EVENTS INTEGER NULL,
	SQLSERVER_SYNONYM_EVENTS INTEGER NULL,
	SQLSERVER_TABLE_EVENTS INTEGER NULL,
	SQLSERVER_TABLE_VIEW_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_TRIGGER_EVENTS INTEGER NULL,
	SQLSERVER_TRIGGER_SCOPE INTEGER NULL,
	SQLSERVER_TYPE_EVENTS INTEGER NULL,
	SQLSERVER_USE_SCHEMA_BINDING CHAR(1) NULL,
	SQLSERVER_USER_EVENTS INTEGER NULL,
	SQLSERVER_VIEW_EVENTS INTEGER NULL,
	SQLSERVER_WORKLOAD_GROUP_EVENT_GROUP CHAR(1) NULL,
	SQLSERVER_WORKLOAD_GROUP_EVENTS INTEGER NULL,
	SQLSERVER_XML_SCHEMA_COLLECTION_EVENTS INTEGER NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SHARING              INTEGER NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_TRANSACTIONTIME_QUALIFIER INTEGER NULL,
	TERADATA_VALIDTIME_QUALIFIER INTEGER NULL,
	TRIGGER_BODY         VARCHAR(32000) NULL,
	TRIGGER_CONSTRAINT   CHAR(1) NULL,
	TRIGGER_DEFERRABLE   CHAR(1) NULL,
	TRIGGER_FIRE_ORDER   INTEGER NULL,
	TRIGGER_FIRE_TYPE    INTEGER NULL,
	TRIGGER_INIT_DEFERRED CHAR(1) NULL,
	TRIGGER_NEW          VARCHAR(1024) NULL,
	TRIGGER_NEW_TABLE    VARCHAR(1024) NULL,
	TRIGGER_NEW_VALUE    VARCHAR(1024) NULL,
	TRIGGER_OLD          VARCHAR(1024) NULL,
	TRIGGER_OLD_NEW_TABLE VARCHAR(1024) NULL,
	TRIGGER_OLD_TABLE    VARCHAR(1024) NULL,
	TRIGGER_OLD_VALUE    VARCHAR(1024) NULL,
	TRIGGER_SCOPE        INTEGER NULL,
	TRIGGER_STATUS       INTEGER NULL,
	TYPE                 INTEGER NULL,
	USE_ALTER_SYNTAX     CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WHEN_CLAUSE          VARCHAR(1024) NULL,
	TRIGGER_ROW          CHAR(1) NULL,
	TRIGGER_WHEN         VARCHAR(1024) NULL,
	TRIGGER_COLUMN       VARCHAR(1024) NULL
);

ALTER TABLE TRIGGER
ADD PRIMARY KEY (ID@);

CREATE TABLE TRIGGER_TEMPLATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TEMPLATE_CODE        VARCHAR(32000) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TRIGGER_TEMPLATE
ADD PRIMARY KEY (ID@);

CREATE TABLE TRIGGER_UPDATE_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TRIGGER_UPDATE_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TRIGGERS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE TRIGGERS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE TRUSTED_CONTEXT
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTHORIZATION_ID_REF INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DEFAULT_ROLE_REF     INTEGER NULL,
	DEFAULT_SECURITY_LABEL VARCHAR(1024) NULL,
	DEFAULT_SECURITY_LABEL_TYPE INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	IS_ROLE_ASSOCIATED_WITH_CONTEXT CHAR(1) NULL,
	IS_ROLE_USED_FOR_OBJECT_OWNERSHIP CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	UDB_AUDIT_POLICY_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TRUSTED_CONTEXT
ADD PRIMARY KEY (ID@);

CREATE TABLE TRUSTED_CONTEXT_ATTRIBUTE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_TYPE             INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENCRYPTION_TYPE      INTEGER NULL,
	IS_UNNAMED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	UDB_TYPE             INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE TRUSTED_CONTEXT_ATTRIBUTE
ADD PRIMARY KEY (ID@);

CREATE TABLE TRUSTED_CONTEXT_USER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTHORIZATION_ID_REF INTEGER NULL,
	DB2_SECURITY_LABEL   VARCHAR(1024) NULL,
	DB2_TYPE             INTEGER NULL,
	DATABASE_ROLE_REF    INTEGER NULL,
	IS_AUTHENTICATED     CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PROFILE_NAME         VARCHAR(1024) NULL,
	UDB_TYPE             INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE TRUSTED_CONTEXT_USER
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_AUDIT_ACTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_AUDIT_ACTION
ADD PRIMARY KEY (ID@);

CREATE INDEX IE_OWNER@ ON UDB_AUDIT_ACTION
(
	OWNER@
);

CREATE TABLE UDB_AUDIT_POLICY
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALL_CATEGORIES_STATUS INTEGER NULL,
	AUDIT_STATUS         INTEGER NULL,
	CHECKING_STATUS      INTEGER NULL,
	CONTEXT_STATUS       INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ERROR_TYPE           INTEGER NULL,
	EXECUTE_STATUS       INTEGER NULL,
	EXECUTE_WITH_DATA    CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_MAINTENANCE_STATUS INTEGER NULL,
	SECURITY_MAINTENANCE_STATUS INTEGER NULL,
	SYSTEM_ADMIN_STATUS  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATE_STATUS      INTEGER NULL
);

ALTER TABLE UDB_AUDIT_POLICY
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_BUFFERPOOL
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DEFERRABLE        CHAR(1) NULL,
	IS_EXTENDED_STORAGE_ENABLED CHAR(1) NULL,
	IS_SELF_TUNING       CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PAGES_IN_BLOCK       INTEGER NULL,
	PAGES_IN_BLOCK_AREA  INTEGER NULL,
	UDB_PAGE_SIZE        INTEGER NULL,
	UDB_SIZE             VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_BUFFERPOOL
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_BUFFERPOOL_PARTITION_EXCEPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PAGES_IN_BUFFERPOOL  INTEGER NULL,
	UDB_DATABASE_PARTITION_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_BUFFERPOOL_PARTITION_EXCEPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_COLUMN_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE UDB_COLUMN_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_DATABASE_PARTITION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMUNICATION_SWITCH_NAME VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARTITION_NUMBER     INTEGER NULL,
	PORT_NUMBER          INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_DATABASE_PARTITION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_DATABASE_PARTITION_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_DATABASE_PARTITION_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_DATABASE_PARTITION_GROUPS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_DATABASE_PARTITION_GROUPS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_DATABASE_PARTITIONS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_DATABASE_PARTITIONS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_DATABASE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_DATABASE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_DIMENSION_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_DIMENSION_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_DIMENSION_GROUP_ORDERS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_DIMENSION_GROUP_ORDERS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_DISTRIBUTION_KEY_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_DISTRIBUTION_KEY_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_EVENT_MONITOR
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	BUFFER_SIZE          INTEGER NULL,
	CONNECTION_FILTER    VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FILE_ACTION          INTEGER NULL,
	FILE_NAME            VARCHAR(1024) NULL,
	IS_BLOCKING_ENABLED  CHAR(1) NULL,
	MAX_FILE_SIZE        VARCHAR(1024) NULL,
	MAX_FILES            INTEGER NULL,
	MONITOR_BUFFERPOOLS  CHAR(1) NULL,
	MONITOR_CONNECTIONS  CHAR(1) NULL,
	MONITOR_DATABASE     CHAR(1) NULL,
	MONITOR_DEADLOCKS_TYPE INTEGER NULL,
	MONITOR_STATEMENTS   CHAR(1) NULL,
	MONITOR_TABLES       CHAR(1) NULL,
	MONITOR_TABLESPACES  CHAR(1) NULL,
	MONITOR_TRANSACTIONS CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OUTPUT_TYPE          INTEGER NULL,
	SCOPE                INTEGER NULL,
	START_TYPE           INTEGER NULL,
	STATEMENT_FILTER     VARCHAR(1024) NULL,
	TRANSACTION_FILTER   VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	UDB_DATABASE_PARTITION_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_EVENT_MONITOR
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_EVENT_MONITOR_GROUP
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DEACTIVATE_PERCENTAGE INTEGER NULL,
	EVENT_GROUP_TYPE     INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SCHEMA_REF           INTEGER NULL,
	TABLE_NAME           VARCHAR(1024) NULL,
	TRUNCATE             CHAR(1) NULL,
	UDB_TABLESPACE_REF   INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_EVENT_MONITOR_GROUP
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_FUNCTION_MAPPING
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	FUNCTION_REF         INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SERVER_TYPE          VARCHAR(1024) NULL,
	SERVER_VERSION       VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	UDB_SERVER_REF       INTEGER NULL,
	UDB_WRAPPER_REF      INTEGER NULL,
	USE_INFIX            CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_FUNCTION_MAPPING
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_FUNCTION_MAPPING_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE UDB_FUNCTION_MAPPING_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_FUNCTION_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_FUNCTION_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_GLOBAL_VARIABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_GLOBAL_VARIABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_HISTOGRAM_TEMPLATE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TOP_VALUE            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_HISTOGRAM_TEMPLATE
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_INDEX_EXTENSION_EXPLOITATION_RULE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	METHOD_NAME          VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SEARCH_ARGUMENT      VARCHAR(1024) NULL,
	SEARCH_KEY           VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_INDEX_EXTENSION_EXPLOITATION_RULE
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_INDEX_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_INDEX_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_LONG_TABLESPACES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_LONG_TABLESPACES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_MODULE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_MODULE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_SCHEMA_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_SCHEMA_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_SECURITY_POLICY_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_SECURITY_POLICY_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_SEQUENCE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_SEQUENCE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_SERVER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DEFAULT           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SERVER_TYPE          VARCHAR(1024) NULL,
	SERVER_VERSION       VARCHAR(1024) NULL,
	UDB_WRAPPER_REF      INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE UDB_SERVER
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_SERVER_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE UDB_SERVER_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_SERVER_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_SERVER_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_SERVICE_CLASS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACTIVITY_ESTIMATED_COST_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_EXECUTE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_INTER_ARRIVAL_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_LIFETIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_QUEUE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	AGENT_PRIORITY       INTEGER NULL,
	BUFFERPOOL_PRIORITY_TYPE INTEGER NULL,
	COLLECT_ACTIVITY_DATA_FOR_PARTITION_TYPE INTEGER NULL,
	COLLECT_ACTIVITY_DATA_TYPE INTEGER NULL,
	COLLECT_AGGREGATE_ACTIVITY_DATA_TYPE INTEGER NULL,
	COLLECT_AGGREGATE_REQUEST_DATA_TYPE INTEGER NULL,
	COLLECT_REQUEST_METRICS_TYPE INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OUTBOUND_CORRELATOR  VARCHAR(1024) NULL,
	PREFETCH_PRIORITY_TYPE INTEGER NULL,
	REQUEST_EXECUTE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_SERVICE_CLASS
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_STORED_PROCEDURE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_STORED_PROCEDURE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_TABLE_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE UDB_TABLE_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_TABLE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_TABLE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_TABLESPACE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DB2_STORAGE_GROUP_REF INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	INCREASE_SIZE        VARCHAR(1024) NULL,
	INCREASE_SIZE_BY     INTEGER NULL,
	INITIAL_SIZE         VARCHAR(1024) NULL,
	MANAGED_BY_TYPE      INTEGER NULL,
	MAX_SIZE             VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TYPE                 INTEGER NULL,
	UDB_BUFFERPOOL_REF   INTEGER NULL,
	UDB_DATABASE_PARTITION_GROUP_REF INTEGER NULL,
	UDB_EXTENT_SIZE      VARCHAR(1024) NULL,
	UDB_OVERHEAD         VARCHAR(1024) NULL,
	UDB_PAGE_SIZE        INTEGER NULL,
	UDB_PREFETCH_SIZE    VARCHAR(1024) NULL,
	UDB_RECOVER_DROPPED_TABLE CHAR(1) NULL,
	UDB_STORAGE_DATA_TAG VARCHAR(1024) NULL,
	UDB_TRANSFER_RATE    VARCHAR(1024) NULL,
	USE_AUTO_RESIZE      CHAR(1) NULL,
	USE_FILE_SYSTEM_CACHING CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_TABLESPACE
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_TABLESPACE_CONTAINER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CONTAINER_TYPE       INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	STRIPE_SET           INTEGER NULL,
	TOTAL_PAGES          VARCHAR(1024) NULL,
	UDB_DATABASE_PARTITION_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_TABLESPACE_CONTAINER
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_TABLESPACE_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_TABLESPACE_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_TABLESPACES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_TABLESPACES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_THRESHOLD
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	CHECK_THRESHOLD_INTERVAL INTEGER NULL,
	COLLECT_ACTIVITY_DATA_FOR_PARTITION_TYPE INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	IS_LOGGING_EVENT_MONITOR_RECORD_ENABLED CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REMAP_SERVICE_SUBCLASS_REF INTEGER NULL,
	SCOPE                INTEGER NULL,
	SERVICE_CLASS_REF    INTEGER NULL,
	SERVICE_SUBCLASS_REF INTEGER NULL,
	THRESHOLD_ACTION_EXECUTION_TYPE INTEGER NULL,
	THRESHOLD_COLLECT_ACTIVITY_DATA_TYPE INTEGER NULL,
	THRESHOLD_PREDICATE_TYPE INTEGER NULL,
	THRESHOLD_QUEUED_ACTIVITY_VALUE INTEGER NULL,
	THRESHOLD_QUEUED_ACTIVITY_VALUE_TYPE INTEGER NULL,
	THRESHOLD_VALUE      VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WORKLOAD_REF         INTEGER NULL
);

ALTER TABLE UDB_THRESHOLD
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_TYPE_MAPPING
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_REMOTE_FOR_BINARY_DATA CHAR(1) NULL,
	LOCAL_DATA_TYPE      VARCHAR(1024) NULL,
	MAPPING_DIRECTION_TYPE INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	REMOTE_DATA_TYPE     VARCHAR(1024) NULL,
	REMOTE_HIGH_PRECISION INTEGER NULL,
	REMOTE_HIGH_SCALE    INTEGER NULL,
	REMOTE_LOW_PRECISION INTEGER NULL,
	REMOTE_LOW_SCALE     INTEGER NULL,
	REMOTE_PRECISION_TO_SCALE INTEGER NULL,
	SERVER_TYPE          VARCHAR(1024) NULL,
	SERVER_VERSION       VARCHAR(1024) NULL,
	UDB_CHARACTER_TYPE   INTEGER NULL,
	UDB_SERVER_REF       INTEGER NULL,
	UDB_WRAPPER_REF      INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_TYPE_MAPPING
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_USER_ID_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_USER_ID_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_USER_MAPPING
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	UDB_SERVER_REF       INTEGER NULL,
	USE_USER_REGISTER    CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL
);

ALTER TABLE UDB_USER_MAPPING
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_USER_MAPPING_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE UDB_USER_MAPPING_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_VIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_VIEW_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_WORK_ACTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACTION_TYPE          INTEGER NULL,
	ACTIVITY_ESTIMATED_COST_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_EXECUTE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_INTER_ARRIVAL_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_LIFETIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_QUEUE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	CHECK_THRESHOLD_INTERVAL INTEGER NULL,
	COLLECT_ACTIVITY_DATA_FOR_PARTITION_TYPE INTEGER NULL,
	COLLECT_ACTIVITY_DATA_TYPE INTEGER NULL,
	COLLECT_AGGREGATE_ACTIVITY_DATA_TYPE INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	IS_ENABLED           CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SERVICE_SUBCLASS_REF INTEGER NULL,
	THRESHOLD_ACTION_EXECUTION_TYPE INTEGER NULL,
	THRESHOLD_COLLECT_ACTIVITY_DATA_TYPE INTEGER NULL,
	THRESHOLD_PREDICATE_TYPE INTEGER NULL,
	THRESHOLD_QUEUED_ACTIVITY_VALUE INTEGER NULL,
	THRESHOLD_QUEUED_ACTIVITY_VALUE_TYPE INTEGER NULL,
	THRESHOLD_VALUE      VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WORK_CLASS_REF       INTEGER NULL
);

ALTER TABLE UDB_WORK_ACTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_WORK_ACTION_SET
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SERVICE_CLASS_REF    INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WORK_CLASS_SET_REF   INTEGER NULL
);

ALTER TABLE UDB_WORK_ACTION_SET
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_WORK_CLASS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	RANGE_FROM_VALUE     VARCHAR(1024) NULL,
	RANGE_TO_VALUE       VARCHAR(1024) NULL,
	RANGE_TYPE           INTEGER NULL,
	SCHEMA_REF           INTEGER NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_WORK_CLASS
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_WORK_CLASS_SET
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_WORK_CLASS_SET
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_WORKLOAD
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ACTIVITY_ESTIMATED_COST_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_EXECUTE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_INTER_ARRIVAL_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_LIFETIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	ACTIVITY_QUEUE_TIME_HISTOGRAM_TEMPLATE_REF INTEGER NULL,
	COLLECT_ACTIVITY_DATA_FOR_PARTITION_TYPE INTEGER NULL,
	COLLECT_ACTIVITY_DATA_TYPE INTEGER NULL,
	COLLECT_ACTIVITY_METRICS_TYPE INTEGER NULL,
	COLLECT_AGGREGATE_ACTIVITY_DATA_TYPE INTEGER NULL,
	COLLECT_DEADLOCK_DATA_TYPE INTEGER NULL,
	COLLECT_LOCK_TIMEOUT_DATA_TYPE INTEGER NULL,
	COLLECT_LOCK_WAIT_DATA_TYPE INTEGER NULL,
	COLLECT_LOCK_WAIT_TIME VARCHAR(1024) NULL,
	COLLECT_UNIT_OF_WORK_DATA_TYPE INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	IS_DATABASE_ACCESS_ALLOWED CHAR(1) NULL,
	IS_ENABLED           CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	SERVICE_CLASS_REF    INTEGER NULL,
	SERVICE_SUBCLASS_REF INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_WORKLOAD
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_WORKLOAD_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_WORKLOAD_PERMISSIONS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_WORKLOADS_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDB_WORKLOADS_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDB_WRAPPER
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	LIBRARY_PATH         VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDB_WRAPPER
ADD PRIMARY KEY (ID@);

CREATE TABLE UDB_WRAPPER_OPTION
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE                VARCHAR(1024) NULL
);

ALTER TABLE UDB_WRAPPER_OPTION
ADD PRIMARY KEY (ID@);

CREATE TABLE UDP_MAP_SOURCE_LONG_IDS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(67) NULL
);

ALTER TABLE UDP_MAP_SOURCE_LONG_IDS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDP_MAP_TARGET_LONG_IDS
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               CHAR(67) NULL
);

ALTER TABLE UDP_MAP_TARGET_LONG_IDS
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDT_ATTRIBUTE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COLLATION_REF        INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DOMAIN_REF           INTEGER NULL,
	LOGICAL_DATA_TYPE    VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PARENT_DOMAIN_REF    INTEGER NULL,
	PHYSICAL_DATA_TYPE   VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	UDT_ATTRIBUTE_ORDER  INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDT_ATTRIBUTE
ADD PRIMARY KEY (ID@);

CREATE TABLE UDT_ATTRIBUTES_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UDT_ATTRIBUTES_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE UDT_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_UDT_PERMISSIONS INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE UDT_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE UPDATE_COLUMNS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE UPDATE_COLUMNS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE USER_ATTACHED_OBJECTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE USER_ATTACHED_OBJECTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE USER_DEFINED_DATA_TYPE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ALIGNMENT            INTEGER NULL,
	CANONICAL_REF        INTEGER NULL,
	CATEGORY             INTEGER NULL,
	COLLATABLE           CHAR(1) NULL,
	COLLATION_REF        INTEGER NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	EDITIONABLE          CHAR(1) NULL,
	ENUMERATED_VALUES    VARCHAR(1024) NULL,
	FUNCTION_ANALYZE_REF INTEGER NULL,
	FUNCTION_INPUT_REF   INTEGER NULL,
	FUNCTION_MODINPUT_REF INTEGER NULL,
	FUNCTION_MODOUTPUT_REF INTEGER NULL,
	FUNCTION_RECEIVE_REF INTEGER NULL,
	FUNCTION_SEND_REF    INTEGER NULL,
	INTERNAL_LENGTH      INTEGER NULL,
	IS_PREFERRED         CHAR(1) NULL,
	LIKE_TYPE_REF        INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PASSED_BY_VALUE      CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	STORAGE_STRATEGY     INTEGER NULL,
	SUBTYPE_DIFF_REF     INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	UDDT_DEFAULT         VARCHAR(1024) NULL,
	UDDT_DELIMITER       VARCHAR(1024) NULL,
	UDDT_ELEMENT         INTEGER NULL,
	UDDT_TYPE            INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	SUBTYPE_DATATYPE     VARCHAR(1024) NULL,
	FUNCTION_OUTPUT      VARCHAR(1024) NULL
);

ALTER TABLE USER_DEFINED_DATA_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE USER_ID
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_USER_ACTIVE CHAR(1) NULL,
	ARANGODB_USER_CUSTOMDATA VARCHAR(1024) NULL,
	ARANGODB_USER_FULL_NAME VARCHAR(1024) NULL,
	ARANGODB_USER_LDAP   CHAR(1) NULL,
	ARANGODB_USER_PASSWORD VARCHAR(1024) NULL,
	AZUREAD_PRINCIPAL    VARCHAR(1024) NULL,
	CAN_ADMINISTER       CHAR(1) NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	COUCHBASE_USER_AUTHENTICATION_DOMAIN INTEGER NULL,
	COUCHBASE_USER_FULLNAME VARCHAR(1024) NULL,
	COUCHBASE_USER_ID    VARCHAR(1024) NULL,
	COUCHBASE_USER_PASSWORD VARCHAR(1024) NULL,
	COUCHBASE_USER_ROLES VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DEFAULT_SCHEMA_REF   INTEGER NULL,
	DEFAULT_TERADATA_DATABASE_REF INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	ENTITY_REF           INTEGER NULL,
	FOR_FROM             INTEGER NULL,
	FROM_EXTERNAL_PROVIDER CHAR(1) NULL,
	FROM_TERADATA_DATABASE_REF INTEGER NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_USER_GROUP        CHAR(1) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_USERLOCKOPT  INTEGER NULL,
	MARIADB_USERPASSWORDOPT INTEGER NULL,
	MARIADB_USERPASSWORDOPTINTERVAL VARCHAR(1024) NULL,
	MARIADB_USERREQUIRECIPHER VARCHAR(1024) NULL,
	MARIADB_USERREQUIREISSUER VARCHAR(1024) NULL,
	MARIADB_USERREQUIRESSL CHAR(1) NULL,
	MARIADB_USERREQUIRESUBJECT VARCHAR(1024) NULL,
	MARIADB_USERREQUIREX509 CHAR(1) NULL,
	MARIADB_USERRESOURCEOPT_MAXCONN VARCHAR(1024) NULL,
	MARIADB_USERRESOURCEOPT_MAXQUERIES VARCHAR(1024) NULL,
	MARIADB_USERRESOURCEOPT_MAXUPDATES VARCHAR(1024) NULL,
	MARIADB_USERRESOURCEOPT_STATMTTIME VARCHAR(1024) NULL,
	MARIADB_USERRESOURCEOPT_USERCONN VARCHAR(1024) NULL,
	MONGODB_DATABASE_REF INTEGER NULL,
	MONGODB_USER_AUTHENTICATIONRESTRICTIONS VARCHAR(32000) NULL,
	MONGODB_USER_CUSTOMDATA VARCHAR(32000) NULL,
	MONGODB_USER_MECHANISMS VARCHAR(32000) NULL,
	MONGODB_USER_PASSWORD VARCHAR(1024) NULL,
	MONGODB_USER_PASSWORDDIGESTOR VARCHAR(32000) NULL,
	MONGODB_USER_ROLES   VARCHAR(32000) NULL,
	MONGODB_USER_USERNAME VARCHAR(1024) NULL,
	MONGODB_WRITECONCERN VARCHAR(32000) NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_USERATTRIBUTE  VARCHAR(32000) NULL,
	MYSQL_USERAUTHSTRING VARCHAR(1024) NULL,
	MYSQL_USERLOCKOPT    INTEGER NULL,
	MYSQL_USERPASSWORDOPTEXPIRE INTEGER NULL,
	MYSQL_USERPASSWORDOPTEXPIREINTERVAL VARCHAR(1024) NULL,
	MYSQL_USERPASSWORDOPTFAILEDLOGINATTEMPTS VARCHAR(1024) NULL,
	MYSQL_USERPASSWORDOPTHISTORY VARCHAR(1024) NULL,
	MYSQL_USERPASSWORDOPTHISTORYDEFAULT CHAR(1) NULL,
	MYSQL_USERPASSWORDOPTLOCKTIME VARCHAR(1024) NULL,
	MYSQL_USERPASSWORDOPTLOCKTIMEUNBOUNDED CHAR(1) NULL,
	MYSQL_USERPASSWORDOPTREQUIRE INTEGER NULL,
	MYSQL_USERPASSWORDOPTREUSEINTERVAL VARCHAR(1024) NULL,
	MYSQL_USERPASSWORDOPTREUSEINTERVALDEFAULT CHAR(1) NULL,
	MYSQL_USERRANDOMPASSWORD CHAR(1) NULL,
	MYSQL_USERREQUIRECIPHER VARCHAR(1024) NULL,
	MYSQL_USERREQUIREISSUER VARCHAR(1024) NULL,
	MYSQL_USERREQUIREOPT INTEGER NULL,
	MYSQL_USERREQUIRESUBJECT VARCHAR(1024) NULL,
	MYSQL_USERRESOURCEOPT_MAXCONN VARCHAR(1024) NULL,
	MYSQL_USERRESOURCEOPT_MAXQUERIES VARCHAR(1024) NULL,
	MYSQL_USERRESOURCEOPT_MAXUPDATES VARCHAR(1024) NULL,
	MYSQL_USERRESOURCEOPT_USERCONN VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_IF_NOT_EXIST   CHAR(1) NULL,
	NEO4J_USER_CHANGE_REQUIRED INTEGER NULL,
	NEO4J_USER_CREATE_OR_REPLACE CHAR(1) NULL,
	NEO4J_USER_HOME_DATABASE_REF INTEGER NULL,
	NEO4J_USER_PASSWORD  VARCHAR(1024) NULL,
	NEO4J_USER_PASSWORD_TYPE INTEGER NULL,
	NEO4J_USER_STATUS    INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PERMANENT_STORAGE_SIZE VARCHAR(1024) NULL,
	SQLSERVER_ASYMMETRIC_KEY_REF INTEGER NULL,
	SQLSERVER_CERTIFICATE_REF INTEGER NULL,
	SQLSERVER_LOGIN_REF  INTEGER NULL,
	SQLSERVER_LOGIN_TYPE INTEGER NULL,
	SQLSERVER_SCHEMA_REF INTEGER NULL,
	SERVER_ID            VARCHAR(1024) NULL,
	SPOOL_FILE_SIZE      VARCHAR(1024) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	TEMPORARY_TABLE_SIZE VARCHAR(1024) NULL,
	TERADATA_AFTER_JOURNAL_IMAGE INTEGER NULL,
	TERADATA_BEFORE_JOURNAL_IMAGE INTEGER NULL,
	TERADATA_CHARACTER_SET_TYPE INTEGER NULL,
	TERADATA_COLLATION   INTEGER NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_DATE_FORM   INTEGER NULL,
	TERADATA_DEFAULT_ROLE_REF INTEGER NULL,
	TERADATA_DEFAULT_ROLE_TYPE INTEGER NULL,
	TERADATA_FALLBACK_PROTECTION INTEGER NULL,
	TERADATA_PROFILE_REF INTEGER NULL,
	TERADATA_STARTUP     VARCHAR(1024) NULL,
	TERADATA_WITH_JOURNAL VARCHAR(1024) NULL,
	TIME_ZONE            VARCHAR(1024) NULL,
	UDB_AUDIT_POLICY_REF INTEGER NULL,
	UNLOCK_PASSWORD      CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	USER_ID_REF          INTEGER NULL,
	AUTHENTICATION_PLUGIN VARCHAR(1024) NULL
);

ALTER TABLE USER_ID
ADD PRIMARY KEY (ID@);

CREATE TABLE USER_IDS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE USER_IDS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VALID_OBJECTS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VALID_OBJECTS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VALID_OWNEES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VALID_OWNEES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VALID_OWNERS_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VALID_OWNERS_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VALID_PROPERTIES_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VALID_PROPERTIES_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VALID_VALUE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	IS_UNNAMED           CHAR(1) NULL,
	MODIFICATION_TIME    TIMESTAMP NULL,
	MODIFIER             VARCHAR(1024) NULL,
	NOTE_IMPORTANCE      INTEGER NULL,
	OBJECT_GUID          CHAR(67) NULL,
	OBJECT_ORDER         INTEGER NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	STATUS               INTEGER NULL,
	USER_DEFINED_EVENT   VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALUE_DISPLAY_NAME   VARCHAR(1024) NULL
);

ALTER TABLE VALID_VALUE
ADD PRIMARY KEY (ID@);

CREATE TABLE VALIDATION_RULE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	COMMENT              VARCHAR(32000) NULL,
	DATABASE_ID          INTEGER NULL,
	DEFERRED             CHAR(1) NULL,
	GENERATE_AS_FIELD_PROCEDURE CHAR(1) NULL,
	GENERATE_AS_SQL_92_FORMAT CHAR(1) NULL,
	GENERATE_USING_BIND  CHAR(1) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	INVERT_EXPRESSION    CHAR(1) NULL,
	IS_DEFERRABLE        CHAR(1) NULL,
	IS_DETACHED          CHAR(1) NULL,
	IS_LOGICAL_ONLY      CHAR(1) NULL,
	IS_NOT_FOR_REPLICATION CHAR(1) NULL,
	IS_PHYSICAL_ONLY     CHAR(1) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	PHYSICAL_NAME        VARCHAR(1024) NULL,
	QUOTE_VALUE          INTEGER NULL,
	RULE_TYPE            INTEGER NULL,
	SCHEMA_REF           INTEGER NULL,
	SERVER_VALUE         VARCHAR(1024) NULL,
	TYPE                 INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VALIDATION_RULE_ERROR_MESSAGE VARCHAR(1024) NULL,
	VALIDATION_RULE_MAX_VALUE VARCHAR(1024) NULL,
	VALIDATION_RULE_MIN_VALUE VARCHAR(1024) NULL
);

ALTER TABLE VALIDATION_RULE
ADD PRIMARY KEY (ID@);

CREATE TABLE VALUE_TYPE
(
	ID@                  INTEGER NOT NULL
);

ALTER TABLE VALUE_TYPE
ADD PRIMARY KEY (ID@);

CREATE TABLE VARIABLE_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VARIABLE_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VIEW
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_USER_ROLE_REF   INTEGER NULL,
	AWS_KEYSPACE_DATABASE_REF INTEGER NULL,
	ALLOW_ROW_MOVEMENT   CHAR(1) NULL,
	ARANGODB_DATABASE_REF INTEGER NULL,
	ARANGODB_GRAPH_REF   INTEGER NULL,
	ARANGODB_VIEW_CLEANUPINTERVALSTEP VARCHAR(1024) NULL,
	ARANGODB_VIEW_COMMITINTERVALMSEC VARCHAR(1024) NULL,
	ARANGODB_VIEW_CONSOLIDATIONINTERVALMSEC VARCHAR(1024) NULL,
	ARANGODB_VIEW_CONSOLIDATIONPOLICY VARCHAR(32000) NULL,
	ARANGODB_VIEW_LINKS_REF INTEGER NULL,
	ARANGODB_VIEW_PRIMARYSORT VARCHAR(32000) NULL,
	ARANGODB_VIEW_PRIMARYSORTCOMPRESSION VARCHAR(1024) NULL,
	ARANGODB_VIEW_PROPERTIES VARCHAR(32000) NULL,
	ARANGODB_VIEW_STOREDVALUES VARCHAR(32000) NULL,
	ARANGODB_VIEW_TYPE   VARCHAR(1024) NULL,
	ARANGODB_VIEW_WRITEBUFFERACTIVE VARCHAR(1024) NULL,
	ARANGODB_VIEW_WRITEBUFFERIDLE VARCHAR(1024) NULL,
	ARANGODB_VIEW_WRITEBUFFERSIZEMAX VARCHAR(1024) NULL,
	AVRO_DATABASE_REF    INTEGER NULL,
	CTAS_OPTION          CHAR(1) NULL,
	CASSANDRA_DATABASE_REF INTEGER NULL,
	CHECK_OPTION         INTEGER NULL,
	COLUMN_VISIBILITY    INTEGER NULL,
	CONTAINER            INTEGER NULL,
	CONTAINER_DEFAULT    CHAR(1) NULL,
	CONTAINER_MAP        CHAR(1) NULL,
	COUCHBASE_DATABASE_REF INTEGER NULL,
	COUCHBASE_VIEW_CONTROLLERS_COMPACT VARCHAR(1024) NULL,
	COUCHBASE_VIEW_MAP   VARCHAR(32000) NULL,
	COUCHBASE_VIEW_META_ID VARCHAR(1024) NULL,
	COUCHBASE_VIEW_META_REV VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DATABASE_INTERNAL_NAME VARCHAR(1024) NULL,
	DATABRICKS_DATABASE_REF INTEGER NULL,
	DATABRICKS_LATERAL_VIEW_CLAUSE VARCHAR(32000) NULL,
	DATABRICKS_PIVOT_CLAUSE VARCHAR(32000) NULL,
	DEFAULT_COLLATION    VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	DYNAMODB_DATABASE_REF INTEGER NULL,
	EDITIONABLE          CHAR(1) NULL,
	EXPRESSION           VARCHAR(1024) NULL,
	FORCE_CREATE         CHAR(1) NULL,
	GOOGLE_BIGQUERY_DATABASE_REF INTEGER NULL,
	GOOGLE_BIGQUERY_ENTITY_EXPIRATION_TIMESTAMP VARCHAR(1024) NULL,
	GOOGLE_BIGQUERY_ENTITY_FRIENDLY_NAME VARCHAR(1024) NULL,
	GROUP_BY_CLAUSE      VARCHAR(4000) NULL,
	HAVING_CLAUSE        VARCHAR(4000) NULL,
	HIDE_IN_LOGICAL      CHAR(1) NULL,
	HIDE_IN_PHYSICAL     CHAR(1) NULL,
	HIERARCHICAL_CONDITION VARCHAR(1024) NULL,
	HIVE_DATABASE_REF    INTEGER NULL,
	HIVE_OVERWRITETBLPROPERTIES VARCHAR(32000) NULL,
	HIVE_ROLE_REF        INTEGER NULL,
	HIVE_TBLPROPERTIES   VARCHAR(32000) NULL,
	HIVE_TYPE            CHAR(1) NULL,
	ICON_IMAGE_REF       INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	IS_QUERY_OPTIMIZATION_DISABLED CHAR(1) NULL,
	IS_RECURSIVE         CHAR(1) NULL,
	IS_SECURE            CHAR(1) NULL,
	JSON_DATABASE_REF    INTEGER NULL,
	LABEL                VARCHAR(1024) NULL,
	MARIADB_DATABASE_REF INTEGER NULL,
	MARIADB_ROLE_REF     INTEGER NULL,
	MARIADB_VIEWALGORITHMOPT INTEGER NULL,
	MARIADB_VIEWCHECKOPT INTEGER NULL,
	MARIADB_VIEWDEFINEROPT VARCHAR(1024) NULL,
	MARIADB_VIEWSQLSECURITYOPT INTEGER NULL,
	MODE                 INTEGER NULL,
	MONGODB_COLLATION_ALTERNATE INTEGER NULL,
	MONGODB_COLLATION_BACKWARDS CHAR(1) NULL,
	MONGODB_COLLATION_CASEFIRST INTEGER NULL,
	MONGODB_COLLATION_CASELEVEL CHAR(1) NULL,
	MONGODB_COLLATION_LOCALE VARCHAR(1024) NULL,
	MONGODB_COLLATION_MAXVARIABLE INTEGER NULL,
	MONGODB_COLLATION_NUMERICORDERING CHAR(1) NULL,
	MONGODB_COLLATION_STRENGTH INTEGER NULL,
	MONGODB_DATABASE_REF INTEGER NULL,
	MONGODB_PIPELINE     VARCHAR(32000) NULL,
	MYSQL_DATABASE_REF   INTEGER NULL,
	MYSQL_ROLE_REF       INTEGER NULL,
	MYSQL_VIEWALGORITHMOPT INTEGER NULL,
	MYSQL_VIEWCHECKOPT   INTEGER NULL,
	MYSQL_VIEWDEFINEROPT VARCHAR(1024) NULL,
	MYSQL_VIEWSQLSECURITYOPT INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	NEO4J_DATABASE_REF   INTEGER NULL,
	NEO4J_LABEL_REF      INTEGER NULL,
	NEO4J_RELATIONSHIP_REF INTEGER NULL,
	NEO4J_USER_HOME_DATABASE_REF INTEGER NULL,
	NO_CYCLE             CHAR(1) NULL,
	NOSQLSCRIPTTEXT      VARCHAR(32000) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ORACLE_CONSTRAINT    VARCHAR(1024) NULL,
	ORACLE_EDITIONING    CHAR(1) NULL,
	ORACLE_OBJECT_IDENTIFIER INTEGER NULL,
	ORACLE_OBJECT_SUBSTITUTABLE CHAR(1) NULL,
	ORACLE_OBJECT_TABLE_REF INTEGER NULL,
	ORACLE_SUPERVIEW_REF INTEGER NULL,
	ORACLE_VIEW_OIDPROPERTIES VARCHAR(32000) NULL,
	ORACLE_VIEW_SIBLING  CHAR(1) NULL,
	ORACLE_VIEW_TYPE     INTEGER NULL,
	ORACLE_XML_ANYSCHEMA INTEGER NULL,
	ORACLE_XML_ELEMENT   VARCHAR(1024) NULL,
	ORACLE_XML_NONSCHEMA INTEGER NULL,
	ORACLE_XML_STORAGE   INTEGER NULL,
	ORACLE_XML_VARRAYS_STORAGE INTEGER NULL,
	ORDER_BY_CLAUSE      VARCHAR(4000) NULL,
	PARQUET_DATABASE_REF INTEGER NULL,
	QUALIFY_CLAUSE       VARCHAR(1024) NULL,
	RESTRICTION_TYPE     INTEGER NULL,
	SF_COPY_GRANTS       CHAR(1) NULL,
	SQL                  VARCHAR(1024) NULL,
	SQLSERVER_IS_OBFUSCATED CHAR(1) NULL,
	SQLSERVER_RETURN_VIEW_METADATA CHAR(1) NULL,
	SQLSERVER_USE_SCHEMA_BINDING CHAR(1) NULL,
	SCHEMA_NAME          VARCHAR(1024) NULL,
	SCHEMA_REF           INTEGER NULL,
	SELECT_HINT_SYNTAX   CHAR(1) NULL,
	SELECT_TOP_PERCENTAGE DOUBLE NULL,
	SELECT_TOP_ROWS_COUNT INTEGER NULL,
	SELECT_TYPE          INTEGER NULL,
	SELECT_WITH_TIES     CHAR(1) NULL,
	SET_VIEW_REF         INTEGER NULL,
	SHARING_EXTENDED     INTEGER NULL,
	SNOWFLAKE_DATABASE_REF INTEGER NULL,
	START_WITH_CONDITION VARCHAR(1024) NULL,
	SUPPRESS_LOGGING     CHAR(1) NULL,
	SYNAPSE_DATABASE_ID  INTEGER NULL,
	SYNAPSE_DATABASE_REF INTEGER NULL,
	SYNONYM_REF          INTEGER NULL,
	TERADATA_DATABASE_REF INTEGER NULL,
	TERADATA_RECURSIVE   CHAR(1) NULL,
	TERADATA_TEMPORAL_DEFAULT_DATE_TIMESTAMP_EXPRESSION VARCHAR(1024) NULL,
	TERADATA_TEMPORAL_PERIOD_EXPRESSION VARCHAR(1024) NULL,
	TERADATA_TEMPORAL_TRANSACTIONTIME_DATE_TIMESTAMP_EXPRESSION VARCHAR(1024) NULL,
	TERADATA_TEMPORAL_VALIDTIME_DATE_TIMESTAMP_EXPRESSION VARCHAR(1024) NULL,
	TERADATA_TRANSACTIONTIME_QUALIFIER INTEGER NULL,
	TERADATA_VALIDTIME_QUALIFIER INTEGER NULL,
	TERADATA_VIEW_LOCKING_CLAUSE VARCHAR(1024) NULL,
	THEME_REF            INTEGER NULL,
	TYPE                 INTEGER NULL,
	UDB_DISTRIBUTION_TYPE INTEGER NULL,
	USE_ALTER_SYNTAX     CHAR(1) NULL,
	USE_GLOBAL_SYNTAX    CHAR(1) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USE_TEMPORARY_SYNTAX CHAR(1) NULL,
	USER_DEFINED_SQL     VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_RIGHTS          INTEGER NULL,
	WHERE_CLAUSE         VARCHAR(1024) NULL,
	TEMPORARY            CHAR(1) NULL,
	ADBL_RECURSIVE       CHAR(1) NULL,
	SECURITY_BARRIER     CHAR(1) NULL,
	NZ_TEMPORARY         CHAR(1) NULL,
	ADBL_SCHEMA_BINDING  CHAR(1) NULL
);

ALTER TABLE VIEW
ADD PRIMARY KEY (ID@);

CREATE TABLE VIEW_DEFINITION_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VIEW_DEFINITION_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VIEW_FILL_GRADIENT_BLEND
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE VIEW_FILL_GRADIENT_BLEND
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE VIEW_PERMISSIONS
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ADBL_ROLE_REF        INTEGER NULL,
	ADBL_VIEW_PERMISSIONS INTEGER NULL,
	CAN_GRANT_PERMISSION CHAR(1) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE VIEW_PERMISSIONS
ADD PRIMARY KEY (ID@);

CREATE TABLE VIEW_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	VIEW_TAG_REF         INTEGER NULL
);

ALTER TABLE VIEW_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE WAREHOUSE
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	AUTO_RESUME          CHAR(1) NULL,
	AUTO_SUSPEND         VARCHAR(1024) NULL,
	CREDIT_QUOTA         VARCHAR(1024) NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	END_TIMESTAMP        VARCHAR(1024) NULL,
	FREQUENCY            INTEGER NULL,
	IF_NOT_EXISTS        CHAR(1) NULL,
	INITIALLY_SUSPENDED  CHAR(1) NULL,
	MAX_CLUSTER_COUNT    VARCHAR(1024) NULL,
	MAX_CONCURRENCY_LEVEL VARCHAR(1024) NULL,
	MIN_CLUSTER_COUNT    VARCHAR(1024) NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	RESOURCE_MONITOR     VARCHAR(1024) NULL,
	SCALING_POLICY       INTEGER NULL,
	START_TIMESTAMP      INTEGER NULL,
	START_TIMESTAMP_VALUE VARCHAR(1024) NULL,
	STATEMENT_QUEUED_TIMEOUT_IN_SECONDS VARCHAR(1024) NULL,
	STATEMENT_TIMEOUT_IN_SECONDS VARCHAR(1024) NULL,
	USE_REPLACE_SYNTAX   CHAR(1) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WAREHOUSE_SIZE       INTEGER NULL,
	WAREHOUSE_WITH       CHAR(1) NULL
);

ALTER TABLE WAREHOUSE
ADD PRIMARY KEY (ID@);

CREATE TABLE WAREHOUSE_TAG
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	TAG_VALUE            VARCHAR(1024) NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL,
	WAREHOUSE_TAG_REF    INTEGER NULL
);

ALTER TABLE WAREHOUSE_TAG
ADD PRIMARY KEY (ID@);

CREATE TABLE WORK_CLASSES_ORDER_REF
(
	ID@                  INTEGER NOT NULL,
	SEQUENCE_NUMBER@     INTEGER NOT NULL,
	VALUE@               INTEGER NULL
);

ALTER TABLE WORK_CLASSES_ORDER_REF
ADD PRIMARY KEY (ID@,SEQUENCE_NUMBER@);

CREATE TABLE XML_INDEX
(
	ID@                  INTEGER NOT NULL,
	TYPE@                INTEGER NOT NULL,
	OWNER@               INTEGER NOT NULL,
	BUILT_IN_ID          INTEGER NULL,
	DEFINITION           VARCHAR(32000) NULL,
	LONG_ID              CHAR(67) NULL,
	NAME                 VARCHAR(1024) NULL,
	OWNER_PATH           VARCHAR(1024) NULL,
	ALLOW_INDEX_REVERSE_SCANS CHAR(1) NULL,
	ALLOW_PAGE_LOCKS     CHAR(1) NULL,
	ALLOW_ROW_LOCKS      CHAR(1) NULL,
	ATTRIBUTE_REF        INTEGER NULL,
	COLLECT_STATISTICS_TYPE INTEGER NULL,
	DB2_CLOSE            CHAR(1) NULL,
	DB2_COPY_INDEX       CHAR(1) NULL,
	DB2_DEFER            CHAR(1) NULL,
	DB2_DEFINE_DATA_SETS CHAR(1) NULL,
	DB2_ERASE_WHEN_DELETED CHAR(1) NULL,
	DB2_FREE_PAGE_INTERVAL INTEGER NULL,
	DB2_GROUP_BUFFERPOOL_TYPE INTEGER NULL,
	DB2_INDEX_VALUE_DATA_TYPE INTEGER NULL,
	DB2_NULL_KEYS        INTEGER NULL,
	DB2_PERCENT_FREE     VARCHAR(1024) NULL,
	DB2_PIECE_SIZE       VARCHAR(1024) NULL,
	DB2_PRIMARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_SECONDARY_SPACE_ALLOCATION INTEGER NULL,
	DB2_STORAGE_GROUP_REF INTEGER NULL,
	DB2_USE_BUFFERPOOL   INTEGER NULL,
	DB2_VOLUME_CATALOG   VARCHAR(1024) NULL,
	DATABASE_ID          INTEGER NULL,
	DO_NOT_GENERATE      CHAR(1) NULL,
	INDEX_VALUE_DATA_TYPE_LENGTH INTEGER NULL,
	INVALID_VALUE_ACTION INTEGER NULL,
	IS_COMPRESSED        CHAR(1) NULL,
	IS_PRIMARY_XML_INDEX CHAR(1) NULL,
	IS_UNIQUE            CHAR(1) NULL,
	MINIMUM_PERCENT_USED INTEGER NULL,
	NAME_QUALIFIER       VARCHAR(1024) NULL,
	OBJECT_GUID          CHAR(67) NULL,
	ONLINE               CHAR(1) NULL,
	PATTERN_CLAUSE       VARCHAR(1024) NULL,
	PRIMARY_XML_INDEX_REF INTEGER NULL,
	SQLSERVER_DROP_EXISTING_INDEX CHAR(1) NULL,
	SQLSERVER_FILL_FACTOR VARCHAR(1024) NULL,
	SQLSERVER_IGNORE_DUPLICATE_KEYS CHAR(1) NULL,
	SQLSERVER_KEEP_EXISTING_STATISTICS CHAR(1) NULL,
	SQLSERVER_MAX_PARALLEL INTEGER NULL,
	SQLSERVER_PAD_INDEX  CHAR(1) NULL,
	SQLSERVER_SORT_IN_TEMP_DB CHAR(1) NULL,
	SCHEMA_REF           INTEGER NULL,
	SECONDARY_XML_INDEX_TYPE INTEGER NULL,
	UDB_INDEX_VALUE_DATA_TYPE INTEGER NULL,
	UDB_INDEX_VALUE_DATA_TYPE_LENGTH VARCHAR(1024) NULL,
	UDB_INDEX_VALUE_IS_HASHED CHAR(1) NULL,
	UDB_LEVEL2_PERCENT_FREE INTEGER NULL,
	UDB_PAGE_SPLIT_TYPE  INTEGER NULL,
	UDB_PERCENT_FREE     INTEGER NULL,
	UDB_TABLESPACE_REF   INTEGER NULL,
	USER_FORMATTED_NAME  VARCHAR(1024) NULL,
	USER_FORMATTED_PHYSICAL_NAME VARCHAR(1024) NULL
);

ALTER TABLE XML_INDEX
ADD PRIMARY KEY (ID@);

ALTER TABLE ABSTRACT_OBJECT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ABSTRACT_OBJECT (ID@);

ALTER TABLE ACCOUNTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_PROFILE (ID@);

ALTER TABLE ACTIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE ADBL_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADBL_GROUP_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADBL_LIBRARY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADBL_ORGANIZATION_KEY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ADBL_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADBL_SORT_KEY_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ADBL_SORT_KEY_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ADBL_SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADBL_TABLESPACE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADBL_USER_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ADDRESS_CONNECTION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE AGGREGATE_PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE AGGREGATION_TYPE
ADD CONSTRAINT IS_A FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE AGGREGATION_TYPE
ADD CONSTRAINT OWNED_OBJECT_REF FOREIGN KEY (OWNING_OBJECT_REF) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE AGGREGATION_TYPE
ADD CONSTRAINT OWNING_OBJECT_REF FOREIGN KEY (OWNED_OBJECT_REF) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE ANNOTATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ANNOTATION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE ANNOTATION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE ANNOTATION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE APPLICATION_CONNECTION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE ARANGODB_COLXN_PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_ID (ID@);

ALTER TABLE ARANGODB_COLXN_PERMISSION_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE ARANGODB_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ARANGODB_DATABASE_PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_ID (ID@);

ALTER TABLE ARANGODB_DATABASE_PERMISSION_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE ARANGODB_GRAPH
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ARANGODB_GRAPH_EDGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE ARANGODB_GRAPH_EDGE_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE ARANGODB_TASKS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ARANGODB_VIEW_LINKS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE ASSOCIATION_TYPE
ADD CONSTRAINT IS_A FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE ASSOCIATION_TYPE
ADD CONSTRAINT PARTICIPATING_OBJECT_REF FOREIGN KEY (PARTICIPATING_OBJECT_REF) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE ASSOCIATION_TYPE
ADD CONSTRAINT PARTICIPATING_PROPERTY_REF FOREIGN KEY (PARTICIPATING_PROPERTY_REF) REFERENCES PROPERTY_TYPE (ID@);

ALTER TABLE ASYMMETRIC_KEYS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE ATTRIBUTE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_CLUSTER (ID@);

ALTER TABLE ATTRIBUTE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ATTRIBUTE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE ATTRIBUTE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ATTRIBUTE_NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE ATTRIBUTE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE ATTRIBUTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ATTRIBUTES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DIMENSION_GROUP (ID@);

ALTER TABLE AUDIT_COMPONENT_ACTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE AUDIT_GROUPS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE AUDIT_GROUPS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_AUDIT_SPECIFICATION (ID@);

ALTER TABLE AUDIT_POLICY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE AUDIT_STANDARD_ACTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE AUTO_ATTACHED_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE AUTO_POPULATED_DIAGRAMS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE AUTO_POPULATED_DIAGRAMS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE AUTO_POPULATED_SUBJECT_AREAS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE AUXILIARY_TABLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE AVAILABLE_FILEGROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE AVAILABLE_FILEGROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE AVAILABLE_FILEGROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE AVAILABLE_FILEGROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE AVAILABLE_FILEGROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE AVAILABLE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE AVAILABLE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE AVAILABLE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE AVAILABLE_PARTITION_ELEMENTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATA_COMPRESSION (ID@);

ALTER TABLE AVAILABLE_PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE AVAILABLE_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE AVAILABLE_RETURN_TABLE_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE AVAILABLE_ROLES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE AVAILABLE_ROLES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE AVAILABLE_ROLES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE AVAILABLE_SCHEMAS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE AVRO_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE AWS_BACKUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE AWS_KEYSPACE_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE AWS_KEYSPACE_DCVALUES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE AWS_KEYSPACE_TAGS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE AWS_KEYSPACE_TAGS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE AWS_REGION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE AWS_REGION_USAGES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE BEND_POINTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE BEND_POINTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_LINE (ID@);

ALTER TABLE BEND_POINTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_RELATIONSHIP (ID@);

ALTER TABLE BEND_POINTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_SUBTYPE_SYMBOL (ID@);

ALTER TABLE BEND_POINTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE BLOCKED_ROLES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE BLOCKED_ROLES_LIST_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE CACHED_VIEW
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE CACHED_VIEW_DEFINITION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE CACHED_VIEW_DEFINITION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE CACHED_VIEW_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE CACHED_VIEW_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE CACHED_VIEW_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE CACHEDVIEW_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE CASSANDRA_AGGREGATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE CASSANDRA_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE CASSANDRA_DCVALUES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CASSANDRA_DATABASE (ID@);

ALTER TABLE CAST
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE CATEGORY_MEMBER
ADD CONSTRAINT IS_A_MEMBER_OF FOREIGN KEY (MEMBER@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE CATEGORY_MEMBER
ADD CONSTRAINT HAS_MEMBER FOREIGN KEY (ID@) REFERENCES CATEGORY_TYPE (ID@);

ALTER TABLE CATEGORY_TYPE
ADD CONSTRAINT IS_A FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE CERTIFICATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE CHECK_CONSTRAINT_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE CHECK_CONSTRAINT_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE CHECK_CONSTRAINT_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE CHILD_OBJECT_TYPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE CHILD_OBJECT_TYPES_REF
ADD CONSTRAINT REFERENCES FOREIGN KEY (VALUE@) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE CHILD_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE CHILD_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE CHILD_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE CHILD_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE CHILD_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE COLLATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE COLUMN_CLUSTER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE COLUMN_CLUSTER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE COLUMN_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE COLUMN_STORE_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE COLUMN_STORE_INDEX_MEMBER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE COLUMN_STORE_INDEX_MEMBERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CHANGE_DATA_CAPTURE (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STATISTICS (ID@);

ALTER TABLE COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE COMMON_TABLE_EXPRESSION
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE COMPRESS_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE COMPRESS_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE CONTROL_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE COUCHBASE_ANALYZER_CHARACTER_FILTERS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_ANALYZER_DATE_TIME_PARSER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_ANALYZER_TOKEN_FILTERS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_ANALYZER_TOKENIZER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_ANALYZER_WORD_LIST
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_COLLECTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE COUCHBASE_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE COUCHBASE_FULLTEXT_ANALYZER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_FULLTEXT_TYPEMAPPING
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE COUCHBASE_FULLTEXTINDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE COUCHBASE_GLOBALINDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE COUCHBASE_SCOPE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE CURRENT_CLIENT_ACCOUNTING_CONNECTION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE CURRENT_CLIENT_APPLICATION_CONNECTION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE CURRENT_CLIENT_USER_ID_CONNECTION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE CURRENT_CLIENT_WORKSTATION_CONNECTION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE CUSTOM_COLORS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE DATA_MOVEMENT_RULE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATA_SOURCE_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_SOURCE_TABLE (ID@);

ALTER TABLE DATA_SOURCE_OBJECT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATA_SOURCE_TABLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_SOURCE_OBJECT (ID@);

ALTER TABLE DATA_SOURCES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE DATA_SOURCES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE DATA_VAULT_BRIDGE_DEFAULTS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATA_VAULT_CHANGES_LOG
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE DATA_VAULT_OBJECT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATA_VAULT_OBJECT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE DATA_VAULT_OBJECT_PROPERTIES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATA_VAULT_OBJECT_PROPERTIES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_VAULT_OBJECT (ID@);

ALTER TABLE DATA_VAULT_OBJECT_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE DATABASE_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE DATABASE_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE DATABASE_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE DATABASE_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATABASE_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PRE_AUTH_ROLES (ID@);

ALTER TABLE DATABASE_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES BLOCKED_ROLES (ID@);

ALTER TABLE DATABASE_ROLE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE DATABASE_ROLES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE DATABASE_SCOPED_CREDENTIAL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATABRICKS_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DATABRICKS_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DB2_ALL_BUFFERPOOL_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_ALL_SCHEMA_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_AUXILIARY_TABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_BUFFERPOOL_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_BUFFERPOOLS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DB2_DATABASE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_FILE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_FUNCTION_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_ORGANIZATION_KEY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE DB2_SCHEMA_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_SEQUENCE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_SQL_PATH_SCHEMAS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE DB2_STORAGE_GROUP_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_STORED_PROCEDURE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_SYSTEM_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_TABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_TABLESPACE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DB2_TABLESPACE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_USER_DEFINED_TYPE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DB2_VIEW_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DEFAULT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DEFAULT_CONSTRAINT_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE DEFAULT_CONSTRAINT_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE DEPENDENT_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKEN_FILTERS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_LIBRARY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_SYNONYM (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_COLXN_PERMISSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE_PERMISSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH_EDGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_TASKS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_VIEW_LINKS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUDIT_COMPONENT_ACTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUDIT_STANDARD_ACTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AVRO_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_BACKUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DCVALUES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_TAGS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION_USAGES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES BLOCKED_ROLES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHEDVIEW_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DCVALUES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CAST (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLLATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_CLUSTER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX_MEMBER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_CHARACTER_FILTERS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_DATE_TIME_PARSER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKENIZER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_WORD_LIST (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_COLLECTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_ANALYZER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_TYPEMAPPING (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_SCOPE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_MOVEMENT_RULE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_OBJECT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_TABLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_BRIDGE_DEFAULTS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT_PROPERTIES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_SCOPED_CREDENTIAL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT_CONSTRAINT_USAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DISPLAY_FORMAT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_LOGICAL_DEFINITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING_ENTRY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DYNAMODB_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENCRYPTION_KEY_VALUE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_LINE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_NODE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_RELATIONSHIP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_SUBTYPE_SYMBOL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTENDED_NOTES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES XML_INDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE_SPEC (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FLASHBACK_ARCHIVE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_PERSISTENT_DATA_SET (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_VARIABLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_LABEL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX_MEMBER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_BUCKET_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SKEWED_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SORTED_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ILM (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES IMAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INFORMIX_DBSPACE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INGRES_LOCATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES JSON_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP_MEMBER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_SEQUENCE_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES LINK (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES LOCK (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MACRO (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_EVENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_PARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_SERVER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_UDF_FUNCTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MASTER_KEY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES METHOD (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE_OBJECT_DEFINITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MONGODB_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_EVENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_LOGFILEGROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_PARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SERVER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SPATIALREFSYSTEM (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_TABLESPACE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_UDF_FUNCTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX_LABEL_LIST (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABEL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABELSORTYPES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_RELATIONSHIP_LIST (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_ROLEPRIVILEGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NSM_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NSM_OPTION_NAME_STRUCTURE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ATTRIBUTE_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLOG_FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_INDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONSTRAINT_STATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONTEXT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATA_FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE_LINK (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DIRECTORY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DISK_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_EDITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENCRYPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_FAIL_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INMEMORY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_JAVA (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIBRARY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_PARAMETERS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOCATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOG_FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OBJECT_OID (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OVERFLOW_INDEX_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_BOUNDARY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITIONING_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_OBJECT_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_STORAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_QUALIFIED_DISK (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RESOLVER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLLBACK_SEGMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_TABLE_COMPRESSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_USER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_USER_SIZE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES OWNER_OVERRIDE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_SETUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_STYLE_SHEET (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARAMETER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARQUET_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_BOUNDARY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PGSQL_VARIABLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PIPE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PRE_AUTH_ROLES (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROFILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROGRESS_AREA (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RETURN_TABLE_ORDER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ROLE_USAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RS_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCRIPT_TEMPLATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_ELEMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHARE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_DATABASE_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_FILE_FORMAT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_FUNCTION_PARAMETER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_USER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_USER_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SPATIAL_INDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE_PARAMETER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ALWAYS_ENCRYPTED_KEY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AUDIT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CHANGE_DATA_CAPTURE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CREDENTIAL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CRYPTOGRAPHIC_PROVIDER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATA_COMPRESSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_ENCRYPTION_KEY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_DATA_SOURCE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_FILE_FORMAT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FILEGROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX_COLUMN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPLIST (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPWORD (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PHYSICAL_FILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_RESOURCE_POOL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_AUDIT_SPECIFICATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_WORKLOAD_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_XML_SCHEMA_COLLECTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STAGE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STAGE_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STATISTICS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_INTEGRATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STREAM (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STYLE_LIBRARY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYBASE_SEGMENT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNAPSE_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNONYM (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLE_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK_SESSION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_AUTHORIZATION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_DATABASE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_PROFILE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE_SET (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_ROLE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE_ROOT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER_TEMPLATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_ATTRIBUTE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_USER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_ACTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_POLICY (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL_PARTITION_EXCEPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_COLUMN_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DIMENSION_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_HISTOGRAM_TEMPLATE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_INDEX_EXTENSION_EXPLOITATION_RULE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVICE_CLASS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLE_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE_CONTAINER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_THRESHOLD (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TYPE_MAPPING (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION_SET (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER_OPTION (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_ATTRIBUTE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALID_VALUE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALIDATION_RULE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW_PERMISSIONS (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW_TAG (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES WAREHOUSE (ID@);

ALTER TABLE DEPENDENT_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES WAREHOUSE_TAG (ID@);

ALTER TABLE DETERMINED_BY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE DISCRIMINATOR_ATTRIBUTES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE DISK_VOLUMES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE DISPLAY_FORMAT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DOMAIN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DRAWING_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE DRAWING_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE DRAWING_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE DRAWING_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE DRAWING_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE DRAWING_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE DSM_DT_LOGICAL_DEFINITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE DSM_DT_MAPPING
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE DSM_DT_MAPPING_ENTRY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_DT_MAPPING (ID@);

ALTER TABLE DSM_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE DYNAMODB_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE ENCRYPTION_KEY_VALUE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_ALWAYS_ENCRYPTED_KEY (ID@);

ALTER TABLE ENTITIES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_GROUP (ID@);

ALTER TABLE ENTITY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ENTITY_DEFINITION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE ENTITY_DEFINITION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE ENTITY_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE ENTITY_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE ENTITY_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ENTITY_TAG_LIST_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ER_DIAGRAM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE ER_DIAGRAM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ER_DIAGRAM_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE ER_DIAGRAM_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE ER_DIAGRAM_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE ER_MODEL_SHAPE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE ER_SHAPE_LINE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE ER_SHAPE_NODE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE ER_SHAPE_RELATIONSHIP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE ER_SHAPE_SUBTYPE_SYMBOL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE EXCLUDE_ELEMENTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_ANALYZER_TOKENIZER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES WAREHOUSE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_SYNONYM (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ANNOTATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_COLXN_PERMISSION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_DATABASE_PERMISSION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_GRAPH_EDGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_TASKS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ARANGODB_VIEW_LINKS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AVRO_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_BACKUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_KEYSPACE_DCVALUES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_KEYSPACE_TAGS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_REGION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AWS_REGION_USAGES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES BLOCKED_ROLES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHEDVIEW_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CASSANDRA_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CASSANDRA_DCVALUES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CAST (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLLATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_STORE_INDEX_MEMBER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_ANALYZER_CHARACTER_FILTERS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_ANALYZER_DATE_TIME_PARSER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_ANALYZER_TOKEN_FILTERS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_ANALYZER_WORD_LIST (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_COLLECTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXT_ANALYZER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXT_TYPEMAPPING (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_SCOPE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_MOVEMENT_RULE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_SOURCE_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_SOURCE_OBJECT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_SOURCE_TABLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_VAULT_OBJECT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATA_VAULT_OBJECT_PROPERTIES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_SCOPED_CREDENTIAL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABRICKS_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABRICKS_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DB2_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DEFAULT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DEFAULT_CONSTRAINT_USAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DISPLAY_FORMAT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_DT_LOGICAL_DEFINITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_DT_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_DT_MAPPING_ENTRY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DYNAMODB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENCRYPTION_KEY_VALUE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_SHAPE_LINE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_SHAPE_NODE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_SHAPE_RELATIONSHIP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_SHAPE_SUBTYPE_SYMBOL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTENDED_NOTES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES XML_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FILE_SPEC (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FLASHBACK_ARCHIVE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GLOBAL_PERSISTENT_DATA_SET (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GLOBAL_VARIABLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GOOGLE_BIGQUERY_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GOOGLE_BIGQUERY_LABEL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HASH_INDEX_MEMBER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HIVE_BUCKET_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HIVE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HIVE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HIVE_SKEWED_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HIVE_SORTED_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES IMAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES INFORMIX_DBSPACE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES INGRES_LOCATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES JSON_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP_MEMBER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_SEQUENCE_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES LINK (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MACRO (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_EVENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_SERVER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_UDF_FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MASTER_KEY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES METHOD (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODULE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODULE_OBJECT_DEFINITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MONGODB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_EVENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_LOGFILEGROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_SERVER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_SPATIALREFSYSTEM (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_UDF_FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALINDEX_LABEL_LIST (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_LABEL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_LABELSORTYPES (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_RELATIONSHIP_LIST (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_ROLEPRIVILEGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ATTRIBUTE_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLOG_FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLUSTER_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLUSTER_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CONSTRAINT_STATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CONTEXT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DATA_FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DATABASE_LINK (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DIRECTORY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DISK_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_EDITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_FAIL_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_JAVA (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LIST_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LOB_PARAMETERS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LOCATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LOG_FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_OBJECT_OID (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_OVERFLOW_INDEX_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_BOUNDARY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITIONING_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PHYSICAL_FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PHYSICAL_OBJECT_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PHYSICAL_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_QUALIFIED_DISK (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ROLLBACK_SEGMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_USER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES OWNER_OVERRIDE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PAGE_SETUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PAGE_STYLE_SHEET (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PARAMETER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PARQUET_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PARTITION_BOUNDARY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PARTITION_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PARTITION_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PERMISSION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PGSQL_VARIABLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PIPE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PROFILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PROGRESS_AREA (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES RETURN_TABLE_ORDER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ROLE_USAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES RS_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCHEMA (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCHEMA_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCRIPT_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_LABEL_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SEQUENCE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SEQUENCE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SHAPE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SHARE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_FILE_FORMAT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_TAG (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_USER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SPATIAL_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_AGGREGATE_PARAMETER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_ALWAYS_ENCRYPTED_KEY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_AUDIT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_CHANGE_DATA_CAPTURE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_CREDENTIAL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_CRYPTOGRAPHIC_PROVIDER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATA_COMPRESSION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE_ENCRYPTION_KEY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_EXTERNAL_DATA_SOURCE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_EXTERNAL_FILE_FORMAT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FILEGROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_INDEX_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_STOPLIST (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_STOPWORD (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_PHYSICAL_FILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_RESOURCE_POOL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_SERVER_AUDIT_SPECIFICATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_SERVER_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_WORKLOAD_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_XML_SCHEMA_COLLECTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STAGE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STATISTICS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORAGE_INTEGRATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STREAM (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STYLE_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SYBASE_SEGMENT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SYNAPSE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SYNONYM (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TABLE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TABLESPACE_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TABLESPACE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TASK (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TASK_SESSION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_AUTHORIZATION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_PROFILE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_REPLICATION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_REPLICATION_RULE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_REPLICATION_RULE_SET (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_SECURE_ZONE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_SECURE_ZONE_ROOT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES THEME (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRIGGER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRIGGER_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRUSTED_CONTEXT_ATTRIBUTE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRUSTED_CONTEXT_USER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_AUDIT_ACTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_AUDIT_POLICY (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_BUFFERPOOL_PARTITION_EXCEPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_COLUMN_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_DATABASE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_DATABASE_PARTITION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_DIMENSION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_EVENT_MONITOR (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_FUNCTION_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_FUNCTION_MAPPING_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_HISTOGRAM_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_INDEX_EXTENSION_EXPLOITATION_RULE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_SERVER_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_SERVICE_CLASS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_TABLE_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_TABLESPACE_CONTAINER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_THRESHOLD (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_TYPE_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_USER_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_USER_MAPPING_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORK_ACTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORK_ACTION_SET (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORK_CLASS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WRAPPER (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WRAPPER_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDT_ATTRIBUTE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDT_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_ID (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VALID_VALUE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VALIDATION_RULE (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKENIZER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_SYNONYM (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_COLXN_PERMISSION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE_PERMISSION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH_EDGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_TASKS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_VIEW_LINKS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AVRO_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_BACKUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DCVALUES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_TAGS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION_USAGES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES BLOCKED_ROLES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHEDVIEW_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DCVALUES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CAST (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLLATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX_MEMBER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_CHARACTER_FILTERS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_DATE_TIME_PARSER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKEN_FILTERS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_WORD_LIST (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_COLLECTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_ANALYZER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_TYPEMAPPING (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_SCOPE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_MOVEMENT_RULE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_OBJECT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_TABLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT_PROPERTIES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_SCOPED_CREDENTIAL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT_CONSTRAINT_USAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DISPLAY_FORMAT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_LOGICAL_DEFINITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING_ENTRY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DYNAMODB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENCRYPTION_KEY_VALUE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_LINE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_NODE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_RELATIONSHIP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_SUBTYPE_SYMBOL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTENDED_NOTES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES XML_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE_SPEC (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FLASHBACK_ARCHIVE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_PERSISTENT_DATA_SET (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_VARIABLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_LABEL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX_MEMBER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_BUCKET_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SKEWED_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SORTED_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES IMAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INFORMIX_DBSPACE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INGRES_LOCATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES JSON_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP_MEMBER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_SEQUENCE_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES LINK (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MACRO (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_EVENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_SERVER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_UDF_FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MASTER_KEY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES METHOD (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE_OBJECT_DEFINITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MONGODB_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_EVENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_LOGFILEGROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SERVER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SPATIALREFSYSTEM (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_UDF_FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX_LABEL_LIST (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABEL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABELSORTYPES (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_RELATIONSHIP_LIST (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_ROLEPRIVILEGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NSM_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ATTRIBUTE_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLOG_FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONSTRAINT_STATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONTEXT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATA_FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE_LINK (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DIRECTORY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DISK_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_EDITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_FAIL_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_JAVA (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_PARAMETERS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOCATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOG_FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OBJECT_OID (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OVERFLOW_INDEX_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_BOUNDARY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITIONING_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_OBJECT_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_STORAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_QUALIFIED_DISK (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLLBACK_SEGMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_USER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES OWNER_OVERRIDE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_SETUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_STYLE_SHEET (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARAMETER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARQUET_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_BOUNDARY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PGSQL_VARIABLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PIPE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROFILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROGRESS_AREA (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RETURN_TABLE_ORDER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ROLE_USAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RS_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCRIPT_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_ELEMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHARE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_FILE_FORMAT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_TAG (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_USER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SPATIAL_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE_PARAMETER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ALWAYS_ENCRYPTED_KEY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AUDIT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CHANGE_DATA_CAPTURE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CREDENTIAL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CRYPTOGRAPHIC_PROVIDER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATA_COMPRESSION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_ENCRYPTION_KEY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_DATA_SOURCE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_FILE_FORMAT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FILEGROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX_COLUMN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPLIST (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPWORD (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PHYSICAL_FILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_RESOURCE_POOL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_AUDIT_SPECIFICATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_WORKLOAD_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_XML_SCHEMA_COLLECTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STAGE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STATISTICS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_INTEGRATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STREAM (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STYLE_LIBRARY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYBASE_SEGMENT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNAPSE_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNONYM (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK_SESSION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_AUTHORIZATION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_DATABASE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_PROFILE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE_SET (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_ROLE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE_ROOT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_ATTRIBUTE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_USER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_ACTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_POLICY (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL_PARTITION_EXCEPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_COLUMN_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DIMENSION_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_HISTOGRAM_TEMPLATE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_INDEX_EXTENSION_EXPLOITATION_RULE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVICE_CLASS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLE_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE_CONTAINER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_THRESHOLD (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TYPE_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION_SET (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER_OPTION (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_ATTRIBUTE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALID_VALUE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALIDATION_RULE (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW_PERMISSIONS (ID@);

ALTER TABLE EXTENDED_NOTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES WAREHOUSE (ID@);

ALTER TABLE EXTERNAL_LANGUAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE EXTERNAL_LANGUAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE EXTERNAL_LIBRARY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE FILE_NAMES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLOG_FILE (ID@);

ALTER TABLE FILE_NAMES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATA_FILE (ID@);

ALTER TABLE FILE_NAMES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOG_FILE (ID@);

ALTER TABLE FILE_SPEC
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE FILE_SPEC
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE FILE_SPEC_LIB_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE FILE_SPEC_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE FILE_SPEC_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE FLASHBACK_ARCHIVE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE FUNCTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE FUNCTION_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE FUNCTIONS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE FUNCTIONS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE FUNCTIONS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE FUNCTIONS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE FUNCTIONS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE GENERAL_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE GENERAL_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE GENERAL_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE GLOBAL_PERSISTENT_DATA_SET
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE GLOBAL_VARIABLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE GLOSSARY_WORD_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NSM_OPTION (ID@);

ALTER TABLE GOOGLE_BIGQUERY_CLUSTERING_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE GOOGLE_BIGQUERY_CLUSTERING_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE GOOGLE_BIGQUERY_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE GOOGLE_BIGQUERY_LABEL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE GOOGLE_BIGQUERY_LABEL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GOOGLE_BIGQUERY_DATABASE (ID@);

ALTER TABLE GOOGLE_BIGQUERY_LABEL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE GOOGLE_BIGQUERY_LABEL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE HASH_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE HASH_INDEX_MEMBER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE HASH_INDEX_MEMBERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKENIZER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_LIBRARY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_SYNONYM (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_COLXN_PERMISSION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE_PERMISSION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH_EDGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_TASKS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_VIEW_LINKS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AVRO_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_BACKUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DCVALUES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_TAGS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION_USAGES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES BLOCKED_ROLES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHEDVIEW_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DCVALUES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CAST (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLLATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX_MEMBER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_CHARACTER_FILTERS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_DATE_TIME_PARSER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKEN_FILTERS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_WORD_LIST (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_COLLECTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_ANALYZER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_TYPEMAPPING (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_SCOPE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_MOVEMENT_RULE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_OBJECT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_TABLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT_PROPERTIES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_SCOPED_CREDENTIAL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT_CONSTRAINT_USAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DISPLAY_FORMAT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_LOGICAL_DEFINITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING_ENTRY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DYNAMODB_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENCRYPTION_KEY_VALUE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_LINE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_NODE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_RELATIONSHIP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_SUBTYPE_SYMBOL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTENDED_NOTES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES XML_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE_SPEC (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FLASHBACK_ARCHIVE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_PERSISTENT_DATA_SET (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_VARIABLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_LABEL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX_MEMBER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_BUCKET_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SKEWED_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SORTED_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES IMAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INFORMIX_DBSPACE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INGRES_LOCATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES JSON_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP_MEMBER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_SEQUENCE_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES LINK (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MACRO (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_EVENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_SERVER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_UDF_FUNCTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MASTER_KEY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES METHOD (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE_OBJECT_DEFINITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MONGODB_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_EVENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_LOGFILEGROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SERVER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SPATIALREFSYSTEM (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_TABLESPACE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_UDF_FUNCTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX_LABEL_LIST (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABEL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABELSORTYPES (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_RELATIONSHIP_LIST (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_ROLEPRIVILEGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NSM_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ATTRIBUTE_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLOG_FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONSTRAINT_STATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONTEXT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATA_FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE_LINK (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DIRECTORY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DISK_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_EDITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_FAIL_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_JAVA (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIBRARY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_PARAMETERS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOCATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOG_FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OBJECT_OID (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OVERFLOW_INDEX_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_BOUNDARY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITIONING_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_OBJECT_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_STORAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_QUALIFIED_DISK (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLLBACK_SEGMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_USER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES OWNER_OVERRIDE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_SETUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_STYLE_SHEET (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARAMETER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARQUET_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_BOUNDARY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_ELEMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PGSQL_VARIABLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PIPE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROFILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROGRESS_AREA (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RETURN_TABLE_ORDER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ROLE_USAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RS_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCRIPT_TEMPLATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_ELEMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHARE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_FILE_FORMAT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_TAG (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_USER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SPATIAL_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE_PARAMETER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ALWAYS_ENCRYPTED_KEY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AUDIT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CHANGE_DATA_CAPTURE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CREDENTIAL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CRYPTOGRAPHIC_PROVIDER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATA_COMPRESSION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_ENCRYPTION_KEY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_DATA_SOURCE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_FILE_FORMAT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FILEGROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX_COLUMN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPLIST (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPWORD (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PHYSICAL_FILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_RESOURCE_POOL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_AUDIT_SPECIFICATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_WORKLOAD_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_XML_SCHEMA_COLLECTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STAGE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STATISTICS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_INTEGRATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STREAM (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STYLE_LIBRARY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYBASE_SEGMENT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNAPSE_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNONYM (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLE_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK_SESSION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_AUTHORIZATION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_DATABASE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_PROFILE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE_SET (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_ROLE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE_ROOT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER_TEMPLATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_ATTRIBUTE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_USER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_ACTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_POLICY (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL_PARTITION_EXCEPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_COLUMN_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DIMENSION_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_HISTOGRAM_TEMPLATE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_INDEX_EXTENSION_EXPLOITATION_RULE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVICE_CLASS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLE_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE_CONTAINER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_THRESHOLD (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TYPE_MAPPING (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION_SET (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER_OPTION (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_ATTRIBUTE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALID_VALUE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALIDATION_RULE (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW_PERMISSIONS (ID@);

ALTER TABLE HISTORY_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES WAREHOUSE (ID@);

ALTER TABLE HIVE_BUCKET_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE HIVE_BUCKET_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_BUCKET_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_CTAS_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE HIVE_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE HIVE_DATABASE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE HIVE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE HIVE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_PARTITION_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_PARTITION_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE HIVE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE HIVE_SKEWED_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE HIVE_SKEWED_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_SKEWED_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_SORTED_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE HIVE_SORTED_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_SORTED_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE HIVE_TABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE HIVE_VIEW_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE IMAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE INCLUDE_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE INCLUDE_ELEMENTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE INDEX_EXTENSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE INDEX_EXTENSION_EXPRESSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE INDEX_MEMBERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE INFORMIX_DBSPACE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE INGRES_LOCATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE JSON_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE KEY_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE KEY_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE KEY_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE KEY_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE KEY_GROUP_MEMBER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE KEY_GROUP_MEMBERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE KEY_SEQUENCE_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE KEY_SEQUENCE_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE KEY_SEQUENCE_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE KEY_SEQUENCE_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE LINK
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE LOCK
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE MACRO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MACROS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE MACROS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE MACROS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE MARIADB_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MARIADB_ENTITY_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE MARIADB_ENTITY_PARTITION_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE MARIADB_EVENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MARIADB_PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE MARIADB_PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE MARIADB_SERVER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MARIADB_SUBPARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MARIADB_PARTITION_ELEMENT (ID@);

ALTER TABLE MARIADB_SUBPARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_PARTITION_ELEMENT (ID@);

ALTER TABLE MARIADB_UDF_FUNCTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MASTER_KEY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MEMBER_ROLES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE MEMBER_SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE MEMBER_TYPES_REF
ADD CONSTRAINT REFERENCES FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE MEMBER_TYPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (VALUE@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE METHOD
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE METHOD_DATA_TYPES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE METHOD_DATA_TYPES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE MODEL_DIAGRAMTAB_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE MODEL_DIAGRAMTAB_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE MODEL_SOURCE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MODULE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MODULE_OBJECT_DEFINITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODULE (ID@);

ALTER TABLE MONGODB_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MONGODB_DATABASE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE MONGODB_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE MYSQL_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MYSQL_ENTITY_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE MYSQL_ENTITY_PARTITION_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE MYSQL_EVENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MYSQL_LOGFILEGROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MYSQL_PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE MYSQL_PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE MYSQL_SERVER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MYSQL_SPATIALREFSYSTEM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MYSQL_SUBPARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MYSQL_PARTITION_ELEMENT (ID@);

ALTER TABLE MYSQL_SUBPARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_PARTITION_ELEMENT (ID@);

ALTER TABLE MYSQL_TABLESPACE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE MYSQL_UDF_FUNCTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NEO4J_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NEO4J_GLOBALCONSTRAINT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NEO4J_GLOBALINDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NEO4J_GLOBALINDEX_LABEL_LIST
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE NEO4J_GLOBALINDEX_LABEL_LIST_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE NEO4J_LABEL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NEO4J_LABELSORTYPES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE NEO4J_RELATIONSHIP_LIST
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE NEO4J_RELATIONSHIP_LIST
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE NEO4J_RELATIONSHIP_LIST_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE NEO4J_RELATIONSHIP_LIST_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE NEO4J_ROLEPRIVILEGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE NEO4J_ROLEPRIVILEGE_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE NETEZZA_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE NOSQL_USERDEFINEDTYPE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKENIZER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_LIBRARY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_SYNONYM (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_COLXN_PERMISSION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_DATABASE_PERMISSION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_GRAPH_EDGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_TASKS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ARANGODB_VIEW_LINKS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUDIT_POLICY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AVRO_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_BACKUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_DCVALUES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_KEYSPACE_TAGS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES AWS_REGION_USAGES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES BLOCKED_ROLES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHEDVIEW_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_DCVALUES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CAST (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLLATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX_MEMBER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_CHARACTER_FILTERS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_DATE_TIME_PARSER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_TOKEN_FILTERS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_ANALYZER_WORD_LIST (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_COLLECTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_ANALYZER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXT_TYPEMAPPING (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_SCOPE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_MOVEMENT_RULE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_OBJECT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_SOURCE_TABLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATA_VAULT_OBJECT_PROPERTIES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABASE_SCOPED_CREDENTIAL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DATABRICKS_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DEFAULT_CONSTRAINT_USAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DISPLAY_FORMAT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_LOGICAL_DEFINITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_DT_MAPPING_ENTRY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DSM_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DYNAMODB_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENCRYPTION_KEY_VALUE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_LINE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_NODE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_RELATIONSHIP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_SHAPE_SUBTYPE_SYMBOL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTENDED_NOTES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES XML_INDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FILE_SPEC (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FLASHBACK_ARCHIVE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_PERSISTENT_DATA_SET (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GLOBAL_VARIABLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_LABEL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES GOOGLE_BIGQUERY_RETURN_TABLE_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX_MEMBER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_BUCKET_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SKEWED_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HIVE_SORTED_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES IMAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INFORMIX_DBSPACE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INGRES_LOCATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES JSON_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP_MEMBER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_SEQUENCE_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES LINK (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MACRO (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_ENTITY_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_EVENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_SERVER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MARIADB_UDF_FUNCTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MASTER_KEY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES METHOD (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODULE_OBJECT_DEFINITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MONGODB_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_ENTITY_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_EVENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_LOGFILEGROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SERVER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_SPATIALREFSYSTEM (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_TABLESPACE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MYSQL_UDF_FUNCTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX_LABEL_LIST (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABEL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_LABELSORTYPES (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_RELATIONSHIP_LIST (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_ROLEPRIVILEGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NSM_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ATTRIBUTE_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLOG_FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER_INDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONSTRAINT_STATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CONTEXT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATA_FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DATABASE_LINK (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DIRECTORY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_DISK_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_EDITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_FAIL_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_JAVA (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIBRARY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_PARAMETERS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOCATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LOG_FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OBJECT_OID (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_OVERFLOW_INDEX_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_BOUNDARY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITIONING_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_OBJECT_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PHYSICAL_STORAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_QUALIFIED_DISK (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ROLLBACK_SEGMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_USER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES OWNER_OVERRIDE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_SETUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PAGE_STYLE_SHEET (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARAMETER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARQUET_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_BOUNDARY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PARTITION_ELEMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PGSQL_VARIABLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PIPE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROFILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PROGRESS_AREA (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RETURN_TABLE_ORDER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ROLE_USAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RS_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCHEMA_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SCRIPT_TEMPLATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_ELEMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SEQUENCE_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHARE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_FILE_FORMAT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_TAG (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SNOWFLAKE_USER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SPATIAL_INDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AGGREGATE_PARAMETER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ALWAYS_ENCRYPTED_KEY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_AUDIT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CHANGE_DATA_CAPTURE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CREDENTIAL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_CRYPTOGRAPHIC_PROVIDER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATA_COMPRESSION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_ENCRYPTION_KEY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_DATA_SOURCE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_EXTERNAL_FILE_FORMAT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FILEGROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_INDEX_COLUMN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPLIST (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_FULLTEXT_STOPWORD (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PHYSICAL_FILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_RESOURCE_POOL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_AUDIT_SPECIFICATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SERVER_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_WORKLOAD_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_XML_SCHEMA_COLLECTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STAGE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STATISTICS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORAGE_INTEGRATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STREAM (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STYLE_LIBRARY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYBASE_SEGMENT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNAPSE_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SYNONYM (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLE_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TABLESPACE_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK_SESSION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_AUTHORIZATION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_DATABASE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_PROFILE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_REPLICATION_RULE_SET (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_ROLE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE_ROOT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER_TEMPLATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_ATTRIBUTE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRUSTED_CONTEXT_USER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_ACTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_AUDIT_POLICY (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL_PARTITION_EXCEPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_COLUMN_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DIMENSION_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_EVENT_MONITOR_GROUP (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_FUNCTION_MAPPING_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_HISTOGRAM_TEMPLATE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_INDEX_EXTENSION_EXPLOITATION_RULE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVER_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_SERVICE_CLASS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLE_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TABLESPACE_CONTAINER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_THRESHOLD (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_TYPE_MAPPING (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_USER_MAPPING_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_ACTION_SET (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WRAPPER_OPTION (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_ATTRIBUTE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDT_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALID_VALUE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VALIDATION_RULE (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW_PERMISSIONS (ID@);

ALTER TABLE NOTE_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES WAREHOUSE (ID@);

ALTER TABLE NSM_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE NSM_OPTION_NAME_STRUCTURE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NSM_OPTION (ID@);

ALTER TABLE OBJECT_MAP_SOURCE_LONG_IDS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE OBJECT_MAP_TARGET_LONG_IDS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE OBJECT_TYPE
ADD CONSTRAINT IS_A FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE ORACLE_ATTRIBUTE_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE ORACLE_ATTRIBUTE_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_BITMAPJOININDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_CACHED_VIEW_LOG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_CLOG_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE ORACLE_CLUSTER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_CLUSTER_COLUMN_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE ORACLE_CLUSTER_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_CLUSTER_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_CLUSTER_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE ORACLE_CLUSTERING_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_COMPOSITE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_COMPOSITE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE ORACLE_COMPOSITE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_CONSTRAINT_STATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CHECK_CONSTRAINT_USAGE (ID@);

ALTER TABLE ORACLE_CONSTRAINT_STATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE ORACLE_CONSTRAINT_STATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_CONSTRAINT_STATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE ORACLE_CONTEXT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE ORACLE_DATA_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE ORACLE_DATA_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CONTROL_FILE (ID@);

ALTER TABLE ORACLE_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_DATABASE_LINK
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_DB_EVENTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE ORACLE_DDL_EVENTS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE ORACLE_DIRECTORY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_DIRECTORY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_DIRECTORY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_DISK_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_EDITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_ENCRYPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE ORACLE_ENTITY_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_ENTITY_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE ORACLE_ENTITY_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_ENTITY_SUBPARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE ORACLE_FAIL_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DISK_GROUP (ID@);

ALTER TABLE ORACLE_HASH_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE ORACLE_HASH_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_HASH_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE ORACLE_HASH_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_INDEX_GLOBAL_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_INDEX_LOCAL_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_INDEX_PARTITION_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_INDIVIDUAL_HASH_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE ORACLE_INDIVIDUAL_HASH_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE ORACLE_INDIVIDUAL_HASH_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE ORACLE_INMEMORY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ILM (ID@);

ALTER TABLE ORACLE_JAVA
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_LIBRARY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_LIST_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_LIST_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE ORACLE_LIST_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_LIST_PARTITION_INFO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LIST_PARTITION (ID@);

ALTER TABLE ORACLE_LIST_PARTITION_INFO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE ORACLE_LOB_PARAMETERS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LOB_STORAGE (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITIONING_STORAGE (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE ORACLE_LOB_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE ORACLE_LOCATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_LOCATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_LOG_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE ORACLE_OBJECT_OID
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE ORACLE_OBJECT_OID
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_OVERFLOW_INDEX_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_OVERFLOW_INDEX_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_OVERFLOW_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE ORACLE_OVERFLOW_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE ORACLE_OVERFLOW_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE ORACLE_PACKAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_PARTITION_BOUNDARIES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_PARTITION_BOUNDARIES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_PARTITION_BOUNDARY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_PARTITION_BOUNDARY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE ORACLE_PARTITION_COLUMNS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_PARTITION_DESCRIPTION_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE ORACLE_PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE ORACLE_PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE ORACLE_PARTITION_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_PARTITION_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_PARTITION_TEMPLATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE ORACLE_PARTITIONING_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE ORACLE_PARTITIONING_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE ORACLE_PARTITIONING_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE ORACLE_PHYSICAL_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CLUSTER (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ROLLBACK_SEGMENT (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_TABLESPACE (ID@);

ALTER TABLE ORACLE_PHYSICAL_OBJECT_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ATTRIBUTE_STORAGE (ID@);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDIVIDUAL_HASH_PARTITION (ID@);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_LOB_PARAMETERS (ID@);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_OBJECT_OID (ID@);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE ORACLE_PHYSICAL_STORAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_QUALIFIED_DISK
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_FAIL_GROUP (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_CACHED_VIEW_LOG (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION_INFO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION_INFO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION_INFO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_RANGE_PARTITION (ID@);

ALTER TABLE ORACLE_RANGE_PARTITION_INFO
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE ORACLE_RESOLVER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_JAVA (ID@);

ALTER TABLE ORACLE_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_ROLLBACK_SEGMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_SUBPARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE ORACLE_SUBPARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_SUBPARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_SUBPARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_TEMPLATE (ID@);

ALTER TABLE ORACLE_SUBPARTITION_SPEC
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE ORACLE_SUBPARTITION_SPEC
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_SUBPARTITION_SPEC_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE ORACLE_SUBPARTITION_TEMPLATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE ORACLE_SUPLOG_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_SUPPLEMENTAL_LOG_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE ORACLE_SUPPLEMENTAL_LOG_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_SUPPLEMENTAL_LOG_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_SUPPLEMENTLOG_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUPPLEMENTAL_LOG_GROUP (ID@);

ALTER TABLE ORACLE_TABLE_CLUSTER_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE ORACLE_TABLE_CLUSTER_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_TABLE_COMPRESSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE ORACLE_TABLESPACE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_BITMAPJOININDEX (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_COMPOSITE_PARTITION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_HASH_PARTITION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_GLOBAL_PARTITION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_INDEX_LOCAL_PARTITION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_DESCRIPTION (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_ELEMENT (ID@);

ALTER TABLE ORACLE_USER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE ORACLE_USER_SIZE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_USER (ID@);

ALTER TABLE OWNER_OVERRIDE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE PACKAGE_NAMES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE PACKAGE_NAMES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE PAGE_SETUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE PAGE_STYLE_SHEET
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PAGE_SETUP (ID@);

ALTER TABLE PAGE_STYLE_SHEET
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_FULLTEXTINDEX (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MACRO (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES METHOD (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CASSANDRA_AGGREGATE (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COUCHBASE_GLOBALINDEX (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DOMAIN (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MACRO (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES METHOD (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALCONSTRAINT (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NEO4J_GLOBALINDEX (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES NOSQL_USERDEFINEDTYPE (ID@);

ALTER TABLE PARAMETER_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE PARAMETER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE PARAMETER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE PARENT_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE PARENT_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PARENT_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE PARENT_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE PARENT_RELATIONSHIPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE PARQUET_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE PARTITION_BOUNDARY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PARTITION_ELEMENT (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE PARTITION_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_PARTITION (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_ENTITY_SUBPARTITION (ID@);

ALTER TABLE PARTITION_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE PARTITION_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE PARTITION_ELEMENTS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_LIST_PARTITION_INFO (ID@);

ALTER TABLE PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_PARTITION_TEMPLATE (ID@);

ALTER TABLE PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_RANGE_PARTITION_INFO (ID@);

ALTER TABLE PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ORACLE_SUBPARTITION_SPEC (ID@);

ALTER TABLE PARTITION_VALUES
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_FUNCTION (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_SYNONYM (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DOMAIN (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES AUXILIARY_TABLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DB2_DATABASE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DB2_TABLESPACE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES XML_INDEX (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FILE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GLOBAL_PERSISTENT_DATA_SET (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES GLOBAL_VARIABLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HIVE_DATABASE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MACRO (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODULE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MONGODB_DATABASE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCHEMA (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SEQUENCE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_APPLICATION_ROLE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_ASYMMETRIC_KEY (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_CERTIFICATE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_CATALOG (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_XML_SCHEMA_COLLECTION (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORAGE_GROUP (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SYNONYM (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_AUTHORIZATION (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_DATABASE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_ID (ID@);

ALTER TABLE PERMISSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_DATABASE (ID@);

ALTER TABLE PERMISSION_RECIPIENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PERMISSION (ID@);

ALTER TABLE PGSQL_VARIABLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE PHYSICAL_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE PHYSICAL_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE PHYSICAL_COLUMNS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE PIPE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE PRE_AUTH_ROLES
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE PRE_AUTHORIZED_ROLES_LIST_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_INTEGRATION (ID@);

ALTER TABLE PRE_DATA_VAULT_ENTITIES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_DATABASE_AUDIT_ACTION (ID@);

ALTER TABLE PROFILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE PROPERTY_TYPE
ADD CONSTRAINT REFERENCED_TYPE_REF FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE PROPERTY_TYPE
ADD CONSTRAINT IS_A FOREIGN KEY (REFERENCED_TYPE_REF) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE PROPERTY_TYPE
ADD CONSTRAINT PARTICIPATING_OBJECT_REF FOREIGN KEY (PARTICIPATING_OBJECT_REF) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE PROPERTY_TYPE
ADD CONSTRAINT PARTICIPATING_PROPERTY_REF FOREIGN KEY (PARTICIPATING_PROPERTY_REF) REFERENCES PROPERTY_TYPE (ID@);

ALTER TABLE REDSHIFT_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE REFERENCE_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE RELATIONSHIP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE RESULT_SETS_TO_RETURN
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE RETURN_TABLE_ORDER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE RETURN_TABLE_ORDERS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_ROLE (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_USER_ROLE (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_LOGIN (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_ROLE (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_ID (ID@);

ALTER TABLE ROLE_USAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_GROUP_ROLE (ID@);

ALTER TABLE RS_DIST_KEY_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE RS_DIST_KEY_COLUMN_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE RS_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE RS_PARTITION_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE SCHEMA
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES PIPE (ID@);

ALTER TABLE SCHEMA
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_FILE_FORMAT (ID@);

ALTER TABLE SCHEMA
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STAGE (ID@);

ALTER TABLE SCHEMA
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SCHEMA_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCHEMA (ID@);

ALTER TABLE SCHEMA_REF_PERMISSION
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SCHEMA_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCHEMA (ID@);

ALTER TABLE SCRIPT_TEMPLATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE SCRIPT_TEMPLATES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE SEARCH_METHOD_DEFINITIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES INDEX_EXTENSION (ID@);

ALTER TABLE SECURITY_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_LABEL_COMPONENT (ID@);

ALTER TABLE SECURITY_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_ELEMENT (ID@);

ALTER TABLE SECURITY_ELEMENTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_LABEL_ELEMENT (ID@);

ALTER TABLE SECURITY_INTEGRATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SECURITY_LABEL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SECURITY_LABEL_COMPONENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SECURITY_LABEL_COMPONENTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SECURITY_POLICY (ID@);

ALTER TABLE SECURITY_LABEL_ELEMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SECURITY_LABEL (ID@);

ALTER TABLE SECURITY_POLICY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SEQUENCE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SEQUENCE_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SEQUENCE (ID@);

ALTER TABLE SESSION_USER_CONNECTION_VALUES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE SESSION_USER_GROUP_CONNECTION_VALUES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE SESSION_USER_ROLE_CONNECTION_VALUES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE SHAPE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE SHAPE_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ER_DIAGRAM (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SHAPE_GROUP (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE SHAPES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE SHARE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SNOWFLAKE_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SNOWFLAKE_DATABASE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_DATABASE (ID@);

ALTER TABLE SNOWFLAKE_FILE_FORMAT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SNOWFLAKE_FILE_FORMAT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STAGE (ID@);

ALTER TABLE SNOWFLAKE_FILE_FORMAT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE SNOWFLAKE_FUNCTION_PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE SNOWFLAKE_FUNCTION_PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SCHEMA_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_DATABASE_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_USER_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STAGE_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES WAREHOUSE_TAG (ID@);

ALTER TABLE SNOWFLAKE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE_TAG (ID@);

ALTER TABLE SNOWFLAKE_USER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SNOWFLAKE_USER_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SNOWFLAKE_USER (ID@);

ALTER TABLE SOURCE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE SOURCE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES METHOD (ID@);

ALTER TABLE SOURCE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_ASSEMBLY (ID@);

ALTER TABLE SOURCE_FILES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE SOURCE_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE SPATIAL_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE SQLSERVER_AGGREGATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_AGGREGATE_PARAMETER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_AGGREGATE (ID@);

ALTER TABLE SQLSERVER_ALWAYS_ENCRYPTED_KEY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_APPLICATION_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_APPLICATION_ROLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_ASSEMBLY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_ASSEMBLY_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_ASYMMETRIC_KEY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_ASYMMETRIC_KEY_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_AUDIT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_CERTIFICATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_CERTIFICATE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_CHANGE_DATA_CAPTURE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE SQLSERVER_CREDENTIAL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_CRYPTOGRAPHIC_PROVIDER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_DATA_COMPRESSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE SQLSERVER_DATA_COMPRESSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE SQLSERVER_DATA_COMPRESSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES COLUMN_STORE_INDEX (ID@);

ALTER TABLE SQLSERVER_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_DATABASE_AUDIT_ACTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE_AUDIT_SPECIFICATION (ID@);

ALTER TABLE SQLSERVER_DATABASE_AUDIT_SPECIFICATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_DATABASE_ENCRYPTION_KEY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_DATABASE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_DATABASE_ROLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_EXTERNAL_DATA_SOURCE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_EXTERNAL_FILE_FORMAT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_FILEGROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE SQLSERVER_FILEGROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_FILEGROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_PARTITION_SCHEME (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_CATALOG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_CATALOG_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_INDEX_COLUMN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_INDEX (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_STOPLIST
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_STOPLIST_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_FULLTEXT_STOPWORD
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FULLTEXT_STOPLIST (ID@);

ALTER TABLE SQLSERVER_FUNCTION_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_LOGIN
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_LOGIN_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_LOGINS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_PARTITION_FUNCTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_PARTITION_SCHEME
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_PHYSICAL_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_FILEGROUP (ID@);

ALTER TABLE SQLSERVER_PHYSICAL_FILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE SQLSERVER_RESOURCE_POOL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_ROLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_SCHEMA_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_SEQUENCE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_SERVER_AUDIT_SPECIFICATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_SERVER_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_SERVER_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_STORED_PROCEDURE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_SYMMETRIC_KEY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_SYMMETRIC_KEY_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_SYNONYM_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_TABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_TYPE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_USER_ID_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_VIEW_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE SQLSERVER_WORKLOAD_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_XML_SCHEMA_COLLECTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SQLSERVER_XML_SCHEMA_COLLECTION_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE STAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE STAGE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE STAGE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STAGE (ID@);

ALTER TABLE STATISTICS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE STATISTICS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE STATISTICS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE STATISTICS_COLUMN_EXPRESSION
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES STATISTICS (ID@);

ALTER TABLE STORAGE_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE STORAGE_INTEGRATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STAGE (ID@);

ALTER TABLE STORAGE_INTEGRATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE STORED_PROCEDURE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE STORED_PROCEDURES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ANNOTATION (ID@);

ALTER TABLE STORED_PROCEDURES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE STORED_PROCEDURES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE STORED_PROCEDURES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBTYPE_SYMBOL (ID@);

ALTER TABLE STORED_PROCEDURES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE STREAM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SUBJECT_AREA
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SUBSCRIBERS@
ADD CONSTRAINT SUBSCRIBES_TO FOREIGN KEY (ID@) REFERENCES ABSTRACT_OBJECT (ID@);

ALTER TABLE SUBSCRIBERS@
ADD CONSTRAINT IS_SUBSCRIBED FOREIGN KEY (REFERENCE@) REFERENCES ABSTRACT_OBJECT (ID@);

ALTER TABLE SUBTYPE_SYMBOL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SUBTYPE_SYMBOL_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE SUBTYPE_SYMBOL_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE SYBASE_SEGMENT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SYMMETRIC_KEYS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SQLSERVER_SYMMETRIC_KEY (ID@);

ALTER TABLE SYNAPSE_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SYNCH_PROPERTIES_LIST
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES LINK (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODULE (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PACKAGE (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SEQUENCE (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES STORED_PROCEDURE (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SYNONYM (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE SYNONYM
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE SYSTEM_USER_CONNECTION_VALUES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORKLOAD (ID@);

ALTER TABLE TABLE_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE TABLESPACE_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TABLESPACE_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ADBL_TABLESPACE (ID@);

ALTER TABLE TAG_DBMS_BRANDS_AND_VERSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE TAG_DBMS_IS_REPRESENTED
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE TAG_DBMS_IS_TOP_LEVEL_OBJECT
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE TAG_VSDB_BRANDS_AND_VERSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE TARGET_SERVER_AND_VERSION
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE TASK
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TASK_SESSION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TASK (ID@);

ALTER TABLE TASK_SESSION_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TASK (ID@);

ALTER TABLE TERADATA_ACCOUNT_IDS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_ID (ID@);

ALTER TABLE TERADATA_AUTHORIZATION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_AUTHORIZATION_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_COLUMN_PARTITION_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE TERADATA_COLUMN_PARTITION_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE TERADATA_COLUMN_PARTITION_GROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE TERADATA_COLUMN_PARTITION_GROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE TERADATA_DATABASE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_DATABASE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_FUNCTION_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_GLOP_SET_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_HASH_INDEX_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_JOIN_INDEX_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_MACRO_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_MONITOR_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_NORMALIZE_IGNORE_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE TERADATA_ORDER_BY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE TERADATA_ORDER_BY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES KEY_GROUP (ID@);

ALTER TABLE TERADATA_PATITIONED_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_COLUMN_PARTITION_GROUP (ID@);

ALTER TABLE TERADATA_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_PRIMARY_INDEX_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES HASH_INDEX (ID@);

ALTER TABLE TERADATA_PROFILE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_REPLICATION_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_REPLICATION_RULE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_REPLICATION_RULE_SET (ID@);

ALTER TABLE TERADATA_REPLICATION_RULE_SET
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_ROLE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_SECURE_ZONE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TERADATA_SECURE_ZONE_ROOT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TERADATA_SECURE_ZONE (ID@);

ALTER TABLE TERADATA_SERVER_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_STORED_PROCEDURE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_TABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_TYPE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_UDT_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_USER_ID_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TERADATA_VIEW_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE THEME
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TO_PRINCIPALS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE TRANS_COLUMNS_ORDER_SNAPSHOT_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE TRANS_MIGRATION_MAPPING
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES RELATIONSHIP (ID@);

ALTER TABLE TRANS_PHYSICAL_ORDER_SNAPSHOT_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE TRIGGER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE TRIGGER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TRIGGER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_DATABASE (ID@);

ALTER TABLE TRIGGER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES SQLSERVER_DATABASE (ID@);

ALTER TABLE TRIGGER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE TRIGGER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE TRIGGER_TEMPLATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TRIGGER_UPDATE_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TRIGGER (ID@);

ALTER TABLE TRIGGERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE TRIGGERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE TRIGGERS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE TRUSTED_CONTEXT
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE TRUSTED_CONTEXT_ATTRIBUTE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE TRUSTED_CONTEXT_USER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES TRUSTED_CONTEXT (ID@);

ALTER TABLE UDB_AUDIT_POLICY
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_BUFFERPOOL
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_BUFFERPOOL_PARTITION_EXCEPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE UDB_COLUMN_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ATTRIBUTE (ID@);

ALTER TABLE UDB_DATABASE_PARTITION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_DATABASE_PARTITION_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_DATABASE_PARTITION_GROUPS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_BUFFERPOOL (ID@);

ALTER TABLE UDB_DATABASE_PARTITIONS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_DATABASE_PARTITION_GROUP (ID@);

ALTER TABLE UDB_DATABASE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_DIMENSION_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE UDB_DIMENSION_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE UDB_DIMENSION_GROUP_ORDERS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE UDB_DIMENSION_GROUP_ORDERS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE UDB_DISTRIBUTION_KEY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE UDB_DISTRIBUTION_KEY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE UDB_DISTRIBUTION_KEY_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES VIEW (ID@);

ALTER TABLE UDB_EVENT_MONITOR
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_EVENT_MONITOR_GROUP
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_EVENT_MONITOR (ID@);

ALTER TABLE UDB_FUNCTION_MAPPING
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_FUNCTION_MAPPING_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_FUNCTION_MAPPING (ID@);

ALTER TABLE UDB_FUNCTION_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_GLOBAL_VARIABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_HISTOGRAM_TEMPLATE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_INDEX_EXTENSION_EXPLOITATION_RULE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES FUNCTION (ID@);

ALTER TABLE UDB_INDEX_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_LONG_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE UDB_LONG_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE UDB_MODULE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_SCHEMA_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_SECURITY_POLICY_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_SEQUENCE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_SERVER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_SERVER_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_SERVER (ID@);

ALTER TABLE UDB_SERVER_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_SERVICE_CLASS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_SERVICE_CLASS (ID@);

ALTER TABLE UDB_SERVICE_CLASS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_STORED_PROCEDURE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_TABLE_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE UDB_TABLE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_TABLESPACE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_TABLESPACE_CONTAINER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_TABLESPACE (ID@);

ALTER TABLE UDB_TABLESPACE_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES CACHED_VIEW (ID@);

ALTER TABLE UDB_TABLESPACES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ENTITY (ID@);

ALTER TABLE UDB_THRESHOLD
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_TYPE_MAPPING
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_USER_ID_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_USER_MAPPING
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_USER_MAPPING_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_USER_MAPPING (ID@);

ALTER TABLE UDB_VIEW_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_WORK_ACTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORK_ACTION_SET (ID@);

ALTER TABLE UDB_WORK_ACTION_SET
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_WORK_CLASS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE UDB_WORK_CLASS_SET
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_WORKLOAD
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_WORKLOAD_PERMISSIONS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE UDB_WORKLOADS_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_WRAPPER
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE UDB_WRAPPER_OPTION
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES UDB_WRAPPER (ID@);

ALTER TABLE UDP_MAP_SOURCE_LONG_IDS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE UDP_MAP_TARGET_LONG_IDS
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES MODEL_SOURCE (ID@);

ALTER TABLE UDT_ATTRIBUTE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE UDT_ATTRIBUTES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE UDT_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES USER_DEFINED_DATA_TYPE (ID@);

ALTER TABLE UPDATE_COLUMNS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION (ID@);

ALTER TABLE USER_ATTACHED_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES SUBJECT_AREA (ID@);

ALTER TABLE USER_DEFINED_DATA_TYPE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE USER_ID
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LANGUAGE (ID@);

ALTER TABLE USER_ID
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES EXTERNAL_LIBRARY (ID@);

ALTER TABLE USER_ID
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE USER_ID
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES DATABASE_ROLE (ID@);

ALTER TABLE USER_IDS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES PERMISSION_RECIPIENT (ID@);

ALTER TABLE USER_IDS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES TERADATA_SECURE_ZONE_ROOT (ID@);

ALTER TABLE VALID_OBJECTS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE VALID_OBJECTS_REF
ADD CONSTRAINT REFERENCES FOREIGN KEY (VALUE@) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE VALID_OWNEES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE VALID_OWNEES_REF
ADD CONSTRAINT REFERENCES FOREIGN KEY (VALUE@) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE VALID_OWNERS_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE VALID_OWNERS_REF
ADD CONSTRAINT REFERENCES FOREIGN KEY (VALUE@) REFERENCES OBJECT_TYPE (ID@);

ALTER TABLE VALID_PROPERTIES_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE VALID_PROPERTIES_REF
ADD CONSTRAINT REFERENCES FOREIGN KEY (VALUE@) REFERENCES PROPERTY_TYPE (ID@);

ALTER TABLE VALID_VALUE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VALIDATION_RULE (ID@);

ALTER TABLE VALID_VALUE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ORACLE_PARTITION_BOUNDARY (ID@);

ALTER TABLE VALIDATION_RULE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE VALUE_TYPE
ADD CONSTRAINT IS_A FOREIGN KEY (ID@) REFERENCES ABSTRACT_TYPE (ID@);

ALTER TABLE VARIABLE_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES FUNCTION (ID@);

ALTER TABLE VIEW
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE VIEW_DEFINITION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE VIEW_DEFINITION_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE VIEW_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES ER_MODEL_SHAPE (ID@);

ALTER TABLE VIEW_FILL_GRADIENT_BLEND
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES THEME (ID@);

ALTER TABLE VIEW_PERMISSIONS
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE VIEW_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES VIEW (ID@);

ALTER TABLE WAREHOUSE
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES MODEL (ID@);

ALTER TABLE WAREHOUSE_TAG
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES WAREHOUSE (ID@);

ALTER TABLE WORK_CLASSES_ORDER_REF
ADD CONSTRAINT HOLDS FOREIGN KEY (ID@) REFERENCES UDB_WORK_CLASS_SET (ID@);

ALTER TABLE XML_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES ENTITY (ID@);

ALTER TABLE XML_INDEX
ADD CONSTRAINT OWNS FOREIGN KEY (OWNER@) REFERENCES CACHED_VIEW (ID@);
